{"version":3,"sources":["webpack:///./src/mixins/paneMixin.ts","webpack:///./src/components/chart/Layout.vue?15b7","webpack:///./src/components/chart/Chart.vue?aed1","webpack:///./src/components/chart/IndicatorsOverlay.vue?a0f3","webpack:///./src/components/chart/MarketsOverlay.vue?7967","webpack:///./src/components/panes/PaneHeader.vue?8308","webpack:///./src/components/panes/PaneHeader.vue","webpack:///./src/components/panes/PaneHeader.vue?260b","webpack:///./src/components/panes/PaneHeader.vue?7137","webpack:///./src/components/chart/Chart.vue?5b62","webpack:///./src/components/chart/serieUtils.ts","webpack:///./src/components/chart/cache.ts","webpack:///./src/components/chart/serieBuilder.ts","webpack:///./src/components/chart/chart.ts","webpack:///./src/services/historicalService.ts","webpack:///./src/components/chart/Layout.vue?9b3b","webpack:///./src/components/chart/PriceScale.vue?5615","webpack:///./src/components/chart/PriceScale.vue","webpack:///./src/components/chart/PriceScale.vue?e8fe","webpack:///./src/components/chart/PriceScale.vue?5c49","webpack:///./src/components/chart/Layout.vue","webpack:///./src/components/chart/Layout.vue?bddf","webpack:///./src/components/chart/Layout.vue?4adb","webpack:///./src/components/chart/TimeframeDropdown.vue?552a","webpack:///./src/components/chart/TimeframeDropdown.vue","webpack:///./src/components/chart/TimeframeDropdown.vue?1ef6","webpack:///./src/components/chart/TimeframeDropdown.vue?2df0","webpack:///./src/components/chart/IndicatorsOverlay.vue?ac7d","webpack:///./src/components/chart/IndicatorControl.vue?3e30","webpack:///./src/components/chart/IndicatorControl.vue","webpack:///./src/components/chart/IndicatorControl.vue?e7ae","webpack:///./src/components/chart/IndicatorControl.vue?2b0a","webpack:///./src/components/chart/CreateIndicatorDialog.vue?39fa","webpack:///src/components/chart/CreateIndicatorDialog.vue","webpack:///./src/components/chart/CreateIndicatorDialog.vue?b671","webpack:///./src/components/chart/CreateIndicatorDialog.vue","webpack:///./src/components/chart/IndicatorsOverlay.vue","webpack:///./src/components/chart/IndicatorsOverlay.vue?363f","webpack:///./src/components/chart/IndicatorsOverlay.vue?e7e1","webpack:///./src/components/chart/MarketsOverlay.vue?4eef","webpack:///./src/components/chart/MarketsOverlay.vue","webpack:///./src/components/chart/MarketsOverlay.vue?57a9","webpack:///./src/components/chart/MarketsOverlay.vue?4725","webpack:///./src/components/chart/Chart.vue","webpack:///./src/components/chart/Chart.vue?b31a","webpack:///./src/components/chart/Chart.vue?28d1","webpack:///./src/components/chart/PriceScale.vue?3834","webpack:///./src/components/chart/TimeframeDropdown.vue?3338","webpack:///./src/components/chart/IndicatorControl.vue?77fc"],"names":["PaneMixin","this","$store","state","panes","paneId","$el","id","refreshZoom","$nextTick","width","clientWidth","onResize","clientHeight","addEventListener","focusPane","removeEventListener","_onStoreMutation","dispatch","commit","props","required","type","String","render","_vm","_h","$createElement","_c","_self","staticClass","class","loading","attrs","on","renamePane","_v","_s","name","maximizePane","_t","openSearch","openSettings","_e","toggleDropdown","model","value","callback","$$v","paneDropdownTrigger","expression","$event","stopPropagation","changeZoom","resetZoom","apply","arguments","zoom","toFixed","settings","duplicatePane","removePane","staticRenderFns","market","marketsListeners","markets","local","event","direction","shiftKey","$emit","async","dialogService","confirm","parentElement","classList","currentTarget","target","className","el","isMaximized","toggle","siblings","sibling","getAttribute","remove","style","display","cls","Event","window","dispatchEvent","prompt","action","input","open","default","Function","Boolean","component","scopedSlots","_u","key","fn","toggleLayout","resetChart","takeScreenshot","proxy","_l","timeframeLabel","timeframe","changeTimeframe","toggleTimeframeDropdown","timeframeForHuman","timeframeDropdownTrigger","bindLegend","unbindLegend","showIndicatorsOverlay","ref","layouting","axis","closeOHLC","close","high","low","copyOHLC","point","closeOHLCWithGaps","accumulatePoints","points","push","output","count","length","shift","accumulatePointsAverage","sum","accumulateStoch","lows","highs","avg_ohlc","next","update","renderer","nbSources","setOpen","identifier","sources","active","Math","max","min","time","localTimestamp","avg_heikinashi","avg_ohlc_with_gaps","Infinity","avg_close","ohlc","args","instruction","injected","cum_ohlc","cum","pivot_high","lengthBefore","lengthAfter","middle","i","current","pivot_low","highest","lowest","linreg","per","sumX","sumY","sumXSqr","sumXY","val","slope","average","intercept","avg","values","sma","cma","ema","k","last","rma","merge_overlapping_intervals","intervals","sort","a","b","reduce","acc","range","indexOfLast","prevRange","end","start","reverse_intervals","arr","stoch","ChartCache","chunks","cacheRange","from","to","initialPrices","chunk","index","unshift","splice","reduced","SERIE_UPDATE_REGEX","VARIABLES_VAR_NAME","FUNCTIONS_VAR_NAME","SERIE_TYPES","candlestick","bar","line","histogram","area","cloudarea","brokenarea","baseline","indicator","serieIndicatorsMap","indicatorId","store","indexOf","result","parse","script","functions","determineFunctionState","variables","determineVariableState","silentOutput","references","plots","strings","replace","STRING_REGEX","stringMatch","iterations","exec","refIndex","slice","paranthesisMatch","PARANTHESIS_REGEX","closingParenthesisIndex","contentWithinParenthesis","lastIndex","prop","JSON","stringify","error","originalOutput","instructionMatch","openingParenthesisIndex","normalizeInput","parseVariables","parseMarkets","RegExp","parseFunctions","parseReferences","formatOutput","getSilentOutput","lineBreakIt","test","lines","trim","split","sourcesMatches","match","join","VARIABLE_REGEX","variableMatch","nonPersistentVariables","variableName","isNonPersistent","variableLength","variable","determineVariablesType","serieType","closingBracketIndex","rawFunctionArguments","rawFunctionInstruction","serieOptions","parsedValue","pointVariable","seriePoint","expectedInput","timeProperty","offset","argIsObject","argContainSpecialChars","Error","serieUpdate","finalInstruction","names","Object","keys","concat","map","plot","options","instructions","FUNCTION_LOOKUP_REGEX","functionMatch","functionName","isMathFunction","prototype","hasOwnProperty","call","isSerieFunction","isMethod","parseSerie","targetFunction","injectedArgCount","customArgsStartIndex","customArgsEndIndex","customArgs","totalArgsCount","argDefinition","arg","customArg","EXCHANGE_REGEX","marketMatch","marketName","marketDataKey","replacement","REFERENCE_REGEX","referenceMatch","serieId","getSeriePath","plotIndex","find","reference","message","status","VARIABLE_LENGTH_REGEX","lengthMatch","position","hasSpecifiedIndex","substring","beforeVariable","variableReplacement","afterVariable","minLength","isNaN","plotsOptions","getCustomPlotOptions","canRender","series","loadedIndicators","renderedRange","alerts","timezoneOffset","fillGapsWithEmpty","propagateInitialPrices","priceScales","queuedTrades","seriesIndicatorsMap","_queueHandler","releaseQueue","bind","_refreshDecimalsHandler","refreshAutoDecimals","chartCache","serieBuilder","setTimeframe","setTimezoneOffset","refreshMarkets","aggregatorService","app","isExchangesReady","_promiseOfMarkets","then","historicalMarkets","normalizeWatermarks","marketsForWatermark","cachedMarkets","marketKey","exchange","localPair","exchanges","disabled","hiddenMarkets","historical","retrieveAlerts","updateWatermark","resetPriceScales","parseFloat","isOddTimeframe","originalTimezoneOffset","change","activeRenderer","containerElement","chartOptions","showVerticalGridlines","grid","vertLines","visible","color","verticalGridlinesColor","showHorizontalGridlines","horzLines","horizontalGridlinesColor","showWatermark","watermark","watermarkColor","preferedBarSpacing","barSpacing","timeScale","rightOffset","ceil","chartInstance","chartElement","addEnabledSeries","updateFontSize","removeIndicator","silent","getLoadedIndicator","auto","apis","precision","applyOptions","optionRequiresRedraw","redrawIndicator","toggleIndicatorVisibility","createIndicatorSeries","prepareIndicator","removeIndicatorSeries","redrawOptions","noRedrawOptions","addIndicator","filter","t","self","clearIndicatorSeries","bars","requiredIndicatorsIds","getReferencedIndicators","ensureIndicatorVisible","renderBars","indicatorIds","setIndicatorOption","visibleRange","getVisibleRange","indicators","othersCount","text","multiplier","watermarkBaseFontSize","layout","fontSize","dependencyDepth","indicatorSettings","indicatorOptions","adapter","silentAdapter","resolveDependency","ok","cancel","isDialogOpened","openIndicator","originalIndicatorId","missingSerieId","otherIndicatorId","build","indicatorsErrors","getRendererIndicatorData","getAdapter","prepareRendererForIndicators","priceScaleId","priceScale","scaleMargins","top","bottom","refreshPriceScale","autoScale","triggerPan","preventPan","activeChunk","indicatorsIds","_priceIndicatorId","_alertsRendered","j","removeAllPriceLines","clear","clearData","clearChart","activeRendererTimestamp","timestamp","getActiveChunk","source","empty","cloneSourceBar","newBar","destination","vbuy","vsell","cbuy","csell","lbuy","lsell","pair","barTimestamp","available","renderAll","saveChunk","rendered","removeChart","clearQueue","off","setData","_releaseQueueInterval","refreshRate","setInterval","requestAnimationFrame","clearInterval","cancelAnimationFrame","renderRealtimeTrades","trades","Array","redrawRequired","trade","round","updateBar","nextBar","createRenderer","amount","price","size","resetBar","isActive","liquidation","side","sourceBar","refreshInitialPrices","prependInitialPrices","clearPriceLines","temporaryRenderer","computedBar","computedSeries","activeBars","activeBar","cachedBar","scrollPosition","barCount","computeBar","missingBars","incrementRendererBar","replaceData","scrollToPosition","renderAlerts","remainingInitialMarkets","maxLookback","initialTimestamp","removeSeries","unbindIndicator","isPriceScaleDead","apiMethodName","customPlotOptions","api","priceFormat","ensurePriceScale","bindIndicator","panPrevented","delay","_releasePanTimeout","clearTimeout","setTimeout","_promiseOfMarketsRender","indexes","workspacesService","getAlerts","getPriceApi","renderAlert","alert","alertSound","audioService","playOnce","triggered","priceline","getPriceLine","removePriceLine","title","coordinateToLogical","timeToCoordinate","createPriceLine","alertsColor","lineWidth","alertsLineWidth","lineStyle","alertsLineStyle","seriesData","serieData","lowerValue","firstBarTimestamp","referencesA","referencesB","resetRendererBar","rendererSerieData","f","v","pop","chartMarkets","pricedMarket","minMove","pow","originalOffset","x","y","coordinateToPrice","priceLineOptions","canCreate","alertsClick","crosshair","vertLine","labelVisible","horzLine","chartColorOptions","promisesOfData","url","params","toString","encodeURIComponent","getApiUrl","fetch","response","json","results","format","normalizePoints","columns","catch","err","data","lastClosedBars","isArray","Date","refs","isOdd","marketIndex","right","updatePriceScaleScaleMargins","currentSide","roundedTop","roundedBottom","handleMove","directives","rawName","modes","updateMode","$set","domProps","handleResize","currentMoveId","currentOrigin","currentContainerHeight","0","1","2","3","getSize","release","document","resize","percentMove","getPercentMove","updateScaleMargins","move","syncable","mode","height","currentPosition","percent","origin","getContainerHeight","components","DropdownButton","watch","getActivePriceScales","body","add","activePriceScales","_originalActivePriceScales","unsyncableMoveId","syncMoveWithOthers","originalScaleMargins","hasSynced","otherId","otherScaleMargins","set","ChartPriceScale","onInput","addTimeframe","typeaheadTimeframe","label","toggleEdit","editing","group","timeframeGroups","removeTimeframe","favoriteTimeframes","toggleFavoriteTimeframe","toggleGroup","timeframes","units","unit","minute","hour","day","typeahead","order","currentUnit","groupsIds","groups","TimeframeInput","dropdownTrigger","editIndicator","selectedIndicator","resizeIndicator","duplicateIndicator","downloadIndicator","onClickIndicator","toggleOverlay","onClick","toggleVisibility","actionName","showLegend","displayName","composing","query","filteredIndicators","selectIndicator","description","handleFile","staticStyle","availableScales","setPriceScaleId","createIndicator","mixins","Dialog","computed","queryFilter","getIndicators","beforeDestroy","editor","destroy","methods","preset","slug","CreateIndicatorDialog","IndicatorControl","toggleMarkets","toggleMarket","preventDefault","showOverlay","searchMarkets","visibleMarkets","inverse","updateChartAxis","_chartController","_legendElements","subscribe","mutation","payload","setupQueue","updateGridlines","rebuildIndicator","toggleFillGapsWithEmpty","forceNormalizePrice","refreshChartDimensions","$parent","createChart","$refs","chartContainer","bindChartEvents","setupRecycle","unbindChartEvents","_recycleTimeout","destroyChart","_reachedEnd","alreadyHasData","historicalService","filterOutUnavailableMarkets","apiSupportedTimeframes","rangeToFetch","rightTime","now","barsCount","floor","bytesPerBar","estimatedSize","timeout","_loading","onHistorical","fetchMore","getVisibleLogicalRange","param","_lastCrosshairCoordinates","seriesPrices","get","formatFunction","textContent","queueTrades","triggerAlert","headerHeight","autoHideHeaders","visibleLogicalRange","_onPanTimeout","savePosition","onTrades","onAlert","subscribeVisibleLogicalRangeChange","onPan","canvas","querySelector","onLevelDragStart","unsubscribeVisibleLogicalRangeChange","_levelDragEndHandler","button","hasDialogOpened","dataAtPoint","getPricelineAtPoint","disableCrosshair","_levelDragMoveHandler","onLevelDragMove","onLevelDragEnd","startedAt","canMove","abs","clearCrosshairPosition","enableCrosshair","newPrice","alertService","moveAlert","saveAlerts","unsubscribe","alpha","ctrlKey","metaKey","coordinateToTime","finalColor","finalAlpha","finally","canvasWidth","devicePixelRatio","getBarSpacing","trimChart","setTimeToRecycle","_timeToRecycle","renderChart","fastRefreshRate","fixFastRefreshRate","indicatorLength","barsToLoad","newTimeframe","parseInt","Number","isInteger","resample","legendId","getElementById","subscribeCrosshairMove","onCrosshair","bindedLegendId","innerText","unsubscribeCrosshairMove","show","chartCanvas","createElement","ctx","getContext","pxRatio","textPadding","textFontsize","font","textAlign","textBaseline","dateString","toUTCString","lineHeight","backgroundColor","color100","getComputedStyle","documentElement","getPropertyValue","fillStyle","fillRect","theme","drawImage","offsetY","fillText","luminance","textColor","forEach","upColor","dataURL","toDataURL","startIndex","b64","substr","chartWidth","ChartLayout","PaneHeader","TimeframeDropdown","IndicatorsOverlay","MarketsOverlay"],"mappings":"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","file":"js/chunk-35847707.32238db9.js","sourcesContent":["import { Pane } from '@/store/panes'\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  props: {\n    paneId: {\n      required: true,\n      type: String\n    }\n  }\n})\nexport default class PaneMixin extends Vue {\n  paneId: string\n  protected _onStoreMutation: () => void\n\n  get pane(): Pane {\n    return this.$store.state.panes.panes[this.paneId]\n  }\n\n  mounted() {\n    this.$el.id = this.paneId\n\n    this.refreshZoom()\n\n    this.$nextTick(() => {\n      const width = this.$el.clientWidth\n\n      if (typeof this.onResize === 'function') {\n        this.onResize(width, this.$el.clientHeight, true)\n      }\n    })\n\n    this.$el.addEventListener('mousedown', this.focusPane)\n  }\n\n  beforeDestroy() {\n    this.$el.removeEventListener('mousedown', this.focusPane)\n\n    if (this._onStoreMutation) {\n      this._onStoreMutation()\n    }\n  }\n\n  refreshZoom() {\n    this.$store.dispatch('panes/refreshZoom', this.paneId)\n  }\n\n  focusPane() {\n    this.$store.commit('app/SET_FOCUSED_PANE', this.paneId)\n  }\n\n  onResize?(newWidth: number, newHeight: number, isMounting?: boolean)\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=style&index=0&id=4747b63b&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=style&index=0&id=4463ad8b&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pane-header hide-scrollbar pane-overlay d-flex\",class:{ '-loading': _vm.loading }},[_c('div',{staticClass:\"pane-header__loader\"}),_c('span',{staticClass:\"pane-header__name ml4 mrauto\",attrs:{\"data-hide-header\":\"\"},on:{\"dblclick\":_vm.renamePane}},[_vm._v(_vm._s(_vm.name))]),_c('div',{staticClass:\"toolbar flex-grow-1\",on:{\"dblclick\":_vm.maximizePane}},[_vm._t(\"default\"),_c('button',{staticClass:\"toolbar__label min-768\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSearch}},[_c('i',{staticClass:\"icon-search\"})]),(_vm.settings)?_c('button',{staticClass:\"toolbar__label min-768\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSettings}},[_c('i',{staticClass:\"icon-cog\"})]):_vm._e(),_c('button',{staticClass:\"toolbar__label\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleDropdown}},[_c('i',{staticClass:\"icon-more\"})]),_c('dropdown',{model:{value:(_vm.paneDropdownTrigger),callback:function ($$v) {_vm.paneDropdownTrigger=$$v},expression:\"paneDropdownTrigger\"}},[_c('div',{staticClass:\"d-flex btn-group\"},[_c('button',{staticClass:\"btn -green\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.changeZoom($event, -1)}}},[_c('i',{staticClass:\"icon-minus\"})]),_c('button',{staticClass:\"btn -green text-monospace flex-grow-1 text-center\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.resetZoom.apply(null, arguments)}}},[_vm._v(\" × \"+_vm._s(_vm.zoom.toFixed(2))+\" \")]),_c('button',{staticClass:\"btn -green\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.changeZoom($event, 1)}}},[_c('i',{staticClass:\"icon-plus\"})])]),_vm._t(\"menu\"),(_vm.settings !== null)?_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSettings}},[_c('i',{staticClass:\"icon-cog\"}),_c('span',[_vm._v(\"Settings\")])]):_vm._e(),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$store.dispatch('app/showSearch', _vm.paneId)}}},[_c('i',{staticClass:\"icon-search\"}),_c('span',[_vm._v(\"Sources\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.maximizePane}},[_c('i',{staticClass:\"icon-enlarge\"}),_c('span',[_vm._v(\"Maximize\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.duplicatePane}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('div',{staticClass:\"dropdown--divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.removePane}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])],2)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\nimport { getSiblings } from '@/utils/helpers'\nimport dialogService from '@/services/dialogService'\n\n@Component({\n  name: 'PaneHeader',\n  props: {\n    paneId: {\n      type: String\n    },\n    settings: {\n      type: Function,\n      default: null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\nexport default class extends Vue {\n  private settings?: () => Promise<any>\n  paneId: string\n  paneDropdownTrigger = null\n\n  get zoom() {\n    return this.$store.state.panes.panes[this.paneId].zoom || 1\n  }\n\n  get type() {\n    return this.$store.state.panes.panes[this.paneId].type\n  }\n\n  get name() {\n    const name = this.$store.state.panes.panes[this.paneId].name\n    const market = this.$store.state.panes.marketsListeners[\n      this.$store.state.panes.panes[this.paneId].markets[0]\n    ]\n\n    if (name) {\n      return name\n    } else if (market) {\n      return market.local\n    } else {\n      return this.type\n    }\n  }\n\n  openSearch() {\n    this.$store.dispatch('app/showSearch', this.paneId)\n  }\n\n  changeZoom(event, direction) {\n    const zoom = this.zoom + (event.shiftKey ? 0.0625 : 0.125) * direction\n    this.$store.dispatch('panes/setZoom', { id: this.paneId, zoom: zoom })\n\n    this.$emit('zoom', zoom)\n  }\n\n  resetZoom() {\n    this.$store.dispatch('panes/setZoom', { id: this.paneId, zoom: 1 })\n\n    this.$emit('zoom', 1)\n  }\n\n  async removePane() {\n    if (await dialogService.confirm(`Delete pane \"${this.paneId}\" ?`)) {\n      this.$store.dispatch('panes/removePane', this.paneId)\n    }\n  }\n\n  duplicatePane() {\n    this.$store.dispatch('panes/duplicatePane', this.paneId)\n  }\n\n  highlightPane(value: boolean) {\n    this.$el.parentElement.parentElement.classList[value ? 'add' : 'remove'](\n      '-highlight'\n    )\n  }\n\n  maximizePane(event) {\n    if (\n      event.type === 'dblclick' &&\n      event.currentTarget !== event.target &&\n      event.target.className !== 'toolbar__spacer'\n    ) {\n      return\n    }\n\n    const el = this.$el.parentElement.parentElement\n    const isMaximized = el.classList.toggle('-maximized')\n\n    const siblings = getSiblings(el)\n\n    for (const sibling of siblings) {\n      if (!sibling.getAttribute('type')) {\n        continue\n      }\n      sibling.classList.remove('-maximized')\n      sibling.style.display = isMaximized ? 'none' : 'block'\n    }\n\n    const cls = Event as any\n\n    window.dispatchEvent(new cls('resize'))\n  }\n\n  async renamePane() {\n    const name = await dialogService.prompt({\n      action: 'Rename',\n      input: this.name\n    })\n\n    if (name !== this.name) {\n      this.$store.commit('panes/SET_PANE_NAME', { id: this.paneId, name: name })\n    }\n  }\n\n  toggleDropdown(event) {\n    if (this.paneDropdownTrigger) {\n      this.paneDropdownTrigger = null\n    } else {\n      this.paneDropdownTrigger = event.currentTarget\n    }\n  }\n\n  async openSettings() {\n    if (!this.settings) {\n      return\n    }\n\n    dialogService.open((await this.settings()).default, {\n      paneId: this.paneId\n    })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaneHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaneHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PaneHeader.vue?vue&type=template&id=219eac84&\"\nimport script from \"./PaneHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./PaneHeader.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pane-chart\"},[_c('pane-header',{attrs:{\"paneId\":_vm.paneId,\"settings\":function () { return import('@/components/chart/ChartDialog.vue'); }},scopedSlots:_vm._u([{key:\"menu\",fn:function(){return [_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleLayout}},[_c('i',{staticClass:\"icon-resize-height\"}),_c('span',[_vm._v(\"Arrange\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.resetChart}},[_c('i',{staticClass:\"icon-refresh\"}),_c('span',[_vm._v(\"Restart\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.takeScreenshot}},[_c('i',{staticClass:\"icon-add-photo\"}),_c('span',[_vm._v(\"Snapshot\")])]),_c('div',{staticClass:\"dropdown-divider\"})]},proxy:true}])},[_vm._l((_vm.favoriteTimeframes),function(timeframeLabel,timeframe){return _c('button',{key:timeframe,staticClass:\"toolbar__label timeframe\",attrs:{\"title\":\"Maintain shift key to change timeframe on all panes\"},on:{\"click\":function($event){return _vm.changeTimeframe(timeframe)}}},[_c('span',[_vm._v(_vm._s(timeframeLabel))])])}),_c('button',{staticClass:\"-arrow toolbar__label\",on:{\"click\":_vm.toggleTimeframeDropdown}},[_vm._v(\" \"+_vm._s(_vm.timeframeForHuman)+\" \")]),_c('dropdown',{model:{value:(_vm.timeframeDropdownTrigger),callback:function ($$v) {_vm.timeframeDropdownTrigger=$$v},expression:\"timeframeDropdownTrigger\"}},[_c('timeframe-dropdown',{staticClass:\"timeframe-dropdown\",attrs:{\"pane-id\":_vm.paneId},on:{\"timeframe\":function($event){return _vm.changeTimeframe($event)}}})],1)],2),_c('div',{staticClass:\"chart-overlay hide-scrollbar\"},[_c('indicators-overlay',{attrs:{\"pane-id\":_vm.paneId},on:{\"input\":function($event){$event ? _vm.bindLegend() : _vm.unbindLegend()}},model:{value:(_vm.showIndicatorsOverlay),callback:function ($$v) {_vm.showIndicatorsOverlay=$$v},expression:\"showIndicatorsOverlay\"}}),_c('markets-overlay',{attrs:{\"pane-id\":_vm.paneId}})],1),_c('div',{ref:\"chartContainer\",staticClass:\"chart__container\"},[(_vm.layouting)?_c('chart-layout',{attrs:{\"pane-id\":_vm.paneId,\"layouting\":_vm.layouting,\"axis\":_vm.axis}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { IndicatorFunction } from './chart'\r\n\r\n/**\r\n * Close ohlc bar (all props to close value for smooth transition, but also fake opens)\r\n * @param fn\r\n */\r\nfunction closeOHLC(fn: IndicatorFunction) {\r\n  fn.state.open = fn.state.close\r\n  fn.state.high = fn.state.close\r\n  fn.state.low = fn.state.close\r\n}\r\n\r\n/**\r\n * Save (unaltered) copy of ohlc in state.point\r\n * @param fn\r\n */\r\nfunction copyOHLC(fn: IndicatorFunction) {\r\n  fn.state.point = {\r\n    open: fn.state.open,\r\n    high: fn.state.high,\r\n    low: fn.state.low,\r\n    close: fn.state.close\r\n  }\r\n}\r\n\r\n/**\r\n * Close ohlc (without keeping memory of previous close, making for real ohlc bars)\r\n * @param fn\r\n */\r\nfunction closeOHLCWithGaps(fn: IndicatorFunction) {\r\n  fn.state.open = null\r\n  fn.state.high = null\r\n  fn.state.low = null\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * @param fn\r\n */\r\nfunction accumulatePoints(fn: IndicatorFunction) {\r\n  fn.state.points.push(fn.state.output)\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.points.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * + store sum & count for easy access (& not having to loop through)\r\n * @param fn\r\n */\r\nfunction accumulatePointsAverage(fn: IndicatorFunction) {\r\n  fn.state.points.push(fn.state.output)\r\n\r\n  fn.state.sum += fn.state.output\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.sum -= fn.state.points.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * + store sum & count for easy access (& not having to loop through)\r\n * @param fn\r\n */\r\nfunction accumulateStoch(fn: IndicatorFunction) {\r\n  fn.state.lows.push(fn.state.low)\r\n  fn.state.highs.push(fn.state.high)\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.lows.shift()\r\n    fn.state.highs.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n// built-int functions are composed of the following\r\n// - a name (the keys)\r\n// - a update function (is called every time the chart is getting new data)\r\n// - a state object (the memory of the function, it's optional but most have one)\r\n// - a next function (called when on new bar - usualy to mutate the state and store current value somewhere safe)\r\nexport default {\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * use classic aggr printing (last close = next open)\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_ohlc: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: closeOHLC,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n      let setOpen = false\r\n\r\n      let open\r\n      let high = 0\r\n      let low = 0\r\n      let close = 0\r\n\r\n      if (state.open === null) {\r\n        setOpen = true\r\n        open = 0\r\n      }\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        if (setOpen) {\r\n          open += renderer.sources[identifier].open\r\n        }\r\n\r\n        high += renderer.sources[identifier].high\r\n        low += renderer.sources[identifier].low\r\n        close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        return { time: renderer.localTimestamp }\r\n      }\r\n\r\n      if (setOpen) {\r\n        state.open = open / nbSources\r\n      }\r\n\r\n      state.high = Math.max(state.open, high / nbSources)\r\n      state.low = Math.min(state.open, low / nbSources)\r\n      state.close = close / nbSources\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * use Heikin-Ashi technique (means \"average bar\" in Japanese)\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_heikinashi: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: copyOHLC,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      state.open = 0\r\n      state.high = 0\r\n      state.low = 0\r\n      state.close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        state.open += renderer.sources[identifier].open\r\n        state.high += renderer.sources[identifier].high\r\n        state.low += renderer.sources[identifier].low\r\n        state.close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        nbSources = 1\r\n      }\r\n\r\n      state.high /= nbSources\r\n      state.low /= nbSources\r\n      state.open /= nbSources\r\n      state.close =\r\n        (state.open + state.high + state.low + state.close / nbSources) / 4\r\n\r\n      if (typeof state.point !== 'undefined') {\r\n        state.open = (state.point.open + state.point.close) / 2\r\n      } else {\r\n        state.open = (state.open + state.close) / 2\r\n      }\r\n\r\n      state.low = Math.min(state.open, state.low, state.close)\r\n      state.high = Math.max(state.open, state.high, state.close)\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * calculate average open on every candle\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_ohlc_with_gaps: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: closeOHLCWithGaps,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      let open = 0\r\n      let high = 0\r\n      let low = 0\r\n      let close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        open += renderer.sources[identifier].open\r\n        high += renderer.sources[identifier].high\r\n        low += renderer.sources[identifier].low\r\n        close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        return { time: renderer.localTimestamp }\r\n      }\r\n\r\n      state.open = open / nbSources\r\n      state.high = Math.max(\r\n        state.high === null ? -Infinity : state.high,\r\n        high / nbSources\r\n      )\r\n      state.low = Math.min(\r\n        state.low === null ? Infinity : state.low,\r\n        low / nbSources\r\n      )\r\n      state.close = close / nbSources\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged close of active sources bars contained in the renderer bar\r\n   * simple average (sum / count)\r\n   * @param renderer the full bar object\r\n   * @returns {Number} close\r\n   */\r\n  avg_close: {\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      state.close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (renderer.sources[identifier].open === null) {\r\n          continue\r\n        }\r\n\r\n        state.close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        nbSources = 1\r\n      }\r\n\r\n      state.close /= nbSources\r\n\r\n      return state.close\r\n    }\r\n  },\r\n  ohlc: {\r\n    args: [\r\n      {\r\n        instruction: 'renderer.localTimestamp',\r\n        injected: true\r\n      }\r\n    ],\r\n    next: closeOHLC,\r\n    update(state, time, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n        state.high = value\r\n        state.low = value\r\n      }\r\n\r\n      state.high = Math.max(state.high, value)\r\n      state.low = Math.min(state.low, value)\r\n      state.close = value\r\n\r\n      return {\r\n        time: time,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * output cumulative of a value as ohlc\r\n   * previous bar value + current value\r\n   * high & low are produced from the fluctuations within the bar (100% client side and so depends on chart refresh rate)\r\n   * @param {Number} value value to cumulate\r\n   * @param {Number} time time is required for ohlc (just use bar.localTimestamp)\r\n   * @returns {Object} ohlc\r\n   */\r\n  cum_ohlc: {\r\n    args: [\r\n      {\r\n        instruction: 'renderer.localTimestamp',\r\n        injected: true\r\n      }\r\n    ],\r\n    next: closeOHLC,\r\n    update(state, time, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n        state.high = value\r\n        state.low = value\r\n      } else {\r\n        value = state.open + value\r\n      }\r\n\r\n      state.high = Math.max(state.high, value)\r\n      state.low = Math.min(state.low, value)\r\n      state.close = value\r\n\r\n      return {\r\n        time: time,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * output cumulative of a value\r\n   * @param {Number} value value to cumulate\r\n   * @returns {Number} previous bar value + current value\r\n   */\r\n  cum: {\r\n    next: closeOHLC,\r\n    update(state, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n      }\r\n\r\n      state.close = state.open + value\r\n\r\n      return state.close\r\n    }\r\n  },\r\n  /**\r\n   * returns price of the pivot high point\r\n   * the highest value of all the bars from lengthBefore & lengthAfter\r\n   * @param {Number} value value to get pivot from\r\n   * @param {Number} lengthBefore number of bars to check on left\r\n   * @param {Number} lengthAfter number of bars to check on right\r\n   * @returns {Number} pivot high found (will return null if no pivot found)\r\n   */\r\n  pivot_high: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      },\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, lengthBefore, lengthAfter) {\r\n      state.output = value\r\n\r\n      let middle = state.points[lengthBefore]\r\n\r\n      if (typeof middle === 'undefined') {\r\n        middle = value\r\n      }\r\n\r\n      const length = lengthBefore + lengthAfter\r\n\r\n      for (let i = 0; i <= length; i++) {\r\n        const current = i < length - 1 ? state.points[i] : value\r\n\r\n        if (current > middle) {\r\n          return null\r\n        }\r\n      }\r\n\r\n      return middle\r\n    }\r\n  },\r\n  /**\r\n   * returns price of the pivot low point\r\n   * the lowest value of all the bars from lengthBefore & lengthAfter\r\n   * @param {Number} value value to get pivot from\r\n   * @param {Number} lengthBefore number of bars to check on left\r\n   * @param {Number} lengthAfter number of bars to check on right\r\n   * @returns {Number} pivot low found (will return null if no pivot found)\r\n   */\r\n  pivot_low: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      },\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, lengthBefore, lengthAfter) {\r\n      state.output = value\r\n\r\n      let middle = state.points[lengthBefore]\r\n\r\n      if (typeof middle === 'undefined') {\r\n        middle = value\r\n      }\r\n\r\n      const length = lengthBefore + lengthAfter\r\n\r\n      for (let i = 0; i <= length; i++) {\r\n        const current = i < length - 1 ? state.points[i] : value\r\n\r\n        if (current < middle) {\r\n          return null\r\n        }\r\n      }\r\n\r\n      return middle\r\n    }\r\n  },\r\n  /**\r\n   * the highest value within a set of bars\r\n   * @param {Number} value\r\n   * @param {Number} length number of bars to keep in the set\r\n   * @returns {Number} highest value\r\n   */\r\n  highest: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count > 1) {\r\n        return Math.max.apply(null, state.points)\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * the lowest value within a set of bars\r\n   * @param {Number} value\r\n   * @param {Number} length number of bars to keep in the set\r\n   * @returns {Number} highest value\r\n   */\r\n  lowest: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count > 1) {\r\n        return Math.min.apply(null, state.points)\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n  },\r\n  linreg: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count < 1) {\r\n        return null\r\n      }\r\n\r\n      let count = 0\r\n      let per = 0\r\n      let sumX = 0\r\n      let sumY = 0\r\n      let sumXSqr = 0\r\n      let sumXY = 0\r\n\r\n      for (let i = 0; i <= state.points.length; i++) {\r\n        const val = i === state.points.length ? value : state.points[i]\r\n        per = i + 1\r\n        sumX += per\r\n        sumY += val\r\n        sumXSqr += per * per\r\n        sumXY += val * per\r\n        count++\r\n      }\r\n\r\n      const slope =\r\n        (count * sumXY - sumX * sumY) / (count * sumXSqr - sumX * sumX)\r\n      const average = sumY / count\r\n      const intercept = average - (slope * sumX) / length + slope\r\n\r\n      return intercept + slope * (count - 1)\r\n    }\r\n  },\r\n  avg: {\r\n    update(state, values) {\r\n      let count = 0\r\n      let sum = 0\r\n\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (values[i] === null) {\r\n          continue\r\n        }\r\n        sum += values[i]\r\n        count++\r\n      }\r\n\r\n      return sum / count\r\n    }\r\n  },\r\n  sum: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      state.output = value\r\n      return state.sum + value\r\n    }\r\n  },\r\n  sma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      const average = (state.sum + value) / (state.count + 1)\r\n      state.output = value\r\n      return average\r\n    }\r\n  },\r\n  cma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      state.output = (state.sum + value) / (state.count + 1)\r\n      return state.output\r\n    }\r\n  },\r\n  ema: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value, length) {\r\n      const k = 2 / (length + 1)\r\n\r\n      if (state.count) {\r\n        const last = state.points[state.points.length - 1]\r\n        state.output = (value - last) * k + last\r\n      } else {\r\n        state.output = value\r\n      }\r\n\r\n      return state.output\r\n    }\r\n  },\r\n  last: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value) {\r\n      state.output = value\r\n\r\n      return state.count ? state.points[0] : value\r\n    }\r\n  },\r\n  rma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value, length) {\r\n      const k = 1 / length\r\n\r\n      if (state.count) {\r\n        const last = state.points[state.points.length - 1]\r\n        state.output = k * value + (1 - k) * last\r\n      } else {\r\n        state.output = 1\r\n      }\r\n\r\n      return state.output\r\n    }\r\n  },\r\n  merge_overlapping_intervals: {\r\n    update(state, intervals) {\r\n      return intervals\r\n        .sort((a, b) => a[0] - b[0])\r\n        .reduce(\r\n          (acc, range) => {\r\n            const indexOfLast = acc.length - 1\r\n            const prevRange = acc[indexOfLast]\r\n            const end = prevRange[1]\r\n            const start = range[0]\r\n\r\n            if (end >= start) {\r\n              acc[indexOfLast][1] = Math.max(end, range[1])\r\n            } else {\r\n              acc.push(range)\r\n            }\r\n\r\n            return acc\r\n          },\r\n          [intervals[0]]\r\n        )\r\n    }\r\n  },\r\n  reverse_intervals: {\r\n    update(state, intervals) {\r\n      return intervals.reduce((acc, range, i, arr) => {\r\n        if (i > 0) {\r\n          acc[i - 1][1] = range[0]\r\n        }\r\n\r\n        if (i < arr.length - 1) {\r\n          acc.push([range[1]])\r\n        }\r\n\r\n        return acc\r\n      }, [])\r\n    }\r\n  },\r\n  stoch: {\r\n    args: [\r\n      null,\r\n      null,\r\n      null,\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      lows: [],\r\n      highs: []\r\n    },\r\n    next: accumulateStoch,\r\n    update(state, close, high, low) {\r\n      state.low = low\r\n      const lowest =\r\n        state.count > 0 ? Math.min(Math.min.apply(null, state.lows), low) : low\r\n\r\n      state.high = high\r\n      const highest =\r\n        state.count > 0\r\n          ? Math.max(Math.max.apply(null, state.highs), high)\r\n          : high\r\n\r\n      state.output = (100 * (close - lowest)) / (highest - lowest || 1)\r\n\r\n      return state.output\r\n    }\r\n  }\r\n}\r\n","import { Bar, TimeRange } from './chart'\n\nexport interface Chunk {\n  from: number\n  to: number\n  bars: Bar[]\n  rendered?: boolean\n  active?: boolean\n}\n\nexport default class ChartCache {\n  chunks: Chunk[] = []\n  cacheRange: TimeRange = { from: null, to: null }\n  initialPrices: {\n    [exchange: string]: {\n      pair: string\n      exchange: string\n      price: number\n    }\n  } = {}\n\n  /**\n   * append or prepend chunk to cache array\n   * and recalculate this.cacheRange\n   * @param{Chunk} chunk Chunk to add\n   */\n  saveChunk(chunk) {\n    let index\n\n    if (\n      !this.chunks.length ||\n      this.chunks[this.chunks.length - 1].to < chunk.from\n    ) {\n      index = this.chunks.push(chunk) - 1\n    } else if (this.chunks[0].from > chunk.to) {\n      this.chunks.unshift(chunk)\n      index = 0\n    } else {\n      console.warn(`\\t-> couldn't push or prepend the chunk -> abort`)\n      return\n    }\n\n    if (index === 0) {\n      this.cacheRange.from = chunk.from\n    }\n\n    if (index === this.chunks.length - 1) {\n      this.cacheRange.to = chunk.to\n    }\n\n    return chunk\n  }\n\n  clear() {\n    console.log(`[chartCache/this.chunks] clear this.chunks`)\n\n    this.chunks.splice(0, this.chunks.length)\n    this.cacheRange.from = this.cacheRange.to = null\n    this.initialPrices = {}\n  }\n\n  trim(end) {\n    if (!this.chunks.length) {\n      return\n    }\n\n    let reduced = false\n\n    while (this.chunks[0] && this.chunks[0].to < end) {\n      console.debug(\n        `[chart.cache] trim chunk (${this.chunks[0].bars.length} bars)`\n      )\n      this.chunks.splice(0, 1)\n\n      reduced = true\n    }\n\n    this.cacheRange.from = this.chunks[0].from\n\n    return reduced\n  }\n}\n","import seriesUtils from './serieUtils'\r\n\r\nimport {\r\n  IndicatorRealtimeAdapter,\r\n  IndicatorTranspilationResult,\r\n  IndicatorPlot,\r\n  IndicatorVariable,\r\n  IndicatorFunction,\r\n  LoadedIndicator,\r\n  IndicatorReference,\r\n  IndicatorMarkets\r\n} from './chart'\r\nimport store from '@/store'\r\nimport {\r\n  findClosingBracketMatchIndex,\r\n  parseFunctionArguments,\r\n  randomString,\r\n  uniqueName\r\n} from '@/utils/helpers'\r\nimport { plotTypesMap } from './options'\r\nconst SERIE_UPDATE_REGEX = /series\\[[a-zA-Z0-9+\\-$ ]+\\]\\.update\\(/\r\nconst VARIABLES_VAR_NAME = 'vars'\r\nconst FUNCTIONS_VAR_NAME = 'fns'\r\nconst SERIE_TYPES = {\r\n  candlestick: 'ohlc',\r\n  bar: 'ohlc',\r\n  line: 'number',\r\n  histogram: 'number',\r\n  area: 'number',\r\n  cloudarea: 'range',\r\n  brokenarea: 'range',\r\n  baseline: 'number'\r\n}\r\nexport default class SerieBuilder {\r\n  private paneId: string\r\n  private markets: string[]\r\n  private indicatorId: string\r\n  private serieIndicatorsMap: { [serieId: string]: IndicatorReference }\r\n\r\n  /**\r\n   * build indicator\r\n   * parse variable, functions referenced sources and indicator used in it\r\n   * prepare dedicated state for each variables and functions\r\n   * @param indicator indicator to build\r\n   * @param serieIndicatorsMap serieId => { indicatorId, plotIndex } of activated indicators for dependency matching\r\n   * @param paneId paneId that trigged the build\r\n   * @returns {IndicatorTranspilationResult} build result\r\n   */\r\n  build(\r\n    indicator: LoadedIndicator,\r\n    serieIndicatorsMap: { [serieId: string]: IndicatorReference },\r\n    paneId: string\r\n  ) {\r\n    this.paneId = paneId\r\n    this.indicatorId = indicator.id\r\n    this.serieIndicatorsMap = serieIndicatorsMap\r\n\r\n    this.markets = []\r\n    for (const market of store.state.panes.panes[this.paneId].markets) {\r\n      if (this.markets.indexOf(market) === -1) {\r\n        this.markets.push(market)\r\n      }\r\n    }\r\n\r\n    const result = this.parse(indicator.script)\r\n\r\n    // guess the initial state of each function/variable in the code\r\n    for (const instruction of result.functions) {\r\n      this.determineFunctionState(instruction)\r\n    }\r\n\r\n    for (const instruction of result.variables) {\r\n      this.determineVariableState(instruction)\r\n    }\r\n\r\n    return {\r\n      output: result.output,\r\n      silentOutput: result.silentOutput,\r\n      functions: result.functions,\r\n      variables: result.variables,\r\n      references: result.references,\r\n      markets: result.markets,\r\n      plots: result.plots\r\n    }\r\n  }\r\n\r\n  /**\r\n   * replace shorthands with real variables names :\r\n   * replace 'bar' with renderer.bar\r\n   * replace all data (vbuy, vsell etc) from bar with renderer.bar.*\r\n   * remove spaces (keep new lines)\r\n   * @param input\r\n   * @returns\r\n   */\r\n  normalizeInput(input, strings) {\r\n    input = input.replace(\r\n      /([^.])?\\b(indicatorId)\\b/gi,\r\n      `$1'${this.indicatorId}'`\r\n    )\r\n    input = input.replace(/([^.])?\\b(bar)\\b/gi, '$1renderer')\r\n    input = input.replace(\r\n      /([^.]|^)\\b(vbuy|vsell|cbuy|csell|lbuy|lsell)\\b/gi,\r\n      '$1renderer.bar.$2'\r\n    )\r\n    input = input.replace(\r\n      /([^.]|^)\\b(time)\\b([^:])/gi,\r\n      '$1renderer.localTimestamp$3'\r\n    )\r\n    input = input.replace(/(\\n|^)\\s*?\\/\\/.*/g, '')\r\n\r\n    const STRING_REGEX = /'([^']*)'|\"([^\"]*)\"/\r\n    let stringMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((stringMatch = STRING_REGEX.exec(input))) {\r\n        let refIndex = strings.indexOf(stringMatch[0])\r\n\r\n        if (refIndex === -1) {\r\n          refIndex = strings.push(stringMatch[0]) - 1\r\n        }\r\n        input =\r\n          input.slice(0, stringMatch.index) +\r\n          '#STRING_' +\r\n          refIndex +\r\n          '#' +\r\n          input.slice(stringMatch.index + stringMatch[0].length)\r\n      }\r\n    } while (stringMatch && ++iterations < 1000)\r\n\r\n    // input = input.replace(/[^\\S\\r\\n]/g, '')\r\n\r\n    const PARANTHESIS_REGEX = /\\(/g\r\n    let paranthesisMatch\r\n    iterations = 0\r\n\r\n    do {\r\n      if ((paranthesisMatch = PARANTHESIS_REGEX.exec(input))) {\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          input,\r\n          paranthesisMatch.index,\r\n          /\\(|{|\\[/,\r\n          /\\)|}|\\]/\r\n        )\r\n\r\n        if (closingParenthesisIndex !== -1) {\r\n          const contentWithinParenthesis = input\r\n            .slice(paranthesisMatch.index + 1, closingParenthesisIndex)\r\n            .replace(/\\n/g, ' ')\r\n\r\n          input =\r\n            input.slice(0, paranthesisMatch.index) +\r\n            input.slice(paranthesisMatch.index, paranthesisMatch.index + 1) +\r\n            contentWithinParenthesis.replace(/\\n/g, '') +\r\n            input.slice(closingParenthesisIndex, closingParenthesisIndex + 1) +\r\n            '\\n' +\r\n            input.slice(closingParenthesisIndex + 1, input.length)\r\n\r\n          PARANTHESIS_REGEX.lastIndex = closingParenthesisIndex\r\n        }\r\n      }\r\n    } while (paranthesisMatch && ++iterations < 1000)\r\n\r\n    return input\r\n  }\r\n\r\n  /**\r\n   * use default state instruction defined in seriesUtils for each functions\r\n   * @param instruction\r\n   * @returns void\r\n   */\r\n  determineFunctionState(instruction: IndicatorFunction) {\r\n    if (\r\n      typeof seriesUtils[instruction.name] &&\r\n      typeof seriesUtils[instruction.name].state === 'object'\r\n    ) {\r\n      instruction.state = {}\r\n\r\n      for (const prop in seriesUtils[instruction.name].state) {\r\n        try {\r\n          instruction.state[prop] = JSON.parse(\r\n            JSON.stringify(seriesUtils[instruction.name].state[prop])\r\n          )\r\n        } catch (error) {\r\n          instruction.state[prop] = seriesUtils[instruction.name].state[prop]\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    instruction.state = {}\r\n  }\r\n\r\n  /**\r\n   * use instruction.length to know how much values the variables need to keep track of\r\n   * no state needed if variable history are never called in the script\r\n   * @param instruction\r\n   */\r\n  determineVariableState(instruction: IndicatorVariable) {\r\n    if (instruction.length > 1) {\r\n      instruction.state = [0]\r\n    } else {\r\n      instruction.state = 0\r\n    }\r\n  }\r\n\r\n  getSilentOutput(originalOutput) {\r\n    let silentOutput = originalOutput\r\n\r\n    let instructionMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((instructionMatch = SERIE_UPDATE_REGEX.exec(silentOutput))) {\r\n        const openingParenthesisIndex =\r\n          instructionMatch.index + instructionMatch[0].length - 1\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          silentOutput,\r\n          openingParenthesisIndex\r\n        )\r\n        silentOutput = silentOutput.replace(\r\n          instructionMatch[0] +\r\n            silentOutput.slice(\r\n              openingParenthesisIndex + 1,\r\n              closingParenthesisIndex + 1\r\n            ),\r\n          1\r\n        )\r\n      }\r\n    } while (instructionMatch && ++iterations < 1000)\r\n\r\n    return silentOutput\r\n  }\r\n\r\n  /**\r\n   * parse variable, functions referenced sources and external indicators used in it\r\n   * @param input\r\n   * @returns\r\n   */\r\n  parse(input): IndicatorTranspilationResult {\r\n    const functions: IndicatorFunction[] = []\r\n    const variables: IndicatorVariable[] = []\r\n    const plots: IndicatorPlot[] = []\r\n    const markets: IndicatorMarkets = {}\r\n    const references: IndicatorReference[] = []\r\n    const strings = []\r\n\r\n    let output = this.normalizeInput(input, strings)\r\n\r\n    output = this.parseVariables(output, variables)\r\n\r\n    output = this.parseMarkets(output, markets)\r\n\r\n    for (let i = 0; i < strings.length; i++) {\r\n      output = output.replace(\r\n        new RegExp('#STRING_' + i + '#', 'g'),\r\n        strings[i].replace(/\\$/g, '$$$')\r\n      )\r\n    }\r\n\r\n    output = this.parseFunctions(output, functions, plots)\r\n    output = this.parseReferences(output, references, plots)\r\n\r\n    output = this.formatOutput(output)\r\n\r\n    const silentOutput = this.getSilentOutput(output)\r\n\r\n    return {\r\n      output,\r\n      silentOutput,\r\n      functions,\r\n      variables,\r\n      plots,\r\n      markets,\r\n      references\r\n    }\r\n  }\r\n\r\n  formatOutput(input) {\r\n    const PARANTHESIS_REGEX = /\\(|{|\\[/g\r\n\r\n    let paranthesisMatch\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((paranthesisMatch = PARANTHESIS_REGEX.exec(input))) {\r\n        const lineBreakIt = paranthesisMatch[0] === '('\r\n\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          input,\r\n          paranthesisMatch.index,\r\n          /\\(|{|\\[/,\r\n          /\\)|}|\\]/\r\n        )\r\n        const contentWithinParenthesis = input\r\n          .slice(paranthesisMatch.index + 1, closingParenthesisIndex)\r\n          .replace(/\\n/g, ' ')\r\n\r\n        if (/if|for|else/.test(input.slice(paranthesisMatch.index - 2, 2))) {\r\n          input =\r\n            input.slice(0, paranthesisMatch.index) +\r\n            input.slice(paranthesisMatch.index, paranthesisMatch.index + 1) +\r\n            contentWithinParenthesis +\r\n            input.slice(closingParenthesisIndex, closingParenthesisIndex + 1) +\r\n            (lineBreakIt ? '\\n' : '') +\r\n            input.slice(closingParenthesisIndex + 1, input.length)\r\n        }\r\n\r\n        PARANTHESIS_REGEX.lastIndex = closingParenthesisIndex\r\n      }\r\n    } while (paranthesisMatch && ++iterations < 1000)\r\n\r\n    const lines = input.trim().split(/\\n/)\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const sourcesMatches = lines[i].match(\r\n        /renderer.sources\\['[\\w/:_-]+']\\.\\w+/g\r\n      )\r\n\r\n      if (sourcesMatches && sourcesMatches.length === 1) {\r\n        lines[i] = `if (${sourcesMatches[0]}) {\r\n          ${lines[i]}\r\n        }`\r\n      }\r\n    }\r\n\r\n    return lines.join('\\n').replace(/\\n\\n/g, '\\n')\r\n  }\r\n\r\n  parseVariables(output, variables): string {\r\n    const VARIABLE_REGEX = /(?:^|\\n)\\s*((?:var )?[a-zA-Z0-9_]+)\\(?(\\d*)\\)?\\s*=\\s*([^\\n;,]*)?/\r\n    let variableMatch = null\r\n    let iterations = 0\r\n\r\n    const nonPersistentVariables = []\r\n\r\n    do {\r\n      if ((variableMatch = VARIABLE_REGEX.exec(output))) {\r\n        let variableName = variableMatch[1]\r\n        const isNonPersistent = /^var/.test(variableName)\r\n\r\n        if (\r\n          nonPersistentVariables.indexOf(variableName) !== -1 ||\r\n          isNonPersistent\r\n        ) {\r\n          if (isNonPersistent) {\r\n            variableName = variableName.replace(/var\\s*/, '')\r\n            output = output.replace(\r\n              variableMatch[0],\r\n              '\\nvar ' + variableName + '=' + variableMatch[3]\r\n            )\r\n            nonPersistentVariables.push(variableName)\r\n          }\r\n\r\n          // eslint-disable-next-line no-useless-escape\r\n          output = output.replace(\r\n            new RegExp(\r\n              '([^.$]|^)\\\\b(' + variableName + ')\\\\b(?!:)(?!\\\\()(?!\\\\$)',\r\n              'ig'\r\n            ),\r\n            `$1${variableName}$`\r\n          )\r\n          continue\r\n        }\r\n\r\n        const variableLength = +variableMatch[2] || 1\r\n\r\n        output = output.replace(\r\n          new RegExp('([^.]|^)\\\\b(' + variableName + ')\\\\b(?!:)', 'ig'),\r\n          `$1${VARIABLES_VAR_NAME}[${variables.length}]`\r\n        )\r\n\r\n        const variable: IndicatorVariable = {\r\n          length: variableLength\r\n        }\r\n\r\n        variables.push(variable)\r\n        output = output.replace(\r\n          new RegExp(\r\n            `(${VARIABLES_VAR_NAME}\\\\[${variables.length - 1}\\\\])\\\\(${\r\n              variable.length\r\n            }\\\\)\\\\s*=\\\\s*`\r\n          ),\r\n          '$1='\r\n        )\r\n      }\r\n    } while (variableMatch && ++iterations < 1000)\r\n\r\n    output = this.determineVariablesType(output, variables)\r\n\r\n    return output\r\n  }\r\n\r\n  parseSerie(output: string, match: RegExpExecArray, plots: IndicatorPlot[]) {\r\n    // absolute serie type eg. plotline -> line)\r\n    const serieType = match[1].replace(/^plot/, '')\r\n\r\n    // serie arguments eg. sma($price.close,options.smaLength),color=red\r\n    const closingBracketIndex = findClosingBracketMatchIndex(\r\n      output,\r\n      match.index + match[1].length\r\n    )\r\n    const rawFunctionArguments = output.slice(\r\n      match.index + match[1].length + 1,\r\n      closingBracketIndex\r\n    )\r\n\r\n    // full function call eg. plotline(sma($price.close,options.smaLength),color=red)\r\n    const rawFunctionInstruction = match[1] + '(' + rawFunctionArguments + ')'\r\n\r\n    // plot function arguments ['sma($price.close,options.smaLength)','color=red']\r\n    const args = parseFunctionArguments(rawFunctionArguments)\r\n    const serieOptions: { [key: string]: any } = {}\r\n\r\n    // parse and store serie options in dedicated object (eg. color=red in plotline arguments)\r\n    for (let i = 1; i < args.length; i++) {\r\n      try {\r\n        const [, key, value] = args[i].match(/^(\\w+)\\s*=(.*)/)\r\n\r\n        if (!key || !value.length) {\r\n          continue\r\n        }\r\n\r\n        let parsedValue = value.trim()\r\n\r\n        try {\r\n          parsedValue = JSON.parse(parsedValue)\r\n        } catch (error) {\r\n          // value a string\r\n        }\r\n\r\n        serieOptions[key.trim()] = parsedValue\r\n\r\n        args.splice(i, 1)\r\n        i--\r\n      } catch (error) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    // prepare final input that goes in plotline (store it for reference)\r\n    const pointVariable = `renderer.indicators['${this.indicatorId}'].series[${plots.length}]`\r\n    let seriePoint = `${pointVariable} = `\r\n\r\n    const expectedInput = SERIE_TYPES[serieType]\r\n    let timeProperty = `renderer.localTimestamp`\r\n\r\n    if (serieOptions.offset) {\r\n      timeProperty += `+renderer.timeframe*${serieOptions.offset}`\r\n    }\r\n\r\n    // tranform input into valid lightweight-charts data point\r\n    const argIsObject = /{/.test(args[0]) && /}/.test(args[0])\r\n    const argContainSpecialChars = /^[\\w_$]+\\$/.test(args[0])\r\n    if (\r\n      args.length === 1 &&\r\n      (argIsObject || (serieType !== 'line' && argContainSpecialChars))\r\n    ) {\r\n      seriePoint += args[0]\r\n    } else if (expectedInput === 'ohlc') {\r\n      if (args.length === 4) {\r\n        seriePoint += `{ time: ${timeProperty}, open: ${args[0]}, high: ${args[1]}, low: ${args[2]}, close: ${args[3]} }`\r\n      } else if (args.length === 1) {\r\n        if (/^[A-Z_]+:\\w+/.test(args[0])) {\r\n          seriePoint += `${args[0]}.close === null ? { time: ${timeProperty} } : { time: ${timeProperty}, open: ${args[0]}.open, high: ${args[0]}.high, low: ${args[0]}.low, close: ${args[0]}.close }`\r\n        } else {\r\n          seriePoint += args[0]\r\n        }\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected a ohlc object or 4 number`\r\n        )\r\n      }\r\n    } else if (expectedInput === 'range') {\r\n      if (args.length === 2) {\r\n        seriePoint += `{ time: ${timeProperty}, lowerValue: ${args[0]}, higherValue: ${args[1]} }`\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected 2 arguments (lowerValue and higherValue)`\r\n        )\r\n      }\r\n    } else if (expectedInput === 'number') {\r\n      if (args.length === 1) {\r\n        seriePoint += `{ time: ${timeProperty}, value: ${args[0]} }`\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected 1 value (number)`\r\n        )\r\n      }\r\n    }\r\n\r\n    // this line will paint the point\r\n    const serieUpdate = `series[${plots.length}].update(renderer.indicators['${this.indicatorId}'].series[${plots.length}])`\r\n\r\n    // put everything together\r\n    let finalInstruction = seriePoint + ','\r\n\r\n    if (serieType === 'histogram') {\r\n      // only update point if there is a value to avoid long histogram * base line * at zero\r\n      finalInstruction += pointVariable + '.value&&'\r\n    } else if (serieType === 'line') {\r\n      // prevent null\r\n      finalInstruction += pointVariable + '.value !== null&&'\r\n    } else if (serieType === 'cloudarea' || serieType === 'brokenarea') {\r\n      // prevent null\r\n      finalInstruction += pointVariable + '.lowerValue !== null&&'\r\n    }\r\n\r\n    finalInstruction += serieUpdate\r\n\r\n    output = output.replace(rawFunctionInstruction, finalInstruction)\r\n\r\n    let id: string\r\n\r\n    if (typeof serieOptions.id === 'string' && serieOptions.id.length) {\r\n      id = serieOptions.id\r\n\r\n      delete serieOptions.id\r\n    } else if (plots.length === 0) {\r\n      id = this.indicatorId\r\n    } else {\r\n      id = randomString(8)\r\n    }\r\n\r\n    const names = Object.keys(this.serieIndicatorsMap).concat(\r\n      plots.map(plot => plot.id)\r\n    )\r\n\r\n    // register plot\r\n    plots.push({\r\n      id: uniqueName(id, names),\r\n      type: plotTypesMap[serieType] || serieType,\r\n      expectedInput: expectedInput,\r\n      options: serieOptions\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  parseFunctions(\r\n    output: string,\r\n    instructions: IndicatorFunction[],\r\n    plots: IndicatorPlot[]\r\n  ): string {\r\n    const FUNCTION_LOOKUP_REGEX = new RegExp(`([a-zA-Z0_9_]+)\\\\(`, 'g')\r\n\r\n    let functionMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((functionMatch = FUNCTION_LOOKUP_REGEX.exec(output))) {\r\n        const functionName = functionMatch[1]\r\n\r\n        const isMathFunction = Object.prototype.hasOwnProperty.call(\r\n          Math,\r\n          functionName\r\n        )\r\n        const isSerieFunction = SERIE_TYPES[functionName.replace(/^plot/, '')]\r\n        const isMethod = output[functionMatch.index - 1] === '.'\r\n\r\n        if (isMathFunction || isSerieFunction || isMethod) {\r\n          FUNCTION_LOOKUP_REGEX.lastIndex =\r\n            functionMatch.index + functionMatch[0].length\r\n\r\n          if (typeof isSerieFunction === 'string') {\r\n            output = this.parseSerie(output, functionMatch, plots)\r\n          }\r\n          continue\r\n        }\r\n\r\n        const targetFunction = seriesUtils[functionName]\r\n\r\n        if (!targetFunction) {\r\n          if (/for|if|rgba/i.test(functionName)) {\r\n            FUNCTION_LOOKUP_REGEX.lastIndex =\r\n              functionMatch.index + functionMatch[0].length\r\n            continue\r\n          } else {\r\n            throw new Error(`Function ${functionName} doesn't exists`)\r\n          }\r\n        }\r\n\r\n        const instruction: IndicatorFunction = {\r\n          name: functionName,\r\n          args: []\r\n        }\r\n\r\n        let injectedArgCount = 0\r\n\r\n        const customArgsStartIndex = functionMatch.index\r\n        const customArgsEndIndex = findClosingBracketMatchIndex(\r\n          output,\r\n          customArgsStartIndex + functionMatch[1].length\r\n        )\r\n        const customArgs = parseFunctionArguments(\r\n          output.slice(\r\n            customArgsStartIndex + functionMatch[1].length + 1,\r\n            customArgsEndIndex\r\n          )\r\n        )\r\n        let totalArgsCount =\r\n          (targetFunction.args ? targetFunction.args.length : 0) +\r\n          customArgs.length\r\n\r\n        for (let i = 0; i < totalArgsCount; i++) {\r\n          const argDefinition =\r\n            targetFunction.args && targetFunction.args[i]\r\n              ? targetFunction.args[i]\r\n              : {}\r\n\r\n          const arg = {\r\n            ...argDefinition\r\n          }\r\n\r\n          if (argDefinition.injected) {\r\n            injectedArgCount++\r\n\r\n            instruction.args.push(arg)\r\n\r\n            continue\r\n          } else {\r\n            totalArgsCount--\r\n          }\r\n\r\n          const customArg = customArgs[i - injectedArgCount]\r\n\r\n          if (typeof customArg !== 'undefined') {\r\n            arg.instruction = customArg\r\n          }\r\n\r\n          instruction.args.push(arg)\r\n        }\r\n\r\n        output = `${output.slice(\r\n          0,\r\n          customArgsStartIndex\r\n        )}utils.${functionName}.update(${FUNCTIONS_VAR_NAME}[${\r\n          instructions.length\r\n        }].state,${instruction.args\r\n          .map(a => a.instruction)\r\n          .join(',')})${output.slice(customArgsEndIndex + 1, output.length)}`\r\n\r\n        instructions.push(instruction)\r\n      }\r\n    } while (functionMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n\r\n  parseMarkets(output: string, markets: IndicatorMarkets): string {\r\n    const EXCHANGE_REGEX = /\\b([A-Z_]{3,}:[a-zA-Z0-9/_-]{5,})(:[\\w]{4,})?\\.?([a-z]{3,})?\\b/g\r\n\r\n    let marketMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((marketMatch = EXCHANGE_REGEX.exec(output))) {\r\n        const marketName =\r\n          marketMatch[1] + (marketMatch[2] ? marketMatch[2] : '')\r\n        const marketDataKey = marketMatch[3]\r\n\r\n        if (!markets[marketName]) {\r\n          markets[marketName] = []\r\n        }\r\n\r\n        if (marketDataKey) {\r\n          if (markets[marketName].indexOf(marketDataKey) === -1) {\r\n            markets[marketName].push(marketDataKey)\r\n          }\r\n        }\r\n\r\n        const replacement = `renderer.sources['${marketName}']${\r\n          marketDataKey ? '.' + marketDataKey : ''\r\n        }`\r\n\r\n        EXCHANGE_REGEX.lastIndex = marketMatch.index + replacement.length\r\n\r\n        output =\r\n          output.slice(0, marketMatch.index) +\r\n          replacement +\r\n          output.slice(marketMatch.index + marketMatch[0].length)\r\n      }\r\n    } while (marketMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n  parseReferences(\r\n    output: string,\r\n    references: IndicatorReference[],\r\n    plots: IndicatorPlot[]\r\n  ): string {\r\n    const REFERENCE_REGEX = new RegExp('\\\\$(\\\\w+[a-z_\\\\-0-9]+)\\\\b')\r\n\r\n    let referenceMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((referenceMatch = REFERENCE_REGEX.exec(output))) {\r\n        const serieId = referenceMatch[1]\r\n\r\n        try {\r\n          const [indicatorId, plotIndex] = this.getSeriePath(serieId, plots)\r\n\r\n          if (\r\n            !references.find(\r\n              reference =>\r\n                reference.indicatorId === indicatorId &&\r\n                reference.plotIndex === plotIndex\r\n            )\r\n          ) {\r\n            references.push({\r\n              indicatorId,\r\n              serieId,\r\n              plotIndex\r\n            })\r\n          }\r\n\r\n          output = output.replace(\r\n            new RegExp('\\\\$(' + serieId + ')\\\\b', 'ig'),\r\n            `renderer.indicators['${indicatorId}'].series[${plotIndex}]`\r\n          )\r\n        } catch (error) {\r\n          throw {\r\n            message: `The serie \"${serieId}\" was not found in the current indicators`,\r\n            status: 'indicator-required',\r\n            serieId: serieId\r\n          }\r\n        }\r\n      }\r\n    } while (referenceMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n\r\n  getSeriePath(serieId: string, plots: IndicatorPlot[]): [string, number] {\r\n    let indicatorId: string\r\n    let plotIndex: number\r\n\r\n    // see if we can find the serie in the plots that are already processed\r\n    const reference = plots.find(\r\n      plot =>\r\n        plot.id === serieId ||\r\n        plot.id.replace(/\\W/g, '') === serieId.replace(/\\W/g, '')\r\n    )\r\n\r\n    if (reference) {\r\n      indicatorId = this.indicatorId\r\n      plotIndex = plots.indexOf(reference)\r\n    }\r\n\r\n    // or in the others indicator that are already in\r\n    if (!indicatorId && this.serieIndicatorsMap[serieId]) {\r\n      ;({ indicatorId, plotIndex } = this.serieIndicatorsMap[serieId])\r\n    }\r\n\r\n    // or match with indicatorId, taking first serie as result\r\n    if (\r\n      !indicatorId &&\r\n      Object.values(this.serieIndicatorsMap)\r\n        .map(a => a.indicatorId)\r\n        .indexOf(serieId) !== -1\r\n    ) {\r\n      indicatorId = serieId\r\n      plotIndex = 0\r\n    }\r\n\r\n    if (indicatorId) {\r\n      return [indicatorId, plotIndex]\r\n    }\r\n  }\r\n\r\n  determineVariablesType(output, variables: IndicatorVariable[]) {\r\n    for (const variable of variables) {\r\n      const index = variables.indexOf(variable)\r\n      const VARIABLE_LENGTH_REGEX = new RegExp(\r\n        `${VARIABLES_VAR_NAME}\\\\[${index}\\\\](?:\\\\[(\\\\d+)\\\\])?`,\r\n        'g'\r\n      )\r\n\r\n      let lengthMatch = null\r\n      let iterations = 0\r\n\r\n      do {\r\n        if ((lengthMatch = VARIABLE_LENGTH_REGEX.exec(output))) {\r\n          const variableLength = lengthMatch[1]\r\n          const position = lengthMatch.index + lengthMatch[0].length\r\n\r\n          if (typeof variableLength === 'undefined') {\r\n            const hasSpecifiedIndex = output[position] === '['\r\n            output =\r\n              output.substring(0, position) +\r\n              '.state' +\r\n              (!hasSpecifiedIndex ? '[0]' : '') +\r\n              output.substring(position)\r\n          } else {\r\n            const beforeVariable = output.substring(0, lengthMatch.index)\r\n            const variableReplacement = `${VARIABLES_VAR_NAME}[${index}].state[Math.min(${VARIABLES_VAR_NAME}[${index}].state.length-1,${variableLength})]`\r\n            const afterVariable = output.substring(\r\n              lengthMatch.index + lengthMatch[0].length\r\n            )\r\n            output = `${beforeVariable}${variableReplacement}${afterVariable}`\r\n\r\n            VARIABLE_LENGTH_REGEX.lastIndex =\r\n              beforeVariable.length + variableReplacement.length\r\n          }\r\n\r\n          variable.length = Math.max(\r\n            variable.length,\r\n            (+variableLength || 0) + 1\r\n          )\r\n        }\r\n      } while (lengthMatch && ++iterations < 1000)\r\n\r\n      if (!variable.length) {\r\n        throw new Error('Unexpected no length on var')\r\n      }\r\n\r\n      if (variable.length === 1) {\r\n        output = output.replace(\r\n          new RegExp(\r\n            `${VARIABLES_VAR_NAME}\\\\[${index}\\\\]\\\\.state\\\\[\\\\d+\\\\]`,\r\n            'g'\r\n          ),\r\n          `${VARIABLES_VAR_NAME}[${index}].state`\r\n        )\r\n      }\r\n\r\n      output = output.replace(\r\n        new RegExp(\r\n          `#${VARIABLES_VAR_NAME}\\\\[${index}\\\\]\\\\.state\\\\[\\\\d+\\\\]`,\r\n          'g'\r\n        ),\r\n        `${VARIABLES_VAR_NAME}[${index}].state`\r\n      )\r\n    }\r\n\r\n    return output\r\n  }\r\n\r\n  getAdapter(output) {\r\n    return (function() {\r\n      'use strict'\r\n      return new Function(\r\n        'renderer',\r\n        FUNCTIONS_VAR_NAME,\r\n        VARIABLES_VAR_NAME,\r\n        'series',\r\n        'options',\r\n        'utils',\r\n        '\"use strict\"; ' + output\r\n      )\r\n    })() as IndicatorRealtimeAdapter\r\n  }\r\n\r\n  /**\r\n   * get fresh state of indicator for the renderer\r\n   * @param indicator\r\n   */\r\n  getRendererIndicatorData(indicator: LoadedIndicator) {\r\n    const { functions, variables, plots } = JSON.parse(\r\n      JSON.stringify(indicator.model)\r\n    ) as IndicatorTranspilationResult\r\n\r\n    indicator.options.minLength = 0\r\n\r\n    // update functions arguments from script input\r\n    for (const instruction of functions) {\r\n      instruction.length = 0\r\n\r\n      for (let i = 0; i < instruction.args.length; i++) {\r\n        if (\r\n          typeof instruction.args[i].instruction === 'undefined' ||\r\n          instruction.args[i].instruction === ''\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        try {\r\n          instruction.args[i].instruction = new Function(\r\n            'options',\r\n            `'use strict'; return ${instruction.args[i].instruction}`\r\n          )(indicator.options)\r\n\r\n          if (\r\n            instruction.args[i].length &&\r\n            !isNaN(instruction.args[i].instruction)\r\n          ) {\r\n            instruction.length += instruction.args[i].instruction\r\n          }\r\n        } catch (error) {\r\n          // nothing to see here\r\n        }\r\n      }\r\n\r\n      indicator.options.minLength = Math.max(\r\n        indicator.options.minLength,\r\n        instruction.length\r\n      )\r\n    }\r\n\r\n    const plotsOptions = []\r\n\r\n    // update plot options from script input\r\n    for (const plot of plots) {\r\n      plotsOptions.push(this.getCustomPlotOptions(indicator, plot))\r\n    }\r\n\r\n    return {\r\n      canRender: indicator.options.minLength <= 1,\r\n      series: [],\r\n      functions,\r\n      variables,\r\n      plotsOptions,\r\n      minLength: indicator.options.minLength\r\n    }\r\n  }\r\n\r\n  getCustomPlotOptions(indicator, plot) {\r\n    // update plot options from script input\r\n\r\n    const options = {}\r\n\r\n    for (const prop in plot.options) {\r\n      try {\r\n        options[prop] = new Function(\r\n          'options',\r\n          `'use strict'; return ${plot.options[prop]}`\r\n        )(indicator.options)\r\n      } catch (error) {\r\n        options[prop] = plot.options[prop]\r\n      }\r\n    }\r\n\r\n    return options\r\n  }\r\n}\r\n","import { MAX_BARS_PER_CHUNKS } from '../../utils/constants'\r\nimport {\r\n  getHms,\r\n  camelize,\r\n  getTimeframeForHuman,\r\n  floorTimestampToTimeframe,\r\n  isOddTimeframe\r\n} from '../../utils/helpers'\r\nimport {\r\n  defaultChartOptions,\r\n  defaultPlotsOptions,\r\n  defaultSerieOptions,\r\n  getChartCustomColorsOptions,\r\n  getChartOptions\r\n} from './options'\r\nimport store from '../../store'\r\nimport seriesUtils from './serieUtils'\r\nimport * as TV from 'lightweight-charts'\r\nimport ChartCache, { Chunk } from './cache'\r\nimport SerieBuilder from './serieBuilder'\r\nimport { MarketAlert, Trade } from '@/types/types'\r\nimport dialogService from '@/services/dialogService'\r\nimport { ChartPaneState, PriceScaleSettings } from '@/store/panesSettings/chart'\r\nimport { waitForStateMutation } from '../../utils/store'\r\nimport aggregatorService from '@/services/aggregatorService'\r\nimport workspacesService from '@/services/workspacesService'\r\nimport { getEventOffset } from '@/utils/touchevent'\r\nimport {\r\n  formatPrice,\r\n  stripStable,\r\n  marketDecimals\r\n} from '@/services/productsService'\r\nimport audioService from '../../services/audioService'\r\n\r\nexport interface Bar {\r\n  vbuy?: number\r\n  vsell?: number\r\n  cbuy?: number\r\n  csell?: number\r\n  lbuy?: number\r\n  lsell?: number\r\n  exchange?: string\r\n  pair?: string\r\n  timestamp?: number\r\n  open?: number\r\n  high?: number\r\n  low?: number\r\n  close?: number\r\n  empty?: boolean\r\n  active?: boolean\r\n}\r\n\r\nexport interface IndicatorApi extends TV.ISeriesApi<any> {\r\n  id: string\r\n  precision?: number\r\n}\r\n\r\nexport type IndicatorMarkets = {\r\n  [marketId: string]: string[]\r\n}\r\n\r\nexport interface TimeRange {\r\n  from: number\r\n  to: number\r\n}\r\n\r\nexport interface OHLC {\r\n  open: number\r\n  high: number\r\n  low: number\r\n  close: number\r\n}\r\n\r\nexport type IndicatorRealtimeAdapter = (\r\n  renderer: Renderer,\r\n  functions: IndicatorFunction[],\r\n  variables: IndicatorVariable[],\r\n  apis: IndicatorApi[],\r\n  options: TV.SeriesOptions<any>,\r\n  seriesUtils: any\r\n) => void\r\nexport interface LoadedIndicator {\r\n  id: string\r\n  options: any\r\n  script: string\r\n  model: IndicatorTranspilationResult\r\n  adapter: IndicatorRealtimeAdapter\r\n  silentAdapter: IndicatorRealtimeAdapter\r\n  apis: IndicatorApi[]\r\n}\r\n\r\nexport interface IndicatorTranspilationResult {\r\n  output: string\r\n  silentOutput: string\r\n  variables: IndicatorVariable[]\r\n  functions: IndicatorFunction[]\r\n  plots: IndicatorPlot[]\r\n  markets?: IndicatorMarkets\r\n  references?: IndicatorReference[]\r\n}\r\nexport interface IndicatorFunction {\r\n  name: string\r\n  args?: any[]\r\n  length?: number\r\n  state?: any\r\n  next?: Function\r\n}\r\nexport interface IndicatorVariable {\r\n  length?: number\r\n  state?: any\r\n}\r\nexport interface IndicatorPlot {\r\n  id: string\r\n  type: string\r\n  expectedInput: 'number' | 'ohlc' | 'range'\r\n  options: { [prop: string]: any }\r\n}\r\nexport interface IndicatorReference {\r\n  indicatorId: string\r\n  serieId?: string\r\n  plotIndex: number\r\n}\r\nexport interface Renderer {\r\n  type: 'time' | 'tick'\r\n  timeframe: number\r\n  timestamp: number\r\n  localTimestamp: number\r\n  renderedTimestamp?: number\r\n  length: number\r\n  bar: Bar\r\n  sources: { [name: string]: Bar }\r\n  indicators: { [id: string]: RendererIndicatorData }\r\n  empty?: boolean\r\n}\r\n\r\ninterface RendererIndicatorData {\r\n  canRender: boolean\r\n  series: {\r\n    time: number\r\n    value?: number\r\n    open?: number\r\n    high?: number\r\n    low?: number\r\n    close?: number\r\n    color?: string\r\n    higherValue?: number\r\n    lowerValue?: number\r\n  }[]\r\n  variables: IndicatorVariable[]\r\n  functions: IndicatorFunction[]\r\n  plotsOptions?: any[]\r\n  minLength?: number\r\n}\r\n\r\nexport default class ChartController {\r\n  paneId: string\r\n  watermark: string\r\n\r\n  chartInstance: TV.IChartApi\r\n  chartElement: HTMLElement\r\n  loadedIndicators: LoadedIndicator[] = []\r\n  panPrevented: boolean\r\n  activeRenderer: Renderer\r\n  renderedRange: TimeRange = { from: null, to: null }\r\n  chartCache: ChartCache\r\n  markets: {\r\n    [identifier: string]: {\r\n      active: boolean\r\n      index: string\r\n      historical: boolean\r\n    }\r\n  } = {}\r\n  alerts: {\r\n    [identifier: string]: MarketAlert[]\r\n  } = {}\r\n  timezoneOffset = 0\r\n  fillGapsWithEmpty = true\r\n  timeframe: number\r\n  isOddTimeframe: boolean\r\n  type: 'time' | 'tick'\r\n  propagateInitialPrices = true\r\n  priceScales: string[] = []\r\n\r\n  private activeChunk: Chunk\r\n  private queuedTrades: Trade[] = []\r\n  private serieBuilder: SerieBuilder\r\n  private seriesIndicatorsMap: { [serieId: string]: IndicatorReference } = {}\r\n\r\n  private _releaseQueueInterval: number\r\n  private _releasePanTimeout: number\r\n  private _queueHandler = this.releaseQueue.bind(this)\r\n  private _refreshDecimalsHandler = this.refreshAutoDecimals.bind(this)\r\n  private _promiseOfMarkets: Promise<void>\r\n  private _promiseOfMarketsRender: Promise<void>\r\n  private _priceIndicatorId: string\r\n  private _alertsRendered: boolean\r\n\r\n  constructor(id: string) {\r\n    this.paneId = id\r\n\r\n    this.chartCache = new ChartCache()\r\n    this.serieBuilder = new SerieBuilder()\r\n\r\n    this.setTimeframe(store.state[this.paneId].timeframe)\r\n    this.setTimezoneOffset(store.state.settings.timezoneOffset)\r\n    this.refreshMarkets()\r\n    aggregatorService.on('decimals', this._refreshDecimalsHandler)\r\n\r\n    this.fillGapsWithEmpty = Boolean(store.state[this.paneId].fillGapsWithEmpty)\r\n  }\r\n\r\n  /**\r\n   * update watermark when pane's markets changes\r\n   */\r\n  async refreshMarkets() {\r\n    if (!store.state.app.isExchangesReady) {\r\n      // exchanges are still loading (probably fetching products)\r\n      // we need to call this again once fully loaded\r\n      if (!this._promiseOfMarkets) {\r\n        this._promiseOfMarkets = waitForStateMutation(\r\n          state => state.app.isExchangesReady\r\n        ).then(this.refreshMarkets.bind(this))\r\n      } else {\r\n        return this._promiseOfMarkets\r\n      }\r\n    } else if (this._promiseOfMarkets) {\r\n      this._promiseOfMarkets = null\r\n    }\r\n\r\n    const markets = store.state.panes.panes[this.paneId].markets\r\n    const historicalMarkets = store.state.app.historicalMarkets\r\n    const normalizeWatermarks = store.state.settings.normalizeWatermarks\r\n    const marketsForWatermark = []\r\n    const cachedMarkets: any = {}\r\n\r\n    for (const marketKey of markets) {\r\n      const [exchange] = marketKey.split(':')\r\n      const market = store.state.panes.marketsListeners[marketKey]\r\n\r\n      let localPair = marketKey\r\n\r\n      if (market) {\r\n        localPair = stripStable(market.local)\r\n      }\r\n\r\n      cachedMarkets[marketKey] = {\r\n        active:\r\n          store.state.exchanges[exchange] &&\r\n          !store.state.exchanges[exchange].disabled &&\r\n          !store.state[this.paneId].hiddenMarkets[marketKey],\r\n        index: localPair,\r\n        historical: historicalMarkets.indexOf(marketKey) !== -1\r\n      }\r\n\r\n      if (\r\n        cachedMarkets[marketKey].active &&\r\n        marketsForWatermark.indexOf(localPair) === -1\r\n      ) {\r\n        marketsForWatermark.push(\r\n          (!normalizeWatermarks && market ? market.exchange + ':' : '') +\r\n            localPair\r\n        )\r\n      }\r\n    }\r\n\r\n    this.markets = cachedMarkets\r\n\r\n    if (store.state.app.isExchangesReady) {\r\n      await this.retrieveAlerts()\r\n    }\r\n\r\n    this.updateWatermark(marketsForWatermark)\r\n    this.resetPriceScales()\r\n  }\r\n\r\n  /**\r\n   * set timeframe to chart model and update watermark with litteral\r\n   * @param timeframe\r\n   */\r\n  setTimeframe(timeframe) {\r\n    if (/t$/.test(timeframe)) {\r\n      this.type = 'tick'\r\n    } else {\r\n      this.type = 'time'\r\n    }\r\n\r\n    this.timeframe = parseFloat(timeframe)\r\n    this.isOddTimeframe = isOddTimeframe(this.timeframe)\r\n\r\n    this.updateWatermark()\r\n  }\r\n\r\n  /**\r\n   * cache timezone offset\r\n   * @param offset in ms\r\n   */\r\n  setTimezoneOffset(offset: number) {\r\n    const originalTimezoneOffset = this.timezoneOffset\r\n\r\n    this.timezoneOffset = offset / 1000\r\n\r\n    const change = this.timezoneOffset - originalTimezoneOffset\r\n\r\n    if (this.activeRenderer) {\r\n      this.activeRenderer.localTimestamp += change\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create Lightweight Charts instance and render pane's indicators\r\n   * @param {HTMLElement} containerElement\r\n   */\r\n  createChart(containerElement: HTMLElement) {\r\n    console.log(`[chart/${this.paneId}/controller] create chart`)\r\n\r\n    const chartOptions = getChartOptions(defaultChartOptions as any)\r\n\r\n    if (store.state[this.paneId].showVerticalGridlines) {\r\n      chartOptions.grid.vertLines.visible =\r\n        store.state[this.paneId].showVerticalGridlines\r\n      chartOptions.grid.vertLines.color =\r\n        store.state[this.paneId].verticalGridlinesColor\r\n    }\r\n\r\n    if (store.state[this.paneId].showHorizontalGridlines) {\r\n      chartOptions.grid.horzLines.visible =\r\n        store.state[this.paneId].showHorizontalGridlines\r\n      chartOptions.grid.horzLines.color =\r\n        store.state[this.paneId].horizontalGridlinesColor\r\n    }\r\n\r\n    if (store.state[this.paneId].showWatermark) {\r\n      chartOptions.watermark.visible = store.state[this.paneId].showWatermark\r\n      chartOptions.watermark.color = store.state[this.paneId].watermarkColor\r\n    }\r\n\r\n    const preferedBarSpacing = store.state[this.paneId].barSpacing\r\n\r\n    if (preferedBarSpacing) {\r\n      chartOptions.timeScale.barSpacing = store.state[this.paneId].barSpacing\r\n      chartOptions.timeScale.rightOffset = Math.ceil(\r\n        (containerElement.clientWidth * 0.05) /\r\n          chartOptions.timeScale.barSpacing\r\n      )\r\n    }\r\n\r\n    this.chartInstance = TV.createChart(containerElement, chartOptions)\r\n    this.chartElement = containerElement\r\n\r\n    this.addEnabledSeries()\r\n    this.updateWatermark()\r\n    this.updateFontSize()\r\n  }\r\n\r\n  /**\r\n   * remove series, destroy this.chartInstance and cancel related events\r\n   */\r\n  removeChart() {\r\n    console.log(`[chart/${this.paneId}/controller] remove chart`)\r\n\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    while (this.loadedIndicators.length) {\r\n      this.removeIndicator(this.loadedIndicators[0])\r\n    }\r\n\r\n    this.chartInstance.remove()\r\n    this.priceScales.splice(0, this.priceScales.length)\r\n\r\n    this.chartInstance = null\r\n  }\r\n\r\n  /**\r\n   * get active indicator by id\r\n   * @returns {LoadedIndicator} serie\r\n   */\r\n  getLoadedIndicator(id: string): LoadedIndicator {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (this.loadedIndicators[i].id === id) {\r\n        return this.loadedIndicators[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set indicator option by key\r\n   * @param {string} id serie id\r\n   * @param {string} key option key\r\n   * @param {any} value serie id\r\n   */\r\n  setIndicatorOption(id, key, value, silent = false) {\r\n    const indicator = this.getLoadedIndicator(id)\r\n\r\n    if (!indicator) {\r\n      return\r\n    }\r\n\r\n    indicator.options[key] = value\r\n\r\n    if (silent) {\r\n      return\r\n    }\r\n\r\n    if (key === 'visible') {\r\n      this.toggleIndicatorVisibility(indicator, value)\r\n\r\n      return\r\n    } else if (key === 'priceFormat' && value.auto) {\r\n      this.refreshAutoDecimals(id)\r\n    }\r\n\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      if (key === 'priceFormat' && !value.auto) {\r\n        indicator.apis[i].precision = value.precision\r\n      }\r\n\r\n      indicator.apis[i].applyOptions({\r\n        [key]: value\r\n      })\r\n    }\r\n\r\n    if (this.optionRequiresRedraw(key)) {\r\n      this.redrawIndicator(id)\r\n    }\r\n  }\r\n\r\n  toggleIndicatorVisibility(indicator: LoadedIndicator, value: boolean) {\r\n    if (!value) {\r\n      this.removeIndicatorSeries(indicator)\r\n    } else {\r\n      if (!indicator.model) {\r\n        this.prepareIndicator(indicator)\r\n      } else {\r\n        this.createIndicatorSeries(indicator)\r\n      }\r\n      this.redrawIndicator(indicator.id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * return true if option change require complete redraw, false otherwise\r\n   * @param key option key\r\n   * @returns\r\n   */\r\n  optionRequiresRedraw(key: string) {\r\n    const redrawOptions = /upColor|downColor|wickDownColor|wickUpColor|borderDownColor|borderUpColor|compositeOperation/i\r\n\r\n    if (redrawOptions.test(key)) {\r\n      return true\r\n    }\r\n\r\n    const noRedrawOptions = /color|priceFormat|linetype|width|style/i\r\n\r\n    if (noRedrawOptions.test(key)) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * rebuild the whole serie\r\n   * @param {string} id serie id\r\n   */\r\n  rebuildIndicator(id) {\r\n    this.removeIndicator(this.getLoadedIndicator(id))\r\n\r\n    if (this.addIndicator(id)) {\r\n      this.redrawIndicator(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get id(s) of indicators used in anoter indicator\r\n   * @param {LoadedIndicator} indicator\r\n   * @returns {string[]} id of indicators\r\n   */\r\n  getReferencedIndicators(indicator: LoadedIndicator) {\r\n    return indicator.model.references\r\n      .slice()\r\n      .map(a => a.indicatorId)\r\n      .filter((t, index, self) => self.indexOf(t) === index)\r\n  }\r\n\r\n  /**\r\n   * redraw one specific indicator (and the series it depends on)\r\n   * @param {string} indicatorId\r\n   */\r\n  redrawIndicator(indicatorId) {\r\n    const indicator = this.getLoadedIndicator(indicatorId)\r\n\r\n    this.clearIndicatorSeries(indicator)\r\n\r\n    let bars = []\r\n\r\n    for (const chunk of this.chartCache.chunks) {\r\n      bars = bars.concat(chunk.bars)\r\n    }\r\n\r\n    const requiredIndicatorsIds = this.getReferencedIndicators(indicator)\r\n\r\n    this.ensureIndicatorVisible(requiredIndicatorsIds)\r\n\r\n    this.renderBars(bars, [...requiredIndicatorsIds, indicatorId])\r\n  }\r\n\r\n  ensureIndicatorVisible(indicatorIds: string[]) {\r\n    for (const indicatorId of indicatorIds) {\r\n      if (\r\n        this.loadedIndicators[indicatorId] &&\r\n        this.loadedIndicators[indicatorId].options.visible === false\r\n      ) {\r\n        this.setIndicatorOption(indicatorId, 'visible', true, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * just a extention of Lightweight Charts getVisibleRange but using timezone offset from the settings\r\n   * @returns\r\n   */\r\n  getVisibleRange() {\r\n    const visibleRange = this.chartInstance\r\n      .timeScale()\r\n      .getVisibleRange() as TimeRange\r\n\r\n    if (!visibleRange) {\r\n      return visibleRange\r\n    }\r\n\r\n    visibleRange.from -= this.timezoneOffset\r\n    visibleRange.to -= this.timezoneOffset\r\n\r\n    return visibleRange\r\n  }\r\n\r\n  /**\r\n   * add all pane's indicators\r\n   */\r\n  addEnabledSeries() {\r\n    for (const id in store.state[this.paneId].indicators) {\r\n      this.addIndicator(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * render watermark in chart\r\n   * @returns\r\n   */\r\n  updateWatermark(markets?: string[]) {\r\n    if (markets) {\r\n      if (store.state.settings.normalizeWatermarks) {\r\n        this.watermark = markets.join(' | ')\r\n      } else {\r\n        const othersCount = markets.length - 3\r\n        this.watermark =\r\n          markets.slice(0, 3).join(' + ') +\r\n          (othersCount > 0\r\n            ? ' + ' + othersCount + ' other' + (othersCount > 1 ? 's' : '')\r\n            : '')\r\n      }\r\n    }\r\n\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    /**\r\n     * weird spaces (\\u00A0) are for left / right margins\r\n     */\r\n    this.chartInstance.applyOptions({\r\n      watermark: {\r\n        text: `\\u00A0\\u00A0\\u00A0\\u00A0${this.watermark +\r\n          ' | ' +\r\n          getTimeframeForHuman(\r\n            store.state[this.paneId].timeframe\r\n          )}\\u00A0\\u00A0\\u00A0\\u00A0`,\r\n        visible: store.state[this.paneId].showWatermark,\r\n        color: store.state[this.paneId].watermarkColor\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * update chart font using pane zoom option\r\n   */\r\n  updateFontSize() {\r\n    const multiplier = store.state.panes.panes[this.paneId].zoom || 1\r\n    const watermarkBaseFontSize = store.state.settings.normalizeWatermarks\r\n      ? 72\r\n      : 48\r\n\r\n    this.chartInstance.applyOptions({\r\n      layout: {\r\n        fontSize: 14 * multiplier\r\n      },\r\n      watermark: {\r\n        fontSize: watermarkBaseFontSize * multiplier\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * create indicator and register associated series\r\n   * @param {string} indicatorId indicator id\r\n   */\r\n  addIndicator(id, dependencyDepth?: number) {\r\n    if (this.getLoadedIndicator(id)) {\r\n      return true\r\n    }\r\n\r\n    if (dependencyDepth > 5) {\r\n      return false\r\n    }\r\n\r\n    // get indicator name, script, options ...\r\n    const indicatorSettings = store.state[this.paneId].indicators[id]\r\n    const indicatorOptions = indicatorSettings.options || {}\r\n\r\n    console.debug(`[chart/${this.paneId}/addIndicator] adding ${id}`)\r\n\r\n    const indicator: LoadedIndicator = {\r\n      id,\r\n      options: JSON.parse(JSON.stringify(indicatorOptions)),\r\n      script: indicatorSettings.script,\r\n      model: null,\r\n      adapter: null,\r\n      silentAdapter: null,\r\n      apis: []\r\n    }\r\n\r\n    // build indicator\r\n    try {\r\n      this.prepareIndicator(indicator)\r\n    } catch (error) {\r\n      // handle dependency issue (resolveDependency adds required indicator(s) then try add this one again)\r\n      if (\r\n        error.status === 'indicator-required' &&\r\n        !this.resolveDependency(\r\n          indicator.id,\r\n          error.serieId,\r\n          dependencyDepth || 0\r\n        )\r\n      ) {\r\n        dialogService.confirm({\r\n          message: `\"${indicator.id}\" indicator need the \"${error.serieId}\" serie but that one WAS NOT found anywhere in the current indicators.`,\r\n          ok: 'I see',\r\n          cancel: false\r\n        })\r\n      }\r\n\r\n      if (!error.status && !dialogService.isDialogOpened('indicator')) {\r\n        dialogService.openIndicator(this.paneId, indicator.id)\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    // build complete\r\n    this.loadedIndicators.push(indicator)\r\n\r\n    return true\r\n  }\r\n\r\n  resolveDependency(\r\n    originalIndicatorId: string,\r\n    missingSerieId: string,\r\n    dependencyDepth: number\r\n  ) {\r\n    // serie was not found in active indicators\r\n    // first we loop through pane indicators, maybe order of add is incorrect\r\n    const indicators = (store.state[this.paneId] as ChartPaneState).indicators\r\n\r\n    for (const otherIndicatorId in indicators) {\r\n      if (\r\n        otherIndicatorId === originalIndicatorId ||\r\n        !indicators[otherIndicatorId].series\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      if (indicators[otherIndicatorId].series.indexOf(missingSerieId) !== -1) {\r\n        // found missing indicator\r\n        // add missing indicator (otherIndicatorId) that seems to contain the missing serie (missingSerieId)\r\n        /*if (indicators[otherIndicatorId].options.visible === false) {\r\n          this.setIndicatorOption(otherIndicatorId, 'visible', true, true)\r\n        } else*/ if (\r\n          this.addIndicator(otherIndicatorId, dependencyDepth + 1)\r\n        ) {\r\n          if (dependencyDepth === 0) {\r\n            // finaly add original indicator\r\n            this.addIndicator(originalIndicatorId, dependencyDepth + 1)\r\n          }\r\n\r\n          return true\r\n        } else {\r\n          return false\r\n          // too many dependencies\r\n        }\r\n      }\r\n    }\r\n\r\n    if (indicators[missingSerieId]) {\r\n      if (\r\n        this.addIndicator(indicators[missingSerieId].id, dependencyDepth + 1)\r\n      ) {\r\n        if (dependencyDepth === 0) {\r\n          this.addIndicator(originalIndicatorId, dependencyDepth + 1)\r\n        }\r\n\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * build indicator and create own series instances from Lightweight Charts\r\n   * @param indicator\r\n   */\r\n  prepareIndicator(indicator: LoadedIndicator) {\r\n    try {\r\n      const result = this.serieBuilder.build(\r\n        indicator,\r\n        this.seriesIndicatorsMap,\r\n        this.paneId\r\n      )\r\n\r\n      if (store.state[this.paneId].indicatorsErrors[indicator.id]) {\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: null\r\n        })\r\n      }\r\n\r\n      indicator.model = result\r\n\r\n      if (indicator.options.visible !== false) {\r\n        this.createIndicatorSeries(indicator)\r\n      }\r\n    } catch (error) {\r\n      if (indicator.options.visible !== false) {\r\n        console.error(\r\n          `[chart/${this.paneId}/prepareIndicator] transpilation failed`\r\n        )\r\n        console.error(`\\t->`, error)\r\n\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: error.message\r\n        })\r\n\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * attach indicator copy of indicator model (incl. states of variables and functions)\r\n   * @param {LoadedIndicator} indicator\r\n   * @param {Renderer} renderer\r\n   * @returns\r\n   */\r\n  bindIndicator(indicator: LoadedIndicator, renderer: Renderer) {\r\n    if (\r\n      !renderer ||\r\n      typeof renderer.indicators[indicator.id] !== 'undefined' ||\r\n      !indicator.model\r\n    ) {\r\n      return\r\n    }\r\n\r\n    renderer.indicators[\r\n      indicator.id\r\n    ] = this.serieBuilder.getRendererIndicatorData(indicator)\r\n\r\n    if (!this.activeRenderer || renderer === this.activeRenderer) {\r\n      // update indicator series with plotoptions\r\n      for (\r\n        let i = 0;\r\n        i < renderer.indicators[indicator.id].plotsOptions.length;\r\n        i++\r\n      ) {\r\n        indicator.apis[i].applyOptions(\r\n          renderer.indicators[indicator.id].plotsOptions[i]\r\n        )\r\n      }\r\n\r\n      // create function ready to calculate (& render) everything for this indicator\r\n      indicator.adapter = this.serieBuilder.getAdapter(indicator.model.output)\r\n      indicator.silentAdapter = this.serieBuilder.getAdapter(\r\n        indicator.model.silentOutput\r\n      )\r\n    }\r\n\r\n    this.prepareRendererForIndicators(indicator, renderer)\r\n\r\n    return indicator\r\n  }\r\n\r\n  /**\r\n   * detach serie from renderer\r\n   * @param {LoadedIndicator} indicator\r\n   * @param {Renderer} renderer\r\n   */\r\n  unbindIndicator(indicator, renderer) {\r\n    if (!renderer || typeof renderer.indicators[indicator.id] === 'undefined') {\r\n      return\r\n    }\r\n\r\n    delete renderer.indicators[indicator.id]\r\n  }\r\n\r\n  ensurePriceScale(priceScaleId: string, indicator: LoadedIndicator) {\r\n    if (this.priceScales.indexOf(priceScaleId) !== -1) {\r\n      // chart already knows about that price scale (and doesn't need update)\r\n      return\r\n    } else {\r\n      // register pricescale\r\n      this.priceScales.push(priceScaleId)\r\n    }\r\n\r\n    let priceScale: TV.PriceScaleOptions | any =\r\n      store.state[this.paneId].priceScales[priceScaleId]\r\n\r\n    if (!priceScale) {\r\n      // create default price scale\r\n      priceScale = {}\r\n\r\n      if (indicator && indicator.options.scaleMargins) {\r\n        // use indicator priceScale\r\n        priceScale.scaleMargins = indicator.options.scaleMargins\r\n      } else {\r\n        priceScale.scaleMargins = {\r\n          top: 0.1,\r\n          bottom: 0.2\r\n        }\r\n      }\r\n\r\n      // save it\r\n      store.commit(this.paneId + '/SET_PRICE_SCALE', {\r\n        id: priceScaleId,\r\n        priceScale\r\n      })\r\n    }\r\n\r\n    this.refreshPriceScale(priceScaleId)\r\n  }\r\n\r\n  resetPriceScales() {\r\n    for (let i = 0; i < this.priceScales.length; i++) {\r\n      this.chartInstance.priceScale(this.priceScales[i]).applyOptions({\r\n        autoScale: true\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * deactivate indicator and remove it from chart controller\r\n   * @param {LoadedIndicator} indicator\r\n   */\r\n  removeIndicator(indicator: LoadedIndicator) {\r\n    if (typeof indicator === 'string') {\r\n      indicator = this.getLoadedIndicator(indicator)\r\n    }\r\n\r\n    if (!indicator) {\r\n      return\r\n    }\r\n\r\n    this.removeIndicatorSeries(indicator)\r\n\r\n    // remove from active series model\r\n    this.loadedIndicators.splice(this.loadedIndicators.indexOf(indicator), 1)\r\n  }\r\n\r\n  /**\r\n   * clear all rendered data on chart (empty the chart)\r\n   */\r\n  clearChart(triggerPan?: boolean) {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear chart (all series emptyed)`\r\n    )\r\n\r\n    if (!triggerPan) {\r\n      this.preventPan()\r\n    }\r\n\r\n    for (const indicator of this.loadedIndicators) {\r\n      this.clearIndicatorSeries(indicator)\r\n    }\r\n\r\n    this.renderedRange.from = this.renderedRange.to = null\r\n  }\r\n\r\n  /**\r\n   * remove active renderer and incoming data\r\n   * only use when chart indicators are cleared\r\n   */\r\n  clearData() {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear data (activeRenderer+activeChunk+queuedTrades1)`\r\n    )\r\n\r\n    this.activeRenderer = null\r\n    this.activeChunk = null\r\n    this.queuedTrades.splice(0, this.queuedTrades.length)\r\n  }\r\n\r\n  /**\r\n   * Remove chart price lines (of given indicators if passed)\r\n   * @param indicatorsIds\r\n   */\r\n  clearPriceLines(indicatorsIds?: string[]) {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (\r\n        indicatorsIds &&\r\n        indicatorsIds.indexOf(this.loadedIndicators[i].id) === -1\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      if (this._priceIndicatorId === this.loadedIndicators[i].id) {\r\n        this._alertsRendered = false\r\n      }\r\n\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        this.loadedIndicators[i].apis[j].removeAllPriceLines()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fresh start : clear cache, renderer and rendered series on chart\r\n   */\r\n  clear() {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear all (cache+activedata+chart)`\r\n    )\r\n\r\n    this.chartCache.clear()\r\n    this.clearData()\r\n    this.clearChart()\r\n\r\n    this.setTimeframe(store.state[this.paneId].timeframe)\r\n\r\n    // starting from here the chart will only develop using realtime api\r\n    // market will get priced once a trade is done: can take some time to get \"true price\" of aggregated markets\r\n    // we use this to re-render the whole chart with all initial prices everytime a market get priced first time\r\n    // if a fetch adds historical data after this present fucntion, propagateInitialPrices will be set to false\r\n    this.propagateInitialPrices = true\r\n  }\r\n\r\n  resample(timeframe: number) {\r\n    console.log(`[chart/${this.paneId}/controller] resample to ${timeframe}`)\r\n\r\n    const activeRendererTimestamp = floorTimestampToTimeframe(\r\n      this.activeRenderer.timestamp,\r\n      timeframe\r\n    )\r\n\r\n    const activeChunk = this.getActiveChunk()\r\n\r\n    if (activeChunk) {\r\n      for (const source in this.activeRenderer.sources) {\r\n        if (this.activeRenderer.sources[source].empty === false) {\r\n          activeChunk.bars.push(\r\n            this.cloneSourceBar(\r\n              this.activeRenderer.sources[source],\r\n              activeRendererTimestamp\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setTimeframe(timeframe)\r\n\r\n    if (!this.chartCache.chunks.length) {\r\n      return\r\n    }\r\n\r\n    const newBar = (source, destination, timestamp) => {\r\n      if (typeof source.close === 'number') {\r\n        destination.open = destination.high = destination.low = destination.close =\r\n          source.close\r\n      } else if (\r\n        typeof destination.close === 'undefined' ||\r\n        destination.close === null\r\n      ) {\r\n        destination.open = destination.high = destination.low = destination.close = null\r\n\r\n        destination.vbuy = 0\r\n        destination.vsell = 0\r\n        destination.cbuy = 0\r\n        destination.csell = 0\r\n        destination.lbuy = 0\r\n        destination.lsell = 0\r\n      }\r\n\r\n      destination.timestamp = timestamp\r\n\r\n      return destination\r\n    }\r\n\r\n    const markets = {}\r\n\r\n    for (let i = 0; i < this.chartCache.chunks.length; i++) {\r\n      for (let j = 0; j < this.chartCache.chunks[i].bars.length; j++) {\r\n        const bar = this.chartCache.chunks[i].bars[j]\r\n\r\n        const market = bar.exchange + ':' + bar.pair\r\n\r\n        const barTimestamp = floorTimestampToTimeframe(\r\n          bar.timestamp,\r\n          this.timeframe,\r\n          this.isOddTimeframe\r\n        )\r\n\r\n        if (!markets[market] || markets[market].timestamp < barTimestamp) {\r\n          if (markets[market]) {\r\n            markets[market] = newBar(markets[market], bar, barTimestamp)\r\n          } else {\r\n            markets[market] = newBar({}, bar, barTimestamp)\r\n          }\r\n          continue\r\n        }\r\n\r\n        if (typeof markets[market].open === null) {\r\n          markets[market].open = bar.open\r\n          markets[market].high = bar.high\r\n          markets[market].low = bar.low\r\n          markets[market].close = bar.close\r\n        }\r\n\r\n        markets[market].vbuy += bar.vbuy\r\n        markets[market].vsell += bar.vsell\r\n        markets[market].cbuy += bar.cbuy\r\n        markets[market].csell += bar.csell\r\n        markets[market].lbuy += bar.lbuy\r\n        markets[market].lsell += bar.lsell\r\n        markets[market].close = bar.close\r\n        markets[market].high = Math.max(\r\n          markets[market].high,\r\n          bar.high,\r\n          bar.open,\r\n          bar.close\r\n        )\r\n        markets[market].low = Math.min(\r\n          markets[market].low,\r\n          bar.low,\r\n          bar.open,\r\n          bar.close\r\n        )\r\n\r\n        this.chartCache.chunks[i].bars.splice(j--, 1)\r\n      }\r\n\r\n      if (i && this.chartCache.chunks[i].bars.length < MAX_BARS_PER_CHUNKS) {\r\n        if (this.chartCache.chunks[i].bars.length) {\r\n          const available =\r\n            MAX_BARS_PER_CHUNKS - this.chartCache.chunks[i - 1].bars.length\r\n\r\n          if (available) {\r\n            this.chartCache.chunks[i - 1].bars = this.chartCache.chunks[\r\n              i - 1\r\n            ].bars.concat(this.chartCache.chunks[i].bars.splice(0, available))\r\n          }\r\n        }\r\n\r\n        if (!this.chartCache.chunks[i].bars.length) {\r\n          this.chartCache.chunks.splice(i, 1)\r\n          i--\r\n        }\r\n      }\r\n    }\r\n\r\n    this.activeRenderer = null\r\n\r\n    this.renderAll()\r\n  }\r\n\r\n  getActiveChunk() {\r\n    if (\r\n      !this.activeChunk &&\r\n      this.chartCache.cacheRange.to === this.activeRenderer.timestamp\r\n    ) {\r\n      this.activeChunk = this.chartCache.chunks[\r\n        this.chartCache.chunks.length - 1\r\n      ]\r\n      this.activeChunk.active = true\r\n    } else {\r\n      if (this.activeChunk) {\r\n        this.activeChunk.active = false\r\n      }\r\n      this.activeChunk = this.chartCache.saveChunk({\r\n        from: this.activeRenderer.timestamp,\r\n        to: this.activeRenderer.timestamp,\r\n        active: true,\r\n        rendered: true,\r\n        bars: []\r\n      })\r\n    }\r\n\r\n    return this.activeChunk\r\n  }\r\n\r\n  /**\r\n   * clear everything\r\n   */\r\n  destroy() {\r\n    console.log(`[chart/${this.paneId}/controller] destroy`)\r\n\r\n    this.chartCache.clear()\r\n    this.clearData()\r\n    this.clearChart()\r\n    this.removeChart()\r\n    this.clearQueue()\r\n\r\n    aggregatorService.off('decimals', this._refreshDecimalsHandler)\r\n  }\r\n\r\n  /**\r\n   * @param {LoadedIndicator} indicator indicator owning series\r\n   */\r\n  clearIndicatorSeries(indicator: LoadedIndicator) {\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      indicator.apis[i].removeAllPriceLines()\r\n      indicator.apis[i].setData([])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * start queuing next trades\r\n   */\r\n  setupQueue() {\r\n    if (this._releaseQueueInterval) {\r\n      return\r\n    }\r\n\r\n    if (!store.state[this.paneId].refreshRate) {\r\n      this._releaseQueueInterval = requestAnimationFrame(this._queueHandler)\r\n      return\r\n    }\r\n\r\n    console.debug(\r\n      `[chart/${this.paneId}/controller] setup queue (${getHms(\r\n        store.state[this.paneId].refreshRate\r\n      )})`\r\n    )\r\n\r\n    this._releaseQueueInterval = setInterval(\r\n      this._queueHandler,\r\n      store.state[this.paneId].refreshRate\r\n    )\r\n  }\r\n\r\n  /**\r\n   * release queue and stop queuing next trades (stops all timers handling realtime data)\r\n   * called when chart refresh rate changes (followed by setupQueue with new refresh rate)\r\n   */\r\n  clearQueue() {\r\n    if (!this._releaseQueueInterval) {\r\n      return\r\n    }\r\n\r\n    console.log(`[chart/${this.paneId}/controller] clear queue`)\r\n\r\n    clearInterval(this._releaseQueueInterval)\r\n    cancelAnimationFrame(this._releaseQueueInterval)\r\n    delete this._releaseQueueInterval\r\n\r\n    this.releaseQueue()\r\n  }\r\n\r\n  /**\r\n   * pull trades from queue and render them immediately\r\n   */\r\n  releaseQueue() {\r\n    if (!this.queuedTrades.length) {\r\n      return\r\n    }\r\n\r\n    this.renderRealtimeTrades(this.queuedTrades)\r\n    this.queuedTrades.splice(0, this.queuedTrades.length)\r\n  }\r\n\r\n  /**\r\n   * push a set of trades to queue in order to render them later\r\n   * @param {Trades[]} trades\r\n   */\r\n  queueTrades(trades) {\r\n    Array.prototype.push.apply(this.queuedTrades, trades)\r\n\r\n    if (!store.state[this.paneId].refreshRate) {\r\n      this._releaseQueueInterval = requestAnimationFrame(this._queueHandler)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * take a set of trades, group them into bars while using activeRenderer for reference and render them\r\n   * also cache finished bar\r\n   * @param {Trade[]} trades trades to render\r\n   */\r\n  renderRealtimeTrades(trades) {\r\n    if (!trades.length) {\r\n      return\r\n    }\r\n\r\n    let redrawRequired = false\r\n\r\n    for (let i = 0; i < trades.length; i++) {\r\n      const trade = trades[i]\r\n      const identifier = trade.exchange + ':' + trade.pair\r\n\r\n      if (typeof this.markets[identifier] === 'undefined') {\r\n        continue\r\n      }\r\n\r\n      let timestamp\r\n      if (this.activeRenderer) {\r\n        if (this.activeRenderer.type === 'time') {\r\n          timestamp = floorTimestampToTimeframe(\r\n            trade.timestamp / 1000,\r\n            this.timeframe,\r\n            this.isOddTimeframe\r\n          )\r\n        } else {\r\n          if (\r\n            this.activeRenderer.bar.cbuy + this.activeRenderer.bar.csell >=\r\n            this.timeframe\r\n          ) {\r\n            timestamp = Math.max(\r\n              this.activeRenderer.timestamp + 0.001,\r\n              Math.round(trade.timestamp / 1000)\r\n            )\r\n          } else {\r\n            timestamp = this.activeRenderer.timestamp\r\n          }\r\n        }\r\n      } else {\r\n        timestamp = trade.timestamp / 1000\r\n      }\r\n\r\n      if (!this.activeRenderer || this.activeRenderer.timestamp < timestamp) {\r\n        if (this.activeRenderer) {\r\n          if (\r\n            !this.activeChunk ||\r\n            (this.activeChunk.to < this.activeRenderer.timestamp &&\r\n              this.activeChunk.bars.length >= MAX_BARS_PER_CHUNKS)\r\n          ) {\r\n            // ensure active chunk is created and ready to receive bars\r\n            this.getActiveChunk()\r\n          }\r\n\r\n          if (!this.activeRenderer.bar.empty) {\r\n            this.updateBar(this.activeRenderer)\r\n          }\r\n\r\n          // feed activeChunk with active bar exchange snapshot\r\n          for (const source in this.activeRenderer.sources) {\r\n            if (this.activeRenderer.sources[source].empty === false) {\r\n              this.activeChunk.bars.push(\r\n                this.cloneSourceBar(\r\n                  this.activeRenderer.sources[source],\r\n                  this.activeRenderer.timestamp\r\n                )\r\n              )\r\n            }\r\n          }\r\n\r\n          this.activeChunk.to = this.chartCache.cacheRange.to = this.activeRenderer.timestamp\r\n\r\n          if (this.renderedRange.to < this.activeRenderer.timestamp) {\r\n            this.renderedRange.to = this.activeRenderer.timestamp\r\n          }\r\n\r\n          this.nextBar(timestamp, this.activeRenderer)\r\n        } else {\r\n          this.activeRenderer = this.createRenderer(timestamp)\r\n        }\r\n      }\r\n\r\n      const amount = trade.price * trade.size\r\n\r\n      if (\r\n        !this.activeRenderer.sources[identifier] ||\r\n        typeof this.activeRenderer.sources[identifier].pair === 'undefined'\r\n      ) {\r\n        if (this.propagateInitialPrices) {\r\n          this.chartCache.initialPrices[identifier] = {\r\n            exchange: trade.exchange,\r\n            pair: trade.pair,\r\n            price: trade.price\r\n          }\r\n\r\n          if (!redrawRequired) {\r\n            redrawRequired = true\r\n          }\r\n        }\r\n\r\n        this.activeRenderer.sources[identifier] = {\r\n          pair: trade.pair,\r\n          exchange: trade.exchange,\r\n          close: +trade.price,\r\n          active: this.markets[identifier].active\r\n        }\r\n\r\n        this.resetBar(this.activeRenderer.sources[identifier])\r\n      }\r\n\r\n      const isActive = this.markets[identifier].active\r\n\r\n      if (trade.liquidation) {\r\n        this.activeRenderer.sources[identifier]['l' + trade.side] += amount\r\n\r\n        this.activeRenderer.bar.empty = false\r\n\r\n        if (isActive) {\r\n          this.activeRenderer.bar['l' + trade.side] += amount\r\n        }\r\n\r\n        continue\r\n      }\r\n\r\n      this.activeRenderer.sources[identifier].close = +trade.price\r\n\r\n      if (this.activeRenderer.sources[identifier].empty) {\r\n        this.activeRenderer.sources[\r\n          identifier\r\n        ].open = this.activeRenderer.sources[\r\n          identifier\r\n        ].high = this.activeRenderer.sources[\r\n          identifier\r\n        ].low = this.activeRenderer.sources[identifier].close\r\n      } else {\r\n        this.activeRenderer.sources[identifier].high = Math.max(\r\n          this.activeRenderer.sources[identifier].high,\r\n          this.activeRenderer.sources[identifier].close\r\n        )\r\n        this.activeRenderer.sources[identifier].low = Math.min(\r\n          this.activeRenderer.sources[identifier].low,\r\n          this.activeRenderer.sources[identifier].close\r\n        )\r\n      }\r\n\r\n      this.activeRenderer.sources[identifier]['c' + trade.side] += trade.count\r\n      this.activeRenderer.sources[identifier]['v' + trade.side] += amount\r\n\r\n      this.activeRenderer.sources[identifier].empty = false\r\n\r\n      if (isActive) {\r\n        this.activeRenderer.bar['v' + trade.side] += amount\r\n        this.activeRenderer.bar['c' + trade.side] += trade.count\r\n\r\n        this.activeRenderer.bar.empty = false\r\n      }\r\n    }\r\n\r\n    if (!this.activeRenderer) {\r\n      return\r\n    }\r\n\r\n    if (redrawRequired) {\r\n      this.renderAll()\r\n    } else if (!this.activeRenderer.bar.empty) {\r\n      this.updateBar(this.activeRenderer)\r\n\r\n      if (this.renderedRange.to < this.activeRenderer.timestamp) {\r\n        this.renderedRange.to = this.activeRenderer.timestamp\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create a new object from an existing bar\r\n   * to avoid reference when storing finished bar data to cache\r\n   * @param {Bar} bar do copy\r\n   * @param {number} [timestamp] apply timestamp to returned bar\r\n   */\r\n  cloneSourceBar(sourceBar, timestamp?: number): Bar {\r\n    return {\r\n      pair: sourceBar.pair,\r\n      exchange: sourceBar.exchange,\r\n      timestamp: timestamp || sourceBar.timestamp,\r\n      open: sourceBar.open,\r\n      high: sourceBar.high,\r\n      low: sourceBar.low,\r\n      close: sourceBar.close,\r\n      vbuy: sourceBar.vbuy,\r\n      vsell: sourceBar.vsell,\r\n      cbuy: sourceBar.cbuy,\r\n      csell: sourceBar.csell,\r\n      lbuy: sourceBar.lbuy,\r\n      lsell: sourceBar.lsell\r\n    }\r\n  }\r\n\r\n  /**\r\n   * then render indicatorsIds (or all if not specified) from new set of bars\r\n   * this replace data of series, erasing current data on chart\r\n   * if no indicatorsIds is specified, all indicators on chart are rendered from start to finish\r\n   * then merge indicator's states from temporary renderer used to render all thoses bars into activeRenderer\r\n   *\r\n   * @param {Bar[]} bars bars to render\r\n   * @param {string[]} indicatorsId id of indicators to render\r\n   * @param {boolean} refreshInitialPrices\r\n   */\r\n  renderBars(\r\n    bars,\r\n    indicatorsIds,\r\n    refreshInitialPrices?: boolean,\r\n    triggerPan?: boolean\r\n  ) {\r\n    if (bars.length) {\r\n      this.prependInitialPrices(bars, refreshInitialPrices)\r\n    }\r\n\r\n    this.clearPriceLines(indicatorsIds)\r\n\r\n    const computedSeries = {}\r\n    let from = null\r\n    let to = null\r\n\r\n    let temporaryRenderer: Renderer\r\n    let computedBar: any\r\n\r\n    if (!bars.length) {\r\n      if (\r\n        this.activeRenderer &&\r\n        this.activeRenderer.bar &&\r\n        !this.activeRenderer.bar.empty\r\n      ) {\r\n        bars = Object.values(this.activeRenderer.sources).filter(\r\n          bar => bar.empty === false\r\n        )\r\n      }\r\n\r\n      if (!bars.length) {\r\n        return\r\n      }\r\n    } else if (\r\n      this.activeRenderer &&\r\n      this.activeRenderer.timestamp > bars[bars.length - 1].timestamp\r\n    ) {\r\n      const activeBars = Object.values(this.activeRenderer.sources).filter(\r\n        bar => bar.empty === false\r\n      )\r\n\r\n      for (let i = 0; i < activeBars.length; i++) {\r\n        const activeBar = activeBars[i]\r\n\r\n        activeBar.timestamp = this.activeRenderer.timestamp\r\n\r\n        for (let j = bars.length - 1; j >= 0; j--) {\r\n          const cachedBar = bars[j]\r\n\r\n          if (cachedBar.timestamp < this.activeRenderer.timestamp) {\r\n            bars.splice(j + 1, 0, activeBar)\r\n            activeBars.splice(i, 1)\r\n            i--\r\n            break\r\n          } else if (\r\n            cachedBar.exchange === activeBar.exchange &&\r\n            cachedBar.pair === activeBar.pair\r\n          ) {\r\n            cachedBar.vbuy += activeBar.vbuy\r\n            cachedBar.vsell += activeBar.vsell\r\n            cachedBar.cbuy += activeBar.cbuy\r\n            cachedBar.csell += activeBar.csell\r\n            cachedBar.lbuy += activeBar.lbuy\r\n            cachedBar.lsell += activeBar.lsell\r\n            cachedBar.open = activeBar.open\r\n            cachedBar.high = activeBar.high\r\n            cachedBar.low = activeBar.low\r\n            cachedBar.close = activeBar.close\r\n            activeBars.splice(i, 1)\r\n            i--\r\n\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let barCount = 0\r\n\r\n    for (let i = 0; i <= bars.length; i++) {\r\n      const bar = bars[i]\r\n\r\n      if (\r\n        !bar ||\r\n        !temporaryRenderer ||\r\n        bar.timestamp > temporaryRenderer.timestamp\r\n      ) {\r\n        if (temporaryRenderer) {\r\n          if (temporaryRenderer.bar.empty && !this.fillGapsWithEmpty && bar) {\r\n            this.nextBar(bar.timestamp, temporaryRenderer)\r\n            continue\r\n          }\r\n\r\n          if (from === null) {\r\n            from = temporaryRenderer.timestamp\r\n          }\r\n\r\n          to = temporaryRenderer.timestamp\r\n\r\n          computedBar = this.computeBar(temporaryRenderer, indicatorsIds)\r\n\r\n          for (const id in computedBar) {\r\n            if (typeof computedSeries[id] === 'undefined') {\r\n              computedSeries[id] = []\r\n            }\r\n\r\n            computedSeries[id].push(computedBar[id])\r\n          }\r\n        }\r\n\r\n        if (!bar) {\r\n          break\r\n        }\r\n\r\n        barCount++\r\n\r\n        if (temporaryRenderer) {\r\n          if (this.fillGapsWithEmpty && temporaryRenderer.type === 'time') {\r\n            const missingBars =\r\n              (bar.timestamp -\r\n                temporaryRenderer.timeframe -\r\n                temporaryRenderer.timestamp) /\r\n              temporaryRenderer.timeframe\r\n\r\n            if (missingBars > 0) {\r\n              for (let j = 0; j < missingBars; j++) {\r\n                this.incrementRendererBar(temporaryRenderer)\r\n\r\n                for (const id in computedBar) {\r\n                  if (typeof computedSeries[id] === 'undefined') {\r\n                    computedSeries[id] = []\r\n                  }\r\n\r\n                  computedSeries[id].push({\r\n                    time: temporaryRenderer.localTimestamp\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.nextBar(bar.timestamp, temporaryRenderer)\r\n        } else {\r\n          temporaryRenderer = this.createRenderer(\r\n            bar.timestamp || this.activeRenderer.timestamp,\r\n            indicatorsIds\r\n          )\r\n        }\r\n      }\r\n\r\n      const marketKey = bar.exchange + ':' + bar.pair\r\n\r\n      const isActive = this.markets[marketKey].active\r\n\r\n      if (isActive && !bar.empty) {\r\n        temporaryRenderer.bar.empty = false\r\n        temporaryRenderer.bar.vbuy += bar.vbuy\r\n        temporaryRenderer.bar.vsell += bar.vsell\r\n        temporaryRenderer.bar.cbuy += bar.cbuy\r\n        temporaryRenderer.bar.csell += bar.csell\r\n        temporaryRenderer.bar.lbuy += bar.lbuy\r\n        temporaryRenderer.bar.lsell += bar.lsell\r\n      }\r\n\r\n      temporaryRenderer.sources[marketKey] = this.cloneSourceBar(bar)\r\n      temporaryRenderer.sources[marketKey].empty = false\r\n      temporaryRenderer.sources[marketKey].active = isActive\r\n    }\r\n    if (this.activeRenderer) {\r\n      this.activeRenderer.bar = temporaryRenderer.bar\r\n      for (const id in temporaryRenderer.indicators) {\r\n        this.activeRenderer.indicators[id] = temporaryRenderer.indicators[id]\r\n      }\r\n      for (const id in temporaryRenderer.sources) {\r\n        this.activeRenderer.sources[id] = temporaryRenderer.sources[id]\r\n      }\r\n    } else {\r\n      this.activeRenderer = temporaryRenderer\r\n    }\r\n\r\n    let scrollPosition: number\r\n\r\n    if (!indicatorsIds || !indicatorsIds.length) {\r\n      this.activeRenderer.length = barCount\r\n      // whole chart was rendered from start to finish\r\n\r\n      scrollPosition = this.chartInstance.timeScale().scrollPosition()\r\n      if (!bars.length) {\r\n        this.renderedRange.from = this.renderedRange.to = null\r\n      } else {\r\n        this.renderedRange.from = from\r\n        this.renderedRange.to = to\r\n      }\r\n    }\r\n    this.replaceData(computedSeries, triggerPan)\r\n\r\n    if (scrollPosition) {\r\n      this.chartInstance.timeScale().scrollToPosition(scrollPosition, false)\r\n    }\r\n\r\n    this.renderAlerts()\r\n  }\r\n\r\n  prependInitialPrices(bars: Bar[], refreshInitialPrices: boolean) {\r\n    const remainingInitialMarkets = Object.keys(this.markets).filter(\r\n      name => this.markets[name].historical\r\n    )\r\n\r\n    const maxLookback = 100 * remainingInitialMarkets.length\r\n\r\n    if (this.propagateInitialPrices) {\r\n      const initialTimestamp = bars[0].timestamp\r\n\r\n      if (refreshInitialPrices) {\r\n        for (let i = 0; i < bars.length; i++) {\r\n          const market = bars[i].exchange + ':' + bars[i].pair\r\n          let index\r\n\r\n          if (refreshInitialPrices) {\r\n            if (bars[i].timestamp <= initialTimestamp) {\r\n              if ((index = remainingInitialMarkets.indexOf(market)) !== -1) {\r\n                remainingInitialMarkets.splice(index, 1)\r\n              }\r\n              continue\r\n            } else if (\r\n              (index = remainingInitialMarkets.indexOf(market)) !== -1\r\n            ) {\r\n              this.chartCache.initialPrices[market] = {\r\n                exchange: bars[i].exchange,\r\n                pair: bars[i].pair,\r\n                price: bars[i].close\r\n              }\r\n              remainingInitialMarkets.splice(index, 1)\r\n            } else if (!remainingInitialMarkets.length || i > maxLookback) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const market in this.chartCache.initialPrices) {\r\n        const price = this.chartCache.initialPrices[market].price\r\n        const exchange = this.chartCache.initialPrices[market].exchange\r\n        const pair = this.chartCache.initialPrices[market].pair\r\n        const bar = this.resetBar({\r\n          timestamp: initialTimestamp,\r\n          exchange: exchange,\r\n          pair: pair,\r\n          open: price,\r\n          high: price,\r\n          low: price,\r\n          close: price\r\n        })\r\n\r\n        bars.unshift(bar)\r\n      }\r\n    }\r\n  }\r\n\r\n  removeIndicatorSeries(indicator) {\r\n    // remove from chart instance (derender)\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      this.chartInstance.removeSeries(indicator.apis[i])\r\n      indicator.apis.splice(i--, 1)\r\n    }\r\n\r\n    // unbind from activebar (remove serie meta data like sma memory etc)\r\n    this.unbindIndicator(indicator, this.activeRenderer)\r\n\r\n    const isPriceScaleDead =\r\n      typeof this.loadedIndicators.find(\r\n        i =>\r\n          i.id !== indicator.id &&\r\n          i.options.visible !== false &&\r\n          i.options.priceScaleId === indicator.options.priceScaleId\r\n      ) === 'undefined'\r\n\r\n    if (isPriceScaleDead) {\r\n      this.priceScales.splice(\r\n        this.priceScales.indexOf(indicator.options.priceScaleId),\r\n        1\r\n      )\r\n    }\r\n  }\r\n\r\n  createIndicatorSeries(indicator) {\r\n    const series = []\r\n\r\n    for (let i = 0; i < indicator.model.plots.length; i++) {\r\n      const plot = indicator.model.plots[i]\r\n      const apiMethodName = camelize('add-' + plot.type + '-series')\r\n      const customPlotOptions = this.serieBuilder.getCustomPlotOptions(\r\n        indicator,\r\n        plot\r\n      )\r\n      const serieOptions = {\r\n        ...defaultSerieOptions,\r\n        ...(defaultPlotsOptions[plot.type] || {}),\r\n        ...indicator.options,\r\n        ...customPlotOptions\r\n      }\r\n\r\n      if (serieOptions.scaleMargins) {\r\n        delete serieOptions.scaleMargins\r\n      }\r\n\r\n      const api = this.chartInstance[apiMethodName](\r\n        serieOptions\r\n      ) as IndicatorApi\r\n\r\n      api.id = plot.id\r\n\r\n      if (\r\n        serieOptions.priceFormat &&\r\n        typeof serieOptions.priceFormat.precision === 'number'\r\n      ) {\r\n        api.precision = serieOptions.priceFormat.precision\r\n      }\r\n\r\n      this.seriesIndicatorsMap[plot.id] = {\r\n        indicatorId: indicator.id,\r\n        plotIndex: i\r\n      }\r\n      series.push(plot.id)\r\n\r\n      indicator.apis.push(api)\r\n    }\r\n\r\n    store.commit(this.paneId + '/SET_INDICATOR_SERIES', {\r\n      id: indicator.id,\r\n      series\r\n    })\r\n\r\n    // ensure chart is aware of pricescale used by this indicator\r\n    this.ensurePriceScale(indicator.options.priceScaleId, indicator)\r\n\r\n    // attach indicator to active renderer\r\n    this.bindIndicator(indicator, this.activeRenderer)\r\n  }\r\n\r\n  refreshPriceScale(priceScaleId: string) {\r\n    const priceScale: PriceScaleSettings =\r\n      store.state[this.paneId].priceScales[priceScaleId]\r\n\r\n    this.chartInstance.priceScale(priceScaleId).applyOptions({\r\n      ...priceScale\r\n    })\r\n  }\r\n\r\n  /**\r\n   * disable \"fetch on pan\" until current operation (serie.update / serie.setData) is finished\r\n   */\r\n  preventPan() {\r\n    if (this.panPrevented) {\r\n      return\r\n    }\r\n\r\n    const delay = 100\r\n\r\n    if (typeof this._releasePanTimeout !== 'undefined') {\r\n      clearTimeout(this._releasePanTimeout)\r\n    }\r\n\r\n    this.panPrevented = true\r\n\r\n    this._releasePanTimeout = window.setTimeout(() => {\r\n      this.panPrevented = false\r\n    }, delay)\r\n  }\r\n\r\n  /**\r\n   * Renders all chunks\r\n   */\r\n  renderAll(refreshInitialPrices?: boolean, triggerPan?: boolean) {\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    if (this._promiseOfMarkets) {\r\n      if (!this._promiseOfMarketsRender) {\r\n        this._promiseOfMarketsRender = this._promiseOfMarkets.then(() => {\r\n          this._promiseOfMarketsRender = null\r\n          this.renderAll(false, true)\r\n        })\r\n      }\r\n\r\n      return this._promiseOfMarketsRender\r\n    }\r\n\r\n    this.clearChart(triggerPan)\r\n\r\n    this.renderBars(\r\n      this.chartCache.chunks.length\r\n        ? this.chartCache.chunks.reduce(\r\n            (bars, chunk) => bars.concat(chunk.bars),\r\n            []\r\n          )\r\n        : [],\r\n      null,\r\n      refreshInitialPrices,\r\n      triggerPan\r\n    )\r\n  }\r\n\r\n  async retrieveAlerts() {\r\n    const indexes = Object.values(this.markets).reduce((acc, market) => {\r\n      if (acc.indexOf(market.index) === -1) {\r\n        acc.push(market.index)\r\n      }\r\n\r\n      return acc\r\n    }, [])\r\n\r\n    for (const index of Object.keys(this.alerts)) {\r\n      if (indexes.indexOf(index) === -1) {\r\n        delete this.alerts[index]\r\n      }\r\n    }\r\n\r\n    for (const index of indexes) {\r\n      if (this.alerts[index]) {\r\n        continue\r\n      }\r\n\r\n      this.alerts[index] = []\r\n\r\n      await workspacesService.getAlerts(index).then(alerts => {\r\n        for (let i = 0; i < alerts.length; i++) {\r\n          this.alerts[index].push(alerts[i])\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  renderAlerts() {\r\n    if (this._alertsRendered || !store.state.settings.alerts) {\r\n      return\r\n    }\r\n\r\n    const api = this.getPriceApi()\r\n\r\n    if (!api) {\r\n      return\r\n    }\r\n\r\n    for (const index in this.alerts) {\r\n      for (let i = 0; i < this.alerts[index].length; i++) {\r\n        this.renderAlert(this.alerts[index][i], api)\r\n      }\r\n    }\r\n\r\n    this._alertsRendered = true\r\n  }\r\n\r\n  triggerAlert(market: string, price: number) {\r\n    if (!this.alerts[market]) {\r\n      return\r\n    }\r\n\r\n    const alert = this.alerts[market].find(a => a.price === price)\r\n\r\n    if (alert) {\r\n      if (store.state.settings.alertSound) {\r\n        audioService.playOnce(store.state.settings.alertSound)\r\n      }\r\n\r\n      alert.triggered = true\r\n\r\n      const api = this.getPriceApi()\r\n      const priceline = api.getPriceLine(price)\r\n\r\n      if (priceline) {\r\n        api.removePriceLine(priceline)\r\n      }\r\n\r\n      this.renderAlert(alert, api)\r\n    }\r\n  }\r\n\r\n  renderAlert(alert: MarketAlert, api: TV.ISeriesApi<any>, color?: string) {\r\n    let index\r\n\r\n    if (alert.timestamp) {\r\n      const timestamp = floorTimestampToTimeframe(\r\n        alert.timestamp,\r\n        this.timeframe\r\n      )\r\n      index = this.chartInstance\r\n        .timeScale()\r\n        .coordinateToLogical(\r\n          this.chartInstance\r\n            .timeScale()\r\n            .timeToCoordinate(timestamp as TV.UTCTimestamp)\r\n        )\r\n    }\r\n\r\n    let title\r\n\r\n    if (alert.triggered) {\r\n      title = '✔'\r\n    }\r\n\r\n    return api.createPriceLine({\r\n      market: alert.market,\r\n      index,\r\n      price: alert.price,\r\n      color: color || store.state.settings.alertsColor,\r\n      lineWidth: store.state.settings.alertsLineWidth,\r\n      lineStyle: store.state.settings.alertsLineStyle,\r\n      title\r\n    } as any)\r\n  }\r\n\r\n  /**\r\n   * replace whole chart with a set of computed series bars\r\n   * @param {Bar[]} seriesData Lightweight Charts formated series\r\n   */\r\n  replaceData(\r\n    seriesData: {\r\n      [id: string]: (TV.LineData | TV.BarData | TV.HistogramData)[]\r\n    },\r\n    triggerPan?: boolean\r\n  ) {\r\n    if (!triggerPan) {\r\n      this.preventPan()\r\n    }\r\n\r\n    for (let i = this.loadedIndicators.length - 1; i >= 0; i--) {\r\n      if (this.loadedIndicators[i].options.visible === false) {\r\n        continue\r\n      }\r\n\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        const serieId = this.loadedIndicators[i].apis[j].id\r\n        if (seriesData[serieId]) {\r\n          try {\r\n            this.loadedIndicators[i].apis[j].setData(seriesData[serieId])\r\n          } catch (error) {\r\n            store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n              id: this.loadedIndicators[i].id,\r\n              error: error.message\r\n            })\r\n\r\n            this.setIndicatorOption(\r\n              this.loadedIndicators[i].id,\r\n              'visible',\r\n              false\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * excecute indicators, updating chart series with renderer's data\r\n   * @param renderer\r\n   */\r\n  updateBar(renderer: Renderer) {\r\n    this.preventPan()\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (this.loadedIndicators[i].options.visible === false) {\r\n        continue\r\n      }\r\n\r\n      const indicator = this.loadedIndicators[i]\r\n      const serieData = renderer.indicators[indicator.id]\r\n\r\n      if (serieData.canRender) {\r\n        this.loadedIndicators[i].adapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      } else {\r\n        this.loadedIndicators[i].silentAdapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * excecute indicators with renderer's data, and return series points\r\n   * this does not update series on chart (indicator.apisNoop is passed instead of indicator.apis)\r\n   * @param {Renderer} renderer\r\n   * @param {string[]} indicators id of indicators to execute (all indicators calculated if null)\r\n   * @returns series points\r\n   */\r\n  computeBar(\r\n    renderer: Renderer,\r\n    indicatorsIds?: string[]\r\n  ): { [serieId: string]: any } {\r\n    const points = {}\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (\r\n        (indicatorsIds &&\r\n          indicatorsIds.indexOf(this.loadedIndicators[i].id) === -1) ||\r\n        this.loadedIndicators[i].options.visible === false\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      const indicator = this.loadedIndicators[i]\r\n      const serieData = renderer.indicators[indicator.id]\r\n\r\n      serieData.series = []\r\n\r\n      try {\r\n        indicator.silentAdapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      } catch (error) {\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: error.message\r\n        })\r\n\r\n        continue\r\n      }\r\n\r\n      for (let i = 0; i < serieData.series.length; i++) {\r\n        if (!indicator.model.plots[i]) {\r\n          break\r\n        }\r\n\r\n        if (\r\n          renderer.length < serieData.minLength ||\r\n          !serieData.series[i] ||\r\n          (typeof serieData.series[i].value !== 'undefined' &&\r\n            serieData.series[i].value === null) ||\r\n          (typeof serieData.series[i].lowerValue !== 'undefined' &&\r\n            serieData.series[i].lowerValue === null) ||\r\n          (indicator.model.plots[i].type === 'histogram' &&\r\n            serieData.series[i].value === 0)\r\n        ) {\r\n          continue\r\n        }\r\n        points[indicator.apis[i].id] = serieData.series[i]\r\n      }\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  getPriceApi() {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        const api = this.loadedIndicators[i].apis[j]\r\n\r\n        if (api.options().priceScaleId === 'right') {\r\n          this._priceIndicatorId = this.loadedIndicators[i].id\r\n\r\n          return api\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create empty renderer\r\n   * this is called on first realtime trade or when indicator(s) are rendered from start to finish\r\n   * @param {number} timestamp create at time\r\n   * @param {string[]} indicatorsIds id of indicators to bind (if null all indicators are binded)\r\n   */\r\n  createRenderer(firstBarTimestamp, indicatorsIds?: string[]) {\r\n    firstBarTimestamp = floorTimestampToTimeframe(\r\n      firstBarTimestamp,\r\n      this.timeframe\r\n    )\r\n\r\n    const renderer: Renderer = {\r\n      timestamp: firstBarTimestamp,\r\n      localTimestamp: firstBarTimestamp + this.timezoneOffset,\r\n      timeframe: this.timeframe,\r\n      type: this.type,\r\n      length: 1,\r\n      indicators: {},\r\n      sources: {},\r\n\r\n      bar: {\r\n        vbuy: 0,\r\n        vsell: 0,\r\n        cbuy: 0,\r\n        csell: 0,\r\n        lbuy: 0,\r\n        lsell: 0,\r\n        empty: true\r\n      }\r\n    }\r\n\r\n    this.loadedIndicators = this.loadedIndicators.sort((a, b) => {\r\n      const referencesA = a.model ? a.model.references.length : 0\r\n      const referencesB = b.model ? b.model.references.length : 0\r\n      return referencesA - referencesB\r\n    })\r\n\r\n    for (const indicator of this.loadedIndicators) {\r\n      if (\r\n        (indicatorsIds && indicatorsIds.indexOf(indicator.id) === -1) ||\r\n        indicator.options.visible === false\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      this.bindIndicator(indicator, renderer)\r\n    }\r\n\r\n    return renderer\r\n  }\r\n\r\n  /**\r\n   * prepare renderer for next bar\r\n   * @param {number} timestamp timestamp of the next bar\r\n   * @param {Renderer?} renderer bar to use as reference\r\n   */\r\n  nextBar(timestamp, renderer?: Renderer) {\r\n    if (\r\n      this.fillGapsWithEmpty &&\r\n      renderer === this.activeRenderer &&\r\n      this.activeRenderer.type === 'time' &&\r\n      this.activeRenderer.timestamp < timestamp - this.activeRenderer.timeframe\r\n    ) {\r\n      const missingBars =\r\n        (timestamp -\r\n          this.activeRenderer.timeframe -\r\n          this.activeRenderer.timestamp) /\r\n        this.activeRenderer.timeframe\r\n\r\n      for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n        for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n          for (let k = 0; k < missingBars; k++) {\r\n            if (i === 0 && j === 0) {\r\n              this.incrementRendererBar(renderer)\r\n            }\r\n\r\n            this.loadedIndicators[i].apis[j].update({\r\n              time: renderer.localTimestamp\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.incrementRendererBar(renderer)\r\n    this.resetRendererBar(renderer)\r\n\r\n    renderer.timestamp = timestamp\r\n    renderer.localTimestamp = timestamp + this.timezoneOffset\r\n  }\r\n\r\n  /**\r\n   * increment bar (1 timeframe forward)\r\n   * @param {Renderer} bar bar to clear for next timestamp\r\n   */\r\n  incrementRendererBar(renderer: Renderer) {\r\n    renderer.length++\r\n    renderer.timestamp += renderer.timeframe\r\n    renderer.localTimestamp += renderer.timeframe\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      const rendererSerieData = renderer.indicators[this.loadedIndicators[i].id]\r\n\r\n      if (!rendererSerieData) {\r\n        continue\r\n      }\r\n\r\n      rendererSerieData.canRender =\r\n        renderer.length >= rendererSerieData.minLength\r\n\r\n      for (let f = 0; f < rendererSerieData.functions.length; f++) {\r\n        const instruction = rendererSerieData.functions[f]\r\n\r\n        if (typeof seriesUtils[instruction.name].next === 'function') {\r\n          seriesUtils[instruction.name].next(instruction)\r\n        }\r\n      }\r\n\r\n      for (let v = 0; v < rendererSerieData.variables.length; v++) {\r\n        const instruction = rendererSerieData.variables[v]\r\n\r\n        if (instruction.length > 1) {\r\n          instruction.state.unshift(instruction.state[0])\r\n\r\n          if (instruction.state.length > instruction.length) {\r\n            instruction.state.pop()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fresh start for the renderer bar (and all its sources / markets)\r\n   * @param {Renderer} bar bar to clear for next timestamp\r\n   */\r\n  resetRendererBar(renderer: Renderer) {\r\n    renderer.bar = {\r\n      vbuy: 0,\r\n      vsell: 0,\r\n      cbuy: 0,\r\n      csell: 0,\r\n      lbuy: 0,\r\n      lsell: 0,\r\n      empty: true\r\n    }\r\n\r\n    if (typeof renderer.sources !== 'undefined') {\r\n      for (const identifier in renderer.sources) {\r\n        this.resetBar(renderer.sources[identifier])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * preparing bar for next\r\n   * @param {Bar} bar\r\n   */\r\n  resetBar(bar: Bar) {\r\n    if (bar.close !== null) {\r\n      bar.open = bar.close\r\n      bar.high = bar.close\r\n      bar.low = bar.close\r\n    }\r\n\r\n    bar.vbuy = 0\r\n    bar.vsell = 0\r\n    bar.cbuy = 0\r\n    bar.csell = 0\r\n    bar.lbuy = 0\r\n    bar.lsell = 0\r\n    bar.empty = true\r\n\r\n    return bar\r\n  }\r\n\r\n  prepareRendererForIndicators(indicator: LoadedIndicator, renderer: Renderer) {\r\n    const markets = Object.keys(indicator.model.markets)\r\n\r\n    for (let j = 0; j < markets.length; j++) {\r\n      if (!renderer.sources[markets[j]]) {\r\n        renderer.sources[markets[j]] = {\r\n          open: null,\r\n          high: null,\r\n          low: null,\r\n          close: null\r\n        }\r\n      }\r\n\r\n      const keys = indicator.model.markets[markets[j]]\r\n\r\n      if (keys.length) {\r\n        for (let k = 0; k < keys.length; k++) {\r\n          if (\r\n            typeof renderer.sources[markets[j]][keys[k]] === 'undefined' &&\r\n            keys[k] !== 'open' &&\r\n            keys[k] !== 'high' &&\r\n            keys[k] !== 'low' &&\r\n            keys[k] !== 'close'\r\n          ) {\r\n            renderer.sources[markets[j]][keys[k]] = 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleFillGapsWithEmpty() {\r\n    this.fillGapsWithEmpty = !this.fillGapsWithEmpty\r\n\r\n    this.renderAll()\r\n  }\r\n\r\n  refreshAutoDecimals(indicatorId?: string) {\r\n    const chartMarkets = Object.keys(this.markets)\r\n    const pricedMarket = Object.keys(marketDecimals).find(\r\n      market => chartMarkets.indexOf(market) !== -1\r\n    )\r\n\r\n    if (pricedMarket) {\r\n      const precision = marketDecimals[pricedMarket]\r\n\r\n      for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n        if (indicatorId && indicatorId !== this.loadedIndicators[i].id) {\r\n          continue\r\n        }\r\n\r\n        let priceFormat = this.loadedIndicators[i].options.priceFormat || {\r\n          type: 'price'\r\n        }\r\n\r\n        if (\r\n          !priceFormat.auto ||\r\n          priceFormat.type === 'volume' ||\r\n          priceFormat.precision === precision\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        priceFormat = {\r\n          ...priceFormat,\r\n          precision,\r\n          minMove: 1 / Math.pow(10, precision)\r\n        }\r\n\r\n        store.dispatch(this.paneId + '/setIndicatorOption', {\r\n          id: this.loadedIndicators[i].id,\r\n          key: 'priceFormat',\r\n          value: priceFormat,\r\n          silent: true\r\n        })\r\n\r\n        for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n          this.loadedIndicators[i].apis[j].applyOptions({\r\n            priceFormat\r\n          })\r\n\r\n          this.loadedIndicators[i].apis[j].precision = precision\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get price api, index & price at a point on the chart\r\n   * Return the priceline if found at price\r\n   * @param {MouseEvent | TouchEvent} event\r\n   * @returns {{\r\n   *  originalOffset: {x: number, y: number},\r\n   *  offset: {x?: number, y?: number},\r\n   *  priceline: TV.IPriceLine | null,\r\n   *  api: IndicatorApi,\r\n   *  price: number,\r\n   *  market: string,\r\n   *  canCreate: boolean\r\n   * }}\r\n   */\r\n  getPricelineAtPoint(event) {\r\n    const originalOffset = getEventOffset(event)\r\n    const offset = {\r\n      x: originalOffset.x,\r\n      y: originalOffset.y\r\n    }\r\n\r\n    const api = this.getPriceApi()\r\n\r\n    if (!api) {\r\n      return\r\n    }\r\n\r\n    let price = api.coordinateToPrice(originalOffset.y) as number\r\n\r\n    if (!price) {\r\n      return\r\n    }\r\n\r\n    let priceline = api.getPriceLine(\r\n      price,\r\n      this.chartInstance.timeScale().coordinateToLogical(originalOffset.x)\r\n    )\r\n\r\n    let market\r\n\r\n    if (priceline) {\r\n      const priceLineOptions = priceline.options() as any\r\n      market = priceLineOptions.market\r\n\r\n      if (!priceLineOptions.market) {\r\n        priceline = null\r\n      } else {\r\n        market = priceLineOptions.market\r\n        price = priceLineOptions.price\r\n      }\r\n    }\r\n\r\n    if (!market) {\r\n      for (const marketKey in this.markets) {\r\n        if (\r\n          this.markets[marketKey].active &&\r\n          this.markets[marketKey].historical\r\n        ) {\r\n          market = this.markets[marketKey].index\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!market) {\r\n        market = Object.values(this.markets)[0].index\r\n      }\r\n    }\r\n\r\n    if (!priceline) {\r\n      price = +formatPrice(price, api.options().priceFormat.precision)\r\n    }\r\n\r\n    const canCreate =\r\n      store.state.settings.alerts &&\r\n      (event.shiftKey || store.state.settings.alertsClick)\r\n\r\n    return { api, price, market, priceline, canCreate, originalOffset, offset }\r\n  }\r\n\r\n  disableCrosshair() {\r\n    this.chartInstance.applyOptions({\r\n      crosshair: {\r\n        vertLine: {\r\n          color: 'transparent',\r\n          labelVisible: false\r\n        },\r\n        horzLine: {\r\n          color: 'transparent',\r\n          labelVisible: false\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  enableCrosshair() {\r\n    const chartColorOptions = getChartCustomColorsOptions()\r\n\r\n    this.chartInstance.applyOptions({\r\n      crosshair: {\r\n        vertLine: {\r\n          color: chartColorOptions.crosshair.vertLine.color,\r\n          labelVisible: true\r\n        },\r\n        horzLine: {\r\n          color: chartColorOptions.crosshair.horzLine.color,\r\n          labelVisible: true\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Bar } from '@/components/chart/chart'\nimport {\n  floorTimestampToTimeframe,\n  getApiUrl,\n  handleFetchError,\n  isOddTimeframe\n} from '@/utils/helpers'\nimport EventEmitter from 'eventemitter3'\n\nimport store from '../store'\nimport { parseMarket } from './productsService'\n\nexport interface HistoricalResponse {\n  from: number\n  to: number\n  data: Bar[]\n}\n\nclass HistoricalService extends EventEmitter {\n  url: string\n  promisesOfData: { [keyword: string]: Promise<HistoricalResponse> } = {}\n\n  constructor() {\n    super()\n\n    this.url = getApiUrl('historical')\n  }\n\n  filterOutUnavailableMarkets(markets: string[]) {\n    return markets.filter(\n      market => store.state.app.historicalMarkets.indexOf(market) !== -1\n    )\n  }\n\n  getApiUrl(from, to, timeframe, markets) {\n    const params = [from, to, (timeframe * 1000).toString()]\n\n    if (markets && markets.length) {\n      params.push(encodeURIComponent(markets.join('+')))\n    }\n\n    return `${this.url}/${params.join('/')}`\n  }\n\n  fetch(\n    from: number,\n    to: number,\n    timeframe: number,\n    markets: string[]\n  ): Promise<HistoricalResponse> {\n    const url = this.getApiUrl(from, to, timeframe, markets)\n\n    if (this.promisesOfData[url]) {\n      return this.promisesOfData[url]\n    }\n\n    store.commit('app/TOGGLE_LOADING', true)\n\n    this.promisesOfData[url] = fetch(url)\n      .then(response =>\n        response.json().then(json => {\n          json.status = response.status\n          return json\n        })\n      )\n      .then(json => {\n        if (!json || json.error) {\n          throw new Error(json && json.error ? json.error : 'empty-response')\n        }\n\n        if (!json.results.length) {\n          throw new Error('No more data')\n        }\n\n        if (json.format !== 'point') {\n          throw new Error('Bad data')\n        }\n\n        return this.normalizePoints(\n          json.results,\n          json.columns,\n          timeframe,\n          markets\n        )\n      })\n      .catch(err => {\n        handleFetchError(err)\n\n        throw err\n      })\n      .then(data => {\n        store.commit('app/TOGGLE_LOADING', false)\n        delete this.promisesOfData[url]\n\n        return data\n      })\n\n    return this.promisesOfData[url]\n  }\n  normalizePoints(data, columns, timeframe, markets: string[]) {\n    const lastClosedBars = {}\n\n    markets = markets.slice()\n\n    if (!data || !data.length) {\n      return data\n    }\n\n    // base timestamp of results\n    let firstBarTimestamp: number\n\n    if (Array.isArray(data[0])) {\n      firstBarTimestamp = data[0][0]\n    } else {\n      firstBarTimestamp = +new Date(data[0].time) / 1000\n    }\n\n    markets = [...markets]\n\n    const refs = {}\n\n    const isOdd = isOddTimeframe(timeframe)\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].time && data[i][0]) {\n        // new format is array, transform into objet\n        data[i] = {\n          time:\n            typeof columns['time'] !== 'undefined'\n              ? data[i][columns['time']]\n              : 0,\n          cbuy:\n            typeof columns['cbuy'] !== 'undefined'\n              ? data[i][columns['cbuy']]\n              : 0,\n          close:\n            typeof columns['close'] !== 'undefined'\n              ? data[i][columns['close']]\n              : 0,\n          csell:\n            typeof columns['csell'] !== 'undefined'\n              ? data[i][columns['csell']]\n              : 0,\n          high:\n            typeof columns['high'] !== 'undefined'\n              ? data[i][columns['high']]\n              : 0,\n          lbuy:\n            typeof columns['lbuy'] !== 'undefined'\n              ? data[i][columns['lbuy']]\n              : 0,\n          low:\n            typeof columns['low'] !== 'undefined' ? data[i][columns['low']] : 0,\n          lsell:\n            typeof columns['lsell'] !== 'undefined'\n              ? data[i][columns['lsell']]\n              : 0,\n          market:\n            typeof columns['market'] !== 'undefined'\n              ? data[i][columns['market']]\n              : 0,\n          open:\n            typeof columns['open'] !== 'undefined'\n              ? data[i][columns['open']]\n              : 0,\n          vbuy:\n            typeof columns['vbuy'] !== 'undefined'\n              ? data[i][columns['vbuy']]\n              : 0,\n          vsell:\n            typeof columns['vsell'] !== 'undefined'\n              ? data[i][columns['vsell']]\n              : 0\n        }\n        data[i].timestamp = data[i].time\n      } else {\n        // pending bar was sent\n        if (!lastClosedBars[data[i].market]) {\n          // get latest bar for that market\n          for (let j = i - 1; j >= 0; j--) {\n            if (data[j].market === data[i].market) {\n              lastClosedBars[data[i].market] = data[j]\n              break\n            }\n          }\n        }\n\n        // format pending bar time floored to timeframe\n        data[i].timestamp = floorTimestampToTimeframe(\n          data[i].time / 1000,\n          timeframe,\n          isOdd\n        )\n\n        if (\n          !lastClosedBars[data[i].market] ||\n          lastClosedBars[data[i].market].timestamp < data[i].timestamp\n        ) {\n          // store reference bar for this market (either because it didn't exist or because reference bar time is < than pending bar time)\n          lastClosedBars[data[i].market] = data[i]\n        } else if (lastClosedBars[data[i].market] !== data[i]) {\n          lastClosedBars[data[i].market].vbuy += data[i].vbuy\n          lastClosedBars[data[i].market].vsell += data[i].vsell\n          lastClosedBars[data[i].market].cbuy += data[i].cbuy\n          lastClosedBars[data[i].market].csell += data[i].csell\n          lastClosedBars[data[i].market].lbuy += data[i].lbuy\n          lastClosedBars[data[i].market].lsell += data[i].lsell\n          lastClosedBars[data[i].market].high = Math.max(\n            data[i].high,\n            lastClosedBars[data[i].market].high\n          )\n          lastClosedBars[data[i].market].low = Math.min(\n            data[i].low,\n            lastClosedBars[data[i].market].low\n          )\n          lastClosedBars[data[i].market].close = data[i].close\n\n          data.splice(i, 1)\n          i--\n          continue\n        }\n      }\n\n      if (typeof refs[data[i].market] !== 'number') {\n        refs[data[i].market] = data[i].open\n      }\n\n      if (data[i].timestamp === firstBarTimestamp) {\n        const marketIndex = markets.indexOf(data[i].market)\n\n        markets.splice(marketIndex, 1)\n      }\n\n      const [exchange, pair] = parseMarket(data[i].market)\n      data[i].exchange = exchange\n      data[i].pair = pair\n      delete data[i].time\n    }\n\n    return {\n      data,\n      markets,\n      from: data[0].timestamp,\n      to: data[data.length - 1].timestamp\n    }\n  }\n}\n\nexport default new HistoricalService()\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-layout\",style:({\n    right: _vm.axis[0] + 'px',\n    bottom: _vm.axis[1] + 'px'\n  }),on:{\"dblclick\":function($event){return _vm.$store.commit(_vm.paneId + '/TOGGLE_LAYOUTING')}}},[_c('div',{staticClass:\"chart-layout__controls\"},[_c('button',{staticClass:\"btn -red -small\",attrs:{\"title\":\"Close menu while reverting chart layout to it's original state\"},on:{\"click\":_vm.cancel}},[_vm._v(\" Cancel \"),_c('i',{staticClass:\"icon-eraser ml4\"})]),_c('button',{staticClass:\"btn -green -small ml8\",attrs:{\"title\":\"Click if you finished rearranging the chart layout\"},on:{\"click\":function($event){return _vm.$store.commit(_vm.paneId + '/TOGGLE_LAYOUTING')}}},[_vm._v(\" Ok \"),_c('i',{staticClass:\"icon-check ml4\"})])]),_vm._l((_vm.activePriceScales),function(priceScale,id){return _c('chart-price-scale',{key:id,staticClass:\"chart-layout__item\",attrs:{\"paneId\":_vm.paneId,\"priceScaleId\":id,\"priceScale\":priceScale},on:{\"update\":function($event){return _vm.updatePriceScaleScaleMargins(id, $event)}}})})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-pricescale\",class:{ '-active': !!_vm.currentSide },style:({ top: _vm.roundedTop + '%', bottom: _vm.roundedBottom + '%' })},[_c('div',{staticClass:\"chart-pricescale__content\"},[_c('div',{staticClass:\"chart-pricescale__title pane-overlay\",on:{\"mousedown\":_vm.handleMove,\"touchstart\":_vm.handleMove}},[_c('i',{staticClass:\"icon-move mr8\"}),_vm._v(\" \"+_vm._s(_vm.priceScale.indicators.join(', '))+\" \"),(_vm.priceScaleId === 'right')?_c('span',{directives:[{name:\"tippy\",rawName:\"v-tippy\"}],staticClass:\"ml4\",attrs:{\"title\":\"Main scale\"}},[_vm._v(\"👑\")]):_vm._e(),_c('dropdown-button',{staticClass:\"chart-pricescale__mode -text -small ml8 text-bold -arrow\",attrs:{\"options\":_vm.modes,\"placeholder\":\"linear\"},on:{\"input\":function($event){return _vm.updateMode($event)}},model:{value:(_vm.priceScale.mode),callback:function ($$v) {_vm.$set(_vm.priceScale, \"mode\", $$v)},expression:\"priceScale.mode\"}})],1),_c('div',{staticClass:\"chart-pricescale__size pane-overlay\",domProps:{\"textContent\":_vm._s(100 - _vm.roundedTop - _vm.roundedBottom + '%')}})]),_c('div',{staticClass:\"chart-pricescale__boundary -top\",class:{ '-active': _vm.currentSide === 'top' },on:{\"mousedown\":function($event){return _vm.handleResize($event, 'top')},\"touchstart\":function($event){return _vm.handleResize($event, 'top')}}}),_c('div',{staticClass:\"chart-pricescale__boundary -bottom\",class:{ '-active': _vm.currentSide === 'bottom' },on:{\"mousedown\":function($event){return _vm.handleResize($event, 'bottom')},\"touchstart\":function($event){return _vm.handleResize($event, 'bottom')}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\n\nimport { PriceScaleSettings } from '@/store/panesSettings/chart'\nimport { getEventCords, randomString } from '@/utils/helpers'\nimport DropdownButton from '@/components/framework/DropdownButton.vue'\n\n@Component({\n  name: 'ChartPriceScale',\n  components: {\n    DropdownButton\n  },\n  props: {\n    paneId: {\n      required: true\n    },\n    priceScaleId: {\n      required: true\n    },\n    priceScale: {\n      required: true\n    }\n  },\n  watch: {\n    'priceScale.scaleMargins.top': function() {\n      if (!this.currentMoveId) {\n        this.getSize()\n      }\n    },\n    'priceScale.scaleMargins.bottom': function() {\n      if (!this.currentMoveId) {\n        this.getSize()\n      }\n    }\n  }\n})\nexport default class extends Vue {\n  paneId: string\n  priceScaleId: string\n  priceScale: PriceScaleSettings\n\n  top: number = null\n  bottom: number = null\n  roundedTop: number = null\n  roundedBottom: number = null\n\n  currentMoveId: string = null\n  currentSide: 'top' | 'bottom' | 'both' = null\n  currentOrigin: number = null\n  currentContainerHeight: number = null\n\n  modes = {\n    0: 'Linear',\n    1: 'Logarithimic',\n    2: 'Percent',\n    3: 'Indexed to 100'\n  }\n\n  created() {\n    this.getSize()\n  }\n\n  beforeDestroy() {\n    this.release()\n  }\n\n  getSize() {\n    this.roundedTop = this.top = this.priceScale.scaleMargins.top * 100\n    this.roundedBottom = this.bottom = this.priceScale.scaleMargins.bottom * 100\n  }\n\n  handleResize(event: MouseEvent | TouchEvent, side: 'top' | 'bottom') {\n    if (this.currentMoveId) {\n      this.release()\n\n      return\n    }\n\n    this.start(side, getEventCords(event).y)\n\n    document.addEventListener('mousemove', this.resize)\n    document.addEventListener('mouseup', this.release)\n    document.addEventListener('touchmove', this.resize)\n    document.addEventListener('touchend', this.release)\n  }\n\n  resize(event: MouseEvent | TouchEvent) {\n    const percentMove = this.getPercentMove(event)\n\n    if (!percentMove) {\n      return\n    }\n\n    this[this.currentSide] +=\n      percentMove * (this.currentSide === 'top' ? 1 : -1)\n\n    this.updateScaleMargins(event)\n  }\n\n  handleMove(event: MouseEvent | TouchEvent) {\n    if (this.currentMoveId) {\n      this.release()\n\n      return\n    }\n\n    this.start('both', getEventCords(event).y)\n\n    document.addEventListener('mousemove', this.move)\n    document.addEventListener('mouseup', this.release)\n    document.addEventListener('touchmove', this.move)\n    document.addEventListener('touchend', this.release)\n  }\n\n  move(event: MouseEvent | TouchEvent) {\n    const percentMove = this.getPercentMove(event)\n\n    if (!percentMove) {\n      return\n    }\n\n    this.top += percentMove\n    this.bottom -= percentMove\n\n    this.updateScaleMargins(event)\n  }\n\n  release() {\n    if (!this.currentSide) {\n      return\n    }\n\n    if (this.currentSide !== 'both') {\n      document.removeEventListener('mousemove', this.resize)\n      document.removeEventListener('touchmove', this.resize)\n    } else {\n      document.removeEventListener('mousemove', this.move)\n      document.removeEventListener('touchmove', this.move)\n    }\n\n    document.removeEventListener('mouseup', this.release)\n    document.removeEventListener('touchend', this.release)\n\n    this.currentMoveId = null\n    this.currentSide = null\n\n    this.top = this.roundedTop\n    this.bottom = this.roundedBottom\n  }\n\n  updateScaleMargins(event) {\n    const top = Math.round(this.top)\n    const bottom = Math.round(this.bottom)\n\n    this.roundedTop = Math.max(0, Math.min(100 - bottom, top))\n    this.roundedBottom = Math.max(0, Math.min(bottom, 100 - top))\n\n    const scaleMargins = {\n      top: this.roundedTop / 100,\n      bottom: this.roundedBottom / 100\n    }\n\n    if (\n      this.priceScale.scaleMargins.top === scaleMargins.top &&\n      this.priceScale.scaleMargins.bottom === scaleMargins.bottom\n    ) {\n      return\n    }\n\n    this.$emit('update', {\n      id: this.currentMoveId,\n      side: this.currentSide,\n      value: scaleMargins,\n      syncable: event.type !== 'touchmove' && !event.shiftKey\n    })\n  }\n\n  updateMode(mode) {\n    this.priceScale.mode = +mode\n\n    this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n      id: this.priceScaleId,\n      priceScale: this.priceScale\n    })\n  }\n\n  getContainerHeight() {\n    const height = parseFloat(this.$el.parentElement.clientHeight as any)\n\n    return height\n  }\n\n  getPercentMove(event) {\n    const currentPosition = getEventCords(event)\n\n    const percent =\n      ((currentPosition.y - this.currentOrigin) / this.currentContainerHeight) *\n      100\n\n    if (!percent) {\n      return null\n    }\n\n    this.currentOrigin = currentPosition.y\n\n    return percent\n  }\n\n  start(side: 'top' | 'bottom' | 'both', origin: number) {\n    /* const siblings = (this.$el.parentElement.children as unknown) as HTMLElement[]\n\n    for (const el of siblings) {\n      if (el === this.$el) {\n        el.style.zIndex = '1'\n      } else {\n        el.style.zIndex = ''\n      }\n    } */\n\n    this.currentMoveId = randomString(8)\n    this.currentSide = side\n    this.currentOrigin = origin\n    this.currentContainerHeight = this.getContainerHeight()\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PriceScale.vue?vue&type=template&id=2cef81f0&\"\nimport script from \"./PriceScale.vue?vue&type=script&lang=ts&\"\nexport * from \"./PriceScale.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PriceScale.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\n\nimport { ChartPaneState, PriceScaleSettings } from '@/store/panesSettings/chart'\nimport ChartPriceScale from './PriceScale.vue'\n\n@Component({\n  components: { ChartPriceScale },\n  name: 'ChartLayout',\n  props: {\n    paneId: {\n      required: true\n    },\n    axis: {\n      required: true\n    },\n    layouting: {\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  paneId: string\n  layouting: string\n  unsyncableMoveId: string\n  axis: [number, number]\n  activePriceScales: { [id: string]: PriceScaleSettings }\n\n  private _originalActivePriceScales: { [id: string]: PriceScaleSettings }\n\n  created() {\n    this.getActivePriceScales()\n  }\n\n  mounted() {\n    document.body.classList.add('-unselectable')\n  }\n\n  beforeDestroy() {\n    document.body.classList.remove('-unselectable')\n  }\n\n  getActivePriceScales() {\n    const indicators = (this.$store.state[this.paneId] as ChartPaneState)\n      .indicators\n\n    this.activePriceScales = Object.keys(indicators).reduce(\n      (priceScales, indicatorId) => {\n        if (\n          typeof this.layouting === 'string' &&\n          indicatorId !== this.layouting\n        ) {\n          return priceScales\n        }\n        const priceScaleId = indicators[indicatorId].options.priceScaleId\n\n        if (!priceScales[priceScaleId]) {\n          priceScales[priceScaleId] = this.$store.state[\n            this.paneId\n          ].priceScales[priceScaleId]\n          priceScales[priceScaleId].indicators = []\n        }\n\n        priceScales[priceScaleId].indicators.push(indicators[indicatorId].name)\n\n        return priceScales\n      },\n      {}\n    )\n\n    this._originalActivePriceScales = JSON.parse(\n      JSON.stringify(this.activePriceScales)\n    )\n  }\n\n  updatePriceScaleScaleMargins(priceScaleId, event) {\n    if (event.syncable && this.unsyncableMoveId !== event.id) {\n      if (!this.syncMoveWithOthers(priceScaleId, event.side, event.value)) {\n        this.unsyncableMoveId = event.id\n      }\n    }\n\n    this.activePriceScales[priceScaleId].scaleMargins = event.value\n\n    this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n      id: priceScaleId,\n      priceScale: this.activePriceScales[priceScaleId]\n    })\n  }\n\n  syncMoveWithOthers(priceScaleId, side, scaleMargins): boolean {\n    const originalScaleMargins = this.activePriceScales[priceScaleId]\n      .scaleMargins\n\n    let hasSynced = false\n\n    for (const otherId in this.activePriceScales) {\n      if (priceScaleId === otherId) {\n        continue\n      }\n\n      const otherScaleMargins = this.activePriceScales[otherId].scaleMargins\n\n      if (\n        otherScaleMargins.top === originalScaleMargins.top &&\n        otherScaleMargins.bottom === originalScaleMargins.bottom\n      ) {\n        // sync overlapping\n\n        Vue.set(this.activePriceScales[otherId], 'scaleMargins', scaleMargins)\n\n        this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n          id: otherId,\n          priceScale: this.activePriceScales[otherId]\n        })\n\n        hasSynced = true\n      }\n    }\n\n    return hasSynced\n  }\n\n  cancel() {\n    for (const id in this._originalActivePriceScales) {\n      this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n        id,\n        priceScale: this._originalActivePriceScales[id]\n      })\n    }\n\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING')\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Layout.vue?vue&type=template&id=4a1ffafc&\"\nimport script from \"./Layout.vue?vue&type=script&lang=ts&\"\nexport * from \"./Layout.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Layout.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"timeframe-dropdown\"},[_c('div',{staticClass:\"dropdown-item timeframe-dropdown__header\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('timeframe-input',{staticClass:\"timeframe-dropdown__input\",attrs:{\"placeholder\":\"enter tf.\"},on:{\"input\":_vm.onInput,\"submit\":_vm.addTimeframe}}),(_vm.typeaheadTimeframe && _vm.typeaheadTimeframe.value)?_c('div',{staticClass:\"text-nowrap text-monospace text-muted\"},[_vm._v(\" ~ \"+_vm._s(_vm.typeaheadTimeframe.label)+\" \")]):_vm._e(),_c('button',{staticClass:\"btn -text\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleEdit}},[_c('i',{class:_vm.editing ? 'icon-cross' : 'icon-edit'})])],1),_vm._l((_vm.groups),function(group){return _c('section',{key:group.title,staticClass:\"section section--small\"},[(_vm.timeframeGroups.indexOf(group.title) !== -1)?_c('div',{staticClass:\"section__content\"},_vm._l((group.timeframes),function(timeframe){return _c('button',{key:timeframe.value,staticClass:\"dropdown-item dropdown-item--space-between\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('timeframe', timeframe.value)}}},[_c('span',[_vm._v(_vm._s(timeframe.label))]),(_vm.editing)?_c('i',{staticClass:\"icon-trash\",on:{\"click\":function($event){$event.stopPropagation();return _vm.removeTimeframe(timeframe.value)}}}):_c('i',{staticClass:\"icon-star\",class:{ 'icon-star-filled': _vm.favoriteTimeframes[timeframe.value] },on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleFavoriteTimeframe(timeframe.value)}}})])}),0):_vm._e(),_c('div',{staticClass:\"section__title\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleGroup(group)}}},[_vm._v(\" \"+_vm._s(group.title)+\" \"),_c('i',{staticClass:\"icon-up-thin\"})])])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport TimeframeInput from '@/components/chart/TimeframeInput.vue'\nimport { getTimeframeForHuman } from '@/utils/helpers'\n\n@Component({\n  name: 'TimeframeDropdown',\n  components: {\n    TimeframeInput\n  },\n  props: {\n    paneId: {\n      type: String,\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  editing = false\n  typeaheadTimeframe = null\n\n  get timeframes() {\n    return this.$store.state.settings.timeframes\n  }\n\n  get favoriteTimeframes() {\n    return this.$store.state.settings.favoriteTimeframes\n  }\n\n  get timeframeGroups() {\n    return this.$store.state.settings.timeframeGroups\n  }\n\n  created() {\n    console.log('create timeframe dropdown')\n  }\n\n  mounted() {\n    console.log('mount timeframe dropdown')\n  }\n\n  get groups() {\n    console.log('get timeframe sections')\n    const units = ['seconds', 'minutes', 'hours', 'ticks']\n    let unit = -1\n    const minute = 60\n    const hour = minute * 60\n    const day = hour * 24\n\n    const typeahead = this.typeaheadTimeframe\n\n    return this.timeframes\n      .sort((a, b) => {\n        const x = a.value && a.value[a.value.length - 1] === 't'\n        const y = b.value && b.value[b.value.length - 1] === 't'\n        let order = x === y ? 0 : x ? 100000 : -100000\n\n        order += parseFloat(a.value) - parseFloat(b.value)\n        return order\n      })\n      .reduce((acc, timeframe) => {\n        if (\n          typeahead &&\n          typeahead.value != timeframe.value &&\n          timeframe.label.indexOf(typeahead.label) === -1\n        ) {\n          return acc\n        }\n\n        let currentUnit\n        if (+timeframe.value < minute) {\n          currentUnit = 0\n        } else if (+timeframe.value < hour) {\n          currentUnit = 1\n        } else if (+timeframe.value <= day) {\n          currentUnit = 2\n        } else {\n          currentUnit = 3\n        }\n\n        if (currentUnit > unit) {\n          acc.push({\n            title: units[currentUnit],\n            timeframes: []\n          })\n\n          unit = currentUnit\n        }\n\n        acc[acc.length - 1].timeframes.push(timeframe)\n\n        return acc\n      }, [])\n  }\n\n  toggleGroup(group) {\n    this.$store.commit('settings/TOGGLE_TIMEFRAME_GROUP', group.title)\n  }\n\n  toggleFavoriteTimeframe(timeframe) {\n    this.$store.commit('settings/TOGGLE_FAVORITE_TIMEFRAME', timeframe)\n  }\n\n  addTimeframe(value) {\n    if (!value) {\n      return\n    }\n\n    this.$store.commit(this.paneId + '/SET_TIMEFRAME', value)\n\n    if (!this.timeframes.find(timeframe => timeframe.value == value)) {\n      this.$store.commit('settings/ADD_TIMEFRAME', value)\n\n      this.$store.dispatch('app/showNotice', {\n        title: `Added timeframe ${getTimeframeForHuman(value)} to the list !`\n      })\n    }\n  }\n\n  removeTimeframe(value) {\n    this.$store.commit('settings/REMOVE_TIMEFRAME', value)\n  }\n\n  toggleEdit() {\n    this.editing = !this.editing\n  }\n\n  async onInput(event) {\n    this.typeaheadTimeframe = event\n\n    await this.$nextTick()\n\n    const groupsIds = Object.keys(this.groups)\n\n    if (\n      groupsIds.length === 1 &&\n      this.timeframeGroups.indexOf(this.groups[groupsIds[0]].title) === -1\n    ) {\n      this.toggleGroup(this.groups[groupsIds[0]])\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TimeframeDropdown.vue?vue&type=template&id=0d62332e&scoped=true&\"\nimport script from \"./TimeframeDropdown.vue?vue&type=script&lang=ts&\"\nexport * from \"./TimeframeDropdown.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./TimeframeDropdown.vue?vue&type=style&index=0&id=0d62332e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d62332e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-overlay__panel indicators-overlay\"},[(_vm.value)?_c('div',{staticClass:\"chart-overlay__content\"},[_c('dropdown',{model:{value:(_vm.dropdownTrigger),callback:function ($$v) {_vm.dropdownTrigger=$$v},expression:\"dropdownTrigger\"}},[_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.editIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-edit\"}),_c('span',[_vm._v(\"Edit\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.resizeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-resize-height\"}),_c('span',[_vm._v(\"Resize\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.duplicateIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.downloadIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-download\"}),_c('span',[_vm._v(\"Download\")])]),_c('div',{staticClass:\"dropdown-divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.removeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])]),_vm._l((_vm.indicators),function(indicator,id){return _c('IndicatorControl',{key:id,attrs:{\"indicator-id\":id,\"pane-id\":_vm.paneId},on:{\"action\":_vm.onClickIndicator}})})],2):_vm._e(),_c('div',{staticClass:\"chart-overlay__title pane-overlay\",on:{\"click\":_vm.toggleOverlay}},[_c('span',[_vm._v(\"Indicators\")]),_c('button',{staticClass:\"btn badge -outline\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.addIndicator.apply(null, arguments)}}},[_vm._v(\" Add \"),_c('i',{staticClass:\"icon-plus -small ml4\"})]),_c('i',{staticClass:\"icon-up-thin\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"indicator\",class:{ '-error': !!_vm.error, '-disabled': !_vm.visible }},[_c('button',{staticClass:\"indicator__name pane-overlay\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.onClick}},[_vm._v(\" \"+_vm._s(_vm.name)+\" \")]),_c('div',{staticClass:\"indicator__controls\"},[_c('button',{staticClass:\"btn\",attrs:{\"title\":_vm.visible ? 'Hide' : 'Show'},on:{\"click\":_vm.toggleVisibility}},[_c('i',{class:{ 'icon-visible': !_vm.visible, 'icon-hidden': _vm.visible }})]),_c('button',{staticClass:\"btn\",attrs:{\"title\":\"Menu\"},on:{\"click\":function($event){return _vm.$emit('action', { indicatorId: _vm.indicatorId, actionName: 'menu', event: $event })}}},[_c('i',{staticClass:\"icon-more\"})])]),_c('div',{staticClass:\"indicator__legend pane-overlay\",attrs:{\"id\":_vm.paneId + _vm.indicator.id}}),(_vm.error)?_c('div',[_c('i',{staticClass:\"icon-warning ml4 mr8\"}),_vm._v(\" \"+_vm._s(_vm.error)+\" \")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  name: 'IndicatorControl',\n  props: {\n    paneId: {\n      required: true\n    },\n    indicatorId: {\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  private indicatorId: string\n\n  get indicator() {\n    return this.$store.state[this.paneId].indicators[this.indicatorId]\n  }\n  get showLegend() {\n    return this.$store.state[this.paneId].showLegend\n  }\n\n  get name() {\n    if (this.indicator.displayName) {\n      return this.indicator.displayName\n    } else if (this.indicator.name) {\n      return this.indicator.name\n    } else {\n      return this.indicatorId\n    }\n  }\n\n  get visible() {\n    return !this.indicator.options ||\n      typeof this.indicator.options.visible === 'undefined'\n      ? true\n      : this.indicator.options.visible\n  }\n\n  get error() {\n    return this.$store.state[this.paneId].indicatorsErrors[this.indicatorId]\n  }\n\n  onClick(event) {\n    if (event.shiftKey) {\n      this.$emit('action', {\n        actionName: 'resize',\n        indicatorId: this.indicatorId\n      })\n\n      return\n    }\n\n    this.$emit('action', { indicatorId: this.indicatorId })\n  }\n\n  toggleVisibility() {\n    this.$nextTick(() => {\n      this.$store.dispatch(\n        this.paneId + '/toggleSerieVisibility',\n        this.indicatorId\n      )\n    })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IndicatorControl.vue?vue&type=template&id=1bc47e00&scoped=true&\"\nimport script from \"./IndicatorControl.vue?vue&type=script&lang=ts&\"\nexport * from \"./IndicatorControl.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./IndicatorControl.vue?vue&type=style&index=0&id=1bc47e00&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1bc47e00\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Dialog',{staticClass:\"-auto\",on:{\"clickOutside\":_vm.close},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"Add indicator\")]),_c('div',{staticClass:\"column -center\"})]},proxy:true}])},[_c('div',{staticClass:\"d-flex mobile-dir-col-desktop-dir-row\"},[(_vm.indicators.length)?[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(\"Choose from existing indicator\")]),_c('div',{staticClass:\"d-flex mb8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.query),expression:\"query\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"search\"},domProps:{\"value\":(_vm.query)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.query=$event.target.value}}}),_c('div',{staticClass:\"-center text-muted ml16\",domProps:{\"textContent\":_vm._s(_vm.indicators.length)}})]),(_vm.filteredIndicators.length)?_c('table',{staticClass:\"table\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Name\")]),_c('th',{staticClass:\"min-768\"},[_vm._v(\"Description\")]),_c('th')])]),_c('tbody',_vm._l((_vm.filteredIndicators),function(indicator){return _c('tr',{key:indicator.id,staticClass:\"-action\",on:{\"click\":function($event){return _vm.selectIndicator(indicator)}}},[_c('td',{staticClass:\"table-input\"},[_vm._v(\" \"+_vm._s((indicator.displayName || indicator.name).replace( /\\{[\\w_]+\\}/g, '' ))+\" \")]),_c('td',{staticClass:\"min-768 table-input\"},[_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(indicator.description))])]),_c('td',{staticClass:\"table-action -hover\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleDropdown($event, indicator)}}},[_c('button',{staticClass:\"btn -text -small\"},[_c('i',{staticClass:\"icon-more\"})])])])}),0)]):_vm._e()]),_c('hr',{staticClass:\"-single -horizontal\"}),_c('hr',{staticClass:\"-single -vertical\"})]:_vm._e(),_c('div',{staticClass:\"-unshrinkable\"},[_c('div',{staticClass:\"form-group mb16\"},[_c('label',[_vm._v(\"Import indicator\")]),_c('button',{staticClass:\"btn -blue -large -cases w-100 -file\"},[_c('i',{staticClass:\"icon-upload mr8\"}),_vm._v(\" Browse \"),_c('input',{attrs:{\"type\":\"file\"},on:{\"change\":_vm.handleFile}})]),_c('div',{staticClass:\"divider -horizontal\",staticStyle:{\"display\":\"flex\"}},[_vm._v(\"Or\")]),_c('label',[_vm._v(\"Create blank indicator\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.name),expression:\"name\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Name it\"},domProps:{\"value\":(_vm.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.name=$event.target.value}}})]),_c('div',{staticClass:\"form-group mb16\"},[_c('label',[_vm._v(\"Scale with\")]),_c('dropdown-button',{staticClass:\"-outline form-control -arrow\",attrs:{\"options\":_vm.availableScales,\"placeholder\":\"Default scale\"},on:{\"input\":function($event){return _vm.setPriceScaleId($event)}},model:{value:(_vm.priceScaleId),callback:function ($$v) {_vm.priceScaleId=$$v},expression:\"priceScaleId\"}})],1),_c('div',{staticClass:\"text-right\"},[_c('button',{staticClass:\"btn -large -green ml16\",on:{\"click\":function($event){return _vm.createIndicator()}}},[_vm._v(\" Start coding \"),_c('i',{staticClass:\"icon-plus ml8\"})])])])],2),_c('dropdown',{model:{value:(_vm.dropdownTrigger),callback:function ($$v) {_vm.dropdownTrigger=$$v},expression:\"dropdownTrigger\"}},[_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.selectIndicator()}}},[_c('i',{staticClass:\"icon-plus\"}),_c('span',[_vm._v(\"Add to chart\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.duplicateIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('div',{staticClass:\"dropdown-divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.removeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Dialog @clickOutside=\"close\" class=\"-auto\">\n    <template v-slot:header>\n      <div class=\"title\">Add indicator</div>\n      <div class=\"column -center\"></div>\n    </template>\n    <div class=\"d-flex mobile-dir-col-desktop-dir-row\">\n      <template v-if=\"indicators.length\">\n        <div class=\"form-group\">\n          <label>Choose from existing indicator</label>\n          <div class=\"d-flex mb8\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"search\"\n              v-model=\"query\"\n            />\n            <div\n              v-text=\"indicators.length\"\n              class=\"-center text-muted ml16\"\n            ></div>\n          </div>\n          <table v-if=\"filteredIndicators.length\" class=\"table\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th class=\"min-768\">Description</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"indicator of filteredIndicators\"\n                :key=\"indicator.id\"\n                @click=\"selectIndicator(indicator)\"\n                class=\"-action\"\n              >\n                <td class=\"table-input\">\n                  {{\n                    (indicator.displayName || indicator.name).replace(\n                      /\\{[\\w_]+\\}/g,\n                      ''\n                    )\n                  }}\n                </td>\n                <td class=\"min-768 table-input\">\n                  <span class=\"text-muted\">{{ indicator.description }}</span>\n                </td>\n                <td\n                  class=\"table-action -hover\"\n                  @click.stop=\"toggleDropdown($event, indicator)\"\n                >\n                  <button class=\"btn -text -small\">\n                    <i class=\"icon-more\"></i>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <hr class=\"-single -horizontal\" />\n        <hr class=\"-single -vertical\" />\n      </template>\n      <div class=\"-unshrinkable\">\n        <div class=\"form-group mb16\">\n          <label>Import indicator</label>\n          <button class=\"btn -blue -large -cases w-100 -file\">\n            <i class=\"icon-upload mr8\"></i> Browse\n            <input type=\"file\" @change=\"handleFile\" />\n          </button>\n          <div class=\"divider -horizontal\" style=\"display: flex\">Or</div>\n          <label>Create blank indicator</label>\n          <input class=\"form-control\" v-model=\"name\" placeholder=\"Name it\" />\n        </div>\n        <div class=\"form-group mb16\">\n          <label>Scale with</label>\n          <dropdown-button\n            v-model=\"priceScaleId\"\n            :options=\"availableScales\"\n            placeholder=\"Default scale\"\n            class=\"-outline form-control -arrow\"\n            @input=\"setPriceScaleId($event)\"\n          ></dropdown-button>\n        </div>\n        <div class=\"text-right\">\n          <button class=\"btn -large -green ml16\" @click=\"createIndicator()\">\n            Start coding <i class=\"icon-plus ml8\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <dropdown v-model=\"dropdownTrigger\">\n      <button type=\"button\" class=\"dropdown-item\" @click=\"selectIndicator()\">\n        <i class=\"icon-plus\"></i>\n        <span>Add to chart</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"dropdown-item\"\n        @click=\"duplicateIndicator(selectedIndicator)\"\n      >\n        <i class=\"icon-copy-paste\"></i>\n        <span>Duplicate</span>\n      </button>\n      <div class=\"dropdown-divider\"></div>\n      <button\n        type=\"button\"\n        class=\"dropdown-item\"\n        @click=\"removeIndicator(selectedIndicator)\"\n      >\n        <i class=\"icon-trash\"></i>\n        <span>Remove</span>\n      </button>\n    </dropdown>\n  </Dialog>\n</template>\n\n<script>\nimport { slugify, uniqueName } from '@/utils/helpers'\nimport Dialog from '@/components/framework/Dialog.vue'\nimport DropdownButton from '@/components/framework/DropdownButton.vue'\nimport DialogMixin from '@/mixins/dialogMixin'\nimport dialogService from '@/services/dialogService'\nimport workspacesService from '@/services/workspacesService'\nimport importService from '@/services/importService'\n\nexport default {\n  mixins: [DialogMixin],\n  components: {\n    Dialog,\n    DropdownButton\n  },\n  props: {\n    paneId: {\n      type: String,\n      required: true\n    }\n  },\n  data: () => ({\n    name: '',\n    priceScaleId: 'right',\n    query: '',\n    indicators: [],\n    selectedIndicator: null,\n    dropdownTrigger: null\n  }),\n  computed: {\n    indicatorId: function() {\n      return uniqueName(\n        slugify(this.name),\n        this.indicators.map(i => i.id)\n      )\n    },\n    queryFilter: function() {\n      return new RegExp(this.query.replace(/\\W/, '.*'), 'i')\n    },\n    filteredIndicators: function() {\n      return this.indicators.filter(\n        a =>\n          this.queryFilter.test(a.name) || this.queryFilter.test(a.displayName)\n      )\n    },\n    availableScales: function() {\n      return this.indicators\n        .map(s => s.options && s.options.priceScaleId)\n        .reduce(\n          (scales, priceScaleId) => {\n            if (!priceScaleId || scales[priceScaleId]) {\n              return scales\n            }\n\n            scales[priceScaleId] = priceScaleId\n            return scales\n          },\n          {\n            '': 'Own scale',\n            right: 'Main scale (right)'\n          }\n        )\n    }\n  },\n  async created() {\n    await this.getIndicators()\n  },\n  beforeDestroy() {\n    if (this.editor) {\n      this.editor.destroy()\n    }\n  },\n  methods: {\n    async getIndicators() {\n      this.indicators = (await workspacesService.getIndicators()).sort(\n        (a, b) => (b.uses || 0) - (a.uses || 0)\n      )\n    },\n    async handleFile(event) {\n      try {\n        const preset = await importService.getJSON(event.target.files[0])\n\n        if (!preset.data) {\n          throw new Error('indicator is empty')\n        }\n\n        if (preset.type !== 'indicator') {\n          throw new Error('not an indicator')\n        }\n\n        this.createIndicator({\n          name: preset.name\n            .split(':')\n            .slice(1)\n            .join(':'),\n          script: preset.data.script || '',\n          options: preset.data.options || {}\n        })\n      } catch (error) {\n        this.$store.dispatch('app/showNotice', {\n          title: error.message,\n          type: 'error'\n        })\n      }\n    },\n    async createIndicator(indicator) {\n      if (!indicator) {\n        indicator = {}\n      }\n\n      if (indicator.name) {\n        this.name = indicator.name\n      } else if (!this.name) {\n        this.name = 'Untitled'\n      }\n\n      indicator.id = this.indicatorId\n      indicator.name = this.name\n\n      if (!indicator.priceScaleId) {\n        const slug = slugify(indicator.name)\n\n        indicator.priceScaleId = this.priceScaleId || slug\n      }\n\n      this.$store.dispatch(this.paneId + '/addIndicator', indicator)\n\n      dialogService.openIndicator(this.paneId, indicator.id)\n\n      this.close(null)\n    },\n    selectIndicator(indicator = this.selectedIndicator) {\n      workspacesService.incrementIndicatorUsage(indicator.id)\n\n      this.$store.dispatch(this.paneId + '/addIndicator', indicator)\n      this.close(null)\n    },\n    async removeIndicator(indicator = this.selectedIndicator) {\n      if (\n        await dialogService.confirm(`Delete indicator \"${indicator.name}\" ?`)\n      ) {\n        workspacesService.deleteIndicator(indicator.id)\n\n        this.indicators.splice(this.indicators.indexOf(indicator), 1)\n      }\n    },\n    async duplicateIndicator(indicator = this.selectedIndicator) {\n      this.$store.dispatch(this.paneId + '/duplicateIndicator', {\n        paneId: this.paneId,\n        indicatorId: indicator.id\n      })\n    },\n    toggleDropdown(event, indicator) {\n      if (\n        event &&\n        (!this.dropdownTrigger || this.selectedIndicator !== indicator)\n      ) {\n        this.dropdownTrigger = event.currentTarget\n        this.selectedIndicator = indicator\n      } else {\n        this.dropdownTrigger = null\n        this.selectedIndicator = null\n      }\n    },\n    setPriceScaleId(id) {\n      this.priceScaleId = id\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateIndicatorDialog.vue?vue&type=template&id=6f134462&\"\nimport script from \"./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\nimport { ChartPaneState } from '../../store/panesSettings/chart'\n\nimport dialogService from '../../services/dialogService'\n\nimport IndicatorControl from '@/components/chart/IndicatorControl.vue'\nimport CreateIndicatorDialog from '@/components/chart/CreateIndicatorDialog.vue'\n\n@Component({\n  name: 'IndicatorsOverlay',\n  components: {\n    IndicatorControl\n  },\n  props: {\n    paneId: {\n      type: String\n    },\n    value: {\n      type: Boolean,\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  private value: boolean\n\n  dropdownTrigger = null\n  selectedIndicator = null\n\n  get indicators() {\n    return (this.$store.state[this.paneId] as ChartPaneState).indicators\n  }\n\n  get ids() {\n    return Object.values(this.indicators).map(a => a.id)\n  }\n\n  $refs!: {\n    indicatorDropdown: any\n  }\n\n  toggleOverlay() {\n    this.$emit('input', !this.value)\n  }\n\n  toggleDropdown(event?: Event, id?: string) {\n    if (event && (!this.dropdownTrigger || this.selectedIndicator !== id)) {\n      this.dropdownTrigger = event.currentTarget\n      this.selectedIndicator = id\n    } else {\n      this.dropdownTrigger = null\n      this.selectedIndicator = null\n    }\n  }\n\n  async editIndicator(indicatorId: string) {\n    dialogService.open(\n      (await import('@/components/chart/IndicatorDialog.vue')).default,\n      { paneId: this.paneId, indicatorId: indicatorId },\n      'indicator'\n    )\n    this.dropdownTrigger = null\n  }\n\n  removeIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/removeIndicator', { id: indicatorId })\n  }\n\n  resizeIndicator(indicatorId: string) {\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING', indicatorId)\n  }\n\n  duplicateIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/duplicateIndicator', indicatorId)\n  }\n\n  downloadIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/downloadIndicator', indicatorId)\n  }\n\n  addIndicator() {\n    dialogService.open(CreateIndicatorDialog, { paneId: this.paneId })\n  }\n\n  onClickIndicator({\n    indicatorId,\n    actionName,\n    event\n  }: {\n    indicatorId: string\n    actionName?: string\n    event?: Event\n  }) {\n    switch (actionName) {\n      case 'menu':\n        return this.toggleDropdown(event, indicatorId)\n      case 'remove':\n        return this.removeIndicator(indicatorId)\n      case 'resize':\n        return this.resizeIndicator(indicatorId)\n    }\n\n    return this.editIndicator(indicatorId)\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IndicatorsOverlay.vue?vue&type=template&id=4463ad8b&scoped=true&\"\nimport script from \"./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"\nexport * from \"./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./IndicatorsOverlay.vue?vue&type=style&index=0&id=4463ad8b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4463ad8b\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-overlay__panel markets-overlay\"},[(_vm.showOverlay)?_c('div',{staticClass:\"chart-overlay__content pane-overlay\"},[_c('div',{staticClass:\"column\"},[_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('perp')}}},[_vm._v(\"perp\")]),_c('i',{staticClass:\"pipe -center\"},[_vm._v(\"|\")]),_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('spot')}}},[_vm._v(\"spot\")]),_c('i',{staticClass:\"pipe -center\"},[_vm._v(\"|\")]),_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('all')}}},[_vm._v(\"all\")])]),_c('div',{staticClass:\"mx8 mt0\"},_vm._l((_vm.markets),function(market){return _c('div',{key:market,on:{\"click\":function($event){return _vm.toggleMarket($event, market)}}},[_c('label',{staticClass:\"checkbox-control -extra-small mb4\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":!_vm.hiddenMarkets[market]},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();}}}),_c('div'),_c('span',[_vm._v(_vm._s(market))])])])}),0)]):_vm._e(),_c('div',{staticClass:\"chart-overlay__title pane-overlay\",on:{\"click\":function($event){_vm.showOverlay = !_vm.showOverlay}}},[_c('div',[_vm._v(\"Sources\")]),_c('button',{staticClass:\"btn badge -outline\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.searchMarkets}},[_c('span',{staticClass:\"mr4\"},[_vm._v(\" \"+_vm._s(_vm.visibleMarkets)+\" \")]),_vm._v(\"| \"),_c('span',[_vm._v(\" Add\")]),_c('i',{staticClass:\"icon-plus -small ml4\"})]),_c('i',{staticClass:\"icon-up-thin\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  name: 'MarketsOverlay',\n  props: {\n    paneId: {\n      type: String\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  showOverlay = false\n\n  get markets() {\n    return this.$store.state.panes.panes[this.paneId].markets\n  }\n\n  get hiddenMarkets() {\n    return this.$store.state[this.paneId].hiddenMarkets\n  }\n\n  get visibleMarkets() {\n    return this.markets.filter(a => !this.hiddenMarkets[a]).length\n  }\n\n  searchMarkets(event) {\n    this.$store.dispatch('app/showSearch', this.paneId)\n    event.stopPropagation()\n  }\n\n  toggleMarket(event, id) {\n    this.$store.dispatch(this.paneId + '/toggleMarkets', {\n      id,\n      inverse: event.shiftKey\n    })\n  }\n\n  toggleMarkets(type) {\n    this.$store.dispatch(this.paneId + '/toggleMarkets', { type })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MarketsOverlay.vue?vue&type=template&id=fd44c7e2&\"\nimport script from \"./MarketsOverlay.vue?vue&type=script&lang=ts&\"\nexport * from \"./MarketsOverlay.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MarketsOverlay.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Mixins } from 'vue-property-decorator'\r\n\r\nimport ChartController, { TimeRange } from './chart'\r\n\r\nimport {\r\n  formatBytes,\r\n  openBase64InNewTab,\r\n  getTimeframeForHuman,\r\n  floorTimestampToTimeframe\r\n} from '@/utils/helpers'\r\nimport { formatPrice, formatAmount } from '@/services/productsService'\r\nimport { defaultChartOptions, getChartCustomColorsOptions } from './options'\r\nimport { ChartPaneState } from '@/store/panesSettings/chart'\r\nimport { getColorLuminance, joinRgba, splitColorCode } from '@/utils/colors'\r\nimport { Chunk } from './cache'\r\nimport { isTouchSupported, getEventOffset } from '@/utils/touchevent'\r\nimport { MarketAlert, Trade } from '@/types/types'\r\n\r\nimport aggregatorService from '@/services/aggregatorService'\r\nimport historicalService, {\r\n  HistoricalResponse\r\n} from '@/services/historicalService'\r\nimport dialogService from '@/services/dialogService'\r\nimport workspacesService from '@/services/workspacesService'\r\nimport alertService from '@/services/alertService'\r\n\r\nimport PaneMixin from '@/mixins/paneMixin'\r\nimport PaneHeader from '@/components/panes/PaneHeader.vue'\r\nimport ChartLayout from '@/components/chart/Layout.vue'\r\nimport TimeframeDropdown from '@/components/chart/TimeframeDropdown.vue'\r\nimport IndicatorsOverlay from '@/components/chart/IndicatorsOverlay.vue'\r\nimport MarketsOverlay from '@/components/chart/MarketsOverlay.vue'\r\n\r\n@Component({\r\n  name: 'Chart',\r\n  components: {\r\n    ChartLayout,\r\n    PaneHeader,\r\n    TimeframeDropdown,\r\n    IndicatorsOverlay,\r\n    MarketsOverlay\r\n  }\r\n})\r\nexport default class extends Mixins(PaneMixin) {\r\n  axis = [null, null]\r\n\r\n  showIndicatorsOverlay = false\r\n  timeframeDropdownTrigger = null\r\n\r\n  private _timeToRecycle: number\r\n  private _recycleTimeout: number\r\n  private _onPanTimeout: number\r\n  private _chartController: ChartController\r\n  private _legendElements: { [id: string]: HTMLElement }\r\n  private _lastCrosshairCoordinates: number\r\n  private _reachedEnd: boolean\r\n  private _loading: boolean\r\n  private _levelDragMoveHandler: any\r\n  private _levelDragEndHandler: any\r\n\r\n  get layouting() {\r\n    this.updateChartAxis()\r\n    return (this.$store.state[this.paneId] as ChartPaneState).layouting\r\n  }\r\n\r\n  get showLegend() {\r\n    return (this.$store.state[this.paneId] as ChartPaneState).showLegend\r\n  }\r\n\r\n  get favoriteTimeframes() {\r\n    return this.$store.state.settings.favoriteTimeframes\r\n  }\r\n\r\n  get timeframe() {\r\n    return this.$store.state[this.paneId].timeframe\r\n  }\r\n\r\n  get timeframeForHuman() {\r\n    if (!this.timeframe) {\r\n      return 'ERR'\r\n    }\r\n\r\n    return getTimeframeForHuman(this.timeframe)\r\n  }\r\n\r\n  get alerts() {\r\n    return this.$store.state[this.paneId].alerts\r\n  }\r\n\r\n  $refs!: {\r\n    chartContainer: HTMLElement\r\n  }\r\n\r\n  created() {\r\n    this._chartController = new ChartController(this.paneId)\r\n\r\n    this._legendElements = {}\r\n\r\n    this._onStoreMutation = this.$store.subscribe(mutation => {\r\n      switch (mutation.type) {\r\n        case 'settings/SET_TEXT_COLOR':\r\n          this._chartController.chartInstance.applyOptions(\r\n            getChartCustomColorsOptions(mutation.payload)\r\n          )\r\n          break\r\n        case 'settings/SET_CHART_THEME':\r\n          this._chartController.chartInstance.applyOptions(\r\n            getChartCustomColorsOptions()\r\n          )\r\n          break\r\n        case 'settings/TOGGLE_NORMAMIZE_WATERMARKS':\r\n          this._chartController.refreshMarkets()\r\n          break\r\n        case 'settings/SET_TIMEZONE_OFFSET':\r\n          this._chartController.setTimezoneOffset(\r\n            this.$store.state.settings.timezoneOffset\r\n          )\r\n          this._chartController.clearChart()\r\n          this._chartController.renderAll()\r\n          break\r\n        case 'panes/SET_PANE_MARKETS':\r\n          if (mutation.payload.id === this.paneId) {\r\n            ;(this.$store.state[\r\n              this.paneId\r\n            ] as ChartPaneState).hiddenMarkets = {}\r\n            this._chartController.refreshMarkets()\r\n\r\n            this.clear()\r\n            this.fetch()\r\n          }\r\n          break\r\n        case 'panes/SET_PANE_ZOOM':\r\n          if (mutation.payload.id === this.paneId) {\r\n            this._chartController.updateFontSize()\r\n          }\r\n\r\n          this.updateChartAxis()\r\n          break\r\n        case this.paneId + '/SET_TIMEFRAME':\r\n          this.setTimeframe(mutation.payload)\r\n          break\r\n        case 'settings/TOGGLE_ALERTS':\r\n        case 'app/EXCHANGE_UPDATED':\r\n        case this.paneId + '/TOGGLE_MARKET':\r\n          this._chartController.refreshMarkets()\r\n          this._chartController.renderAll()\r\n          break\r\n        case this.paneId + '/SET_REFRESH_RATE':\r\n          this._chartController.clearQueue()\r\n          this._chartController.setupQueue()\r\n          break\r\n        case this.paneId + '/TOGGLE_LEGEND':\r\n          if (this.showLegend) {\r\n            this.bindLegend()\r\n          } else {\r\n            this.unbindLegend()\r\n          }\r\n          break\r\n        case this.paneId + '/SET_GRIDLINES':\r\n          this.updateGridlines(mutation.payload.type)\r\n          break\r\n        case this.paneId + '/SET_WATERMARK':\r\n        case this.paneId + '/TOGGLE_NORMAMIZE_WATERMARKS':\r\n          this._chartController.updateWatermark()\r\n          break\r\n        case this.paneId + '/SET_INDICATOR_OPTION':\r\n          this._chartController.setIndicatorOption(\r\n            mutation.payload.id,\r\n            mutation.payload.key,\r\n            mutation.payload.value,\r\n            mutation.payload.silent\r\n          )\r\n          break\r\n        case this.paneId + '/SET_PRICE_SCALE':\r\n          if (mutation.payload.priceScale) {\r\n            this._chartController.refreshPriceScale(mutation.payload.id)\r\n          }\r\n          break\r\n        case this.paneId + '/SET_INDICATOR_SCRIPT':\r\n          this._chartController.rebuildIndicator(mutation.payload.id)\r\n          break\r\n        case this.paneId + '/ADD_INDICATOR':\r\n          if (this._chartController.addIndicator(mutation.payload.id)) {\r\n            this._chartController.redrawIndicator(mutation.payload.id)\r\n            this.bindLegend(mutation.payload.id)\r\n          }\r\n\r\n          break\r\n        case this.paneId + '/REMOVE_INDICATOR':\r\n          this.unbindLegend(mutation.payload)\r\n          this._chartController.removeIndicator(mutation.payload)\r\n          break\r\n        case this.paneId + '/TOGGLE_FILL_GAPS_WITH_EMPTY':\r\n          this._chartController.toggleFillGapsWithEmpty()\r\n          break\r\n        case this.paneId + '/TOGGLE_FORCE_NORMALIZE_PRICE':\r\n          this._chartController.propagateInitialPrices = (this.$store.state[\r\n            this.paneId\r\n          ] as ChartPaneState).forceNormalizePrice\r\n          this.clear()\r\n          this.fetch()\r\n          break\r\n        case 'settings/TOGGLE_AUTO_HIDE_HEADERS':\r\n          this.refreshChartDimensions()\r\n          break\r\n      }\r\n    })\r\n  }\r\n\r\n  mounted() {\r\n    this.showIndicatorsOverlay = this.$parent.$el.clientHeight > 420\r\n\r\n    this.createChart()\r\n  }\r\n\r\n  async createChart() {\r\n    await this.$nextTick()\r\n\r\n    this._chartController.createChart(this.$refs.chartContainer)\r\n\r\n    await this.$nextTick()\r\n\r\n    this.bindChartEvents()\r\n    this.setupRecycle()\r\n\r\n    this.fetch()\r\n\r\n    this._chartController.setupQueue()\r\n  }\r\n\r\n  destroyChart() {\r\n    this.unbindChartEvents()\r\n\r\n    this._chartController.destroy()\r\n\r\n    clearTimeout(this._recycleTimeout)\r\n  }\r\n\r\n  beforeDestroy() {\r\n    this.destroyChart()\r\n  }\r\n\r\n  /**\r\n   * fetch whatever is missing based on visiblerange\r\n   * @param {TimeRange} range range to fetch\r\n   */\r\n  fetch(range?: TimeRange) {\r\n    if (!range) {\r\n      this._reachedEnd = false\r\n    }\r\n    const alreadyHasData =\r\n      this._chartController.chartCache.cacheRange &&\r\n      this._chartController.chartCache.cacheRange.from\r\n\r\n    const historicalMarkets = historicalService.filterOutUnavailableMarkets(\r\n      this.$store.state.panes.panes[this.paneId].markets\r\n    )\r\n\r\n    if (!historicalMarkets.length) {\r\n      return\r\n    }\r\n\r\n    const timeframe = +(this.$store.state[this.paneId] as ChartPaneState)\r\n      .timeframe\r\n\r\n    if (!timeframe) {\r\n      this._reachedEnd = true\r\n      return\r\n    }\r\n\r\n    if (\r\n      this.$store.state.app.apiSupportedTimeframes.indexOf(\r\n        this.timeframe.toString()\r\n      ) === -1\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const visibleRange = this._chartController.getVisibleRange() as TimeRange\r\n\r\n    let rangeToFetch\r\n\r\n    if (!range) {\r\n      let rightTime\r\n\r\n      if (alreadyHasData) {\r\n        rightTime = this._chartController.chartCache.cacheRange.from\r\n      } else if (visibleRange && visibleRange.from) {\r\n        rightTime =\r\n          visibleRange.from + this.$store.state.settings.timezoneOffset / 1000\r\n      } else {\r\n        rightTime = Date.now() / 1000\r\n      }\r\n\r\n      rangeToFetch = {\r\n        from: rightTime - timeframe * 20,\r\n        to: rightTime\r\n      }\r\n    } else {\r\n      rangeToFetch = range\r\n    }\r\n\r\n    rangeToFetch.from = floorTimestampToTimeframe(\r\n      Math.round(rangeToFetch.from),\r\n      timeframe\r\n    )\r\n    rangeToFetch.to =\r\n      floorTimestampToTimeframe(Math.round(rangeToFetch.to), timeframe) +\r\n      timeframe\r\n\r\n    if (this._chartController.chartCache.cacheRange.from) {\r\n      rangeToFetch.to = Math.min(\r\n        floorTimestampToTimeframe(\r\n          this._chartController.chartCache.cacheRange.from,\r\n          timeframe\r\n        ),\r\n        rangeToFetch.to\r\n      )\r\n    }\r\n\r\n    const barsCount = Math.floor(\r\n      (rangeToFetch.to - rangeToFetch.from) / timeframe\r\n    )\r\n    const bytesPerBar = 112\r\n    const estimatedSize = formatBytes(\r\n      barsCount * historicalMarkets.length * bytesPerBar\r\n    )\r\n\r\n    this.$store.dispatch('app/showNotice', {\r\n      id: 'fetching-' + this.paneId,\r\n      timeout: 15000,\r\n      title: `Fetching ${barsCount *\r\n        historicalMarkets.length} bars (~${estimatedSize})`,\r\n      type: 'info'\r\n    })\r\n\r\n    this._loading = true\r\n\r\n    return historicalService\r\n      .fetch(\r\n        rangeToFetch.from * 1000,\r\n        rangeToFetch.to * 1000,\r\n        timeframe,\r\n        historicalMarkets\r\n      )\r\n      .then(results => this.onHistorical(results))\r\n      .catch(err => {\r\n        console.error(err)\r\n\r\n        this._reachedEnd = true\r\n      })\r\n      .then(() => {\r\n        this.$store.dispatch('app/hideNotice', 'fetching-' + this.paneId)\r\n\r\n        setTimeout(() => {\r\n          this._loading = false\r\n\r\n          this.fetchMore(\r\n            this._chartController.chartInstance\r\n              .timeScale()\r\n              .getVisibleLogicalRange()\r\n          )\r\n        }, 200)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * TV chart mousemove event\r\n   * @param{TV.MouseEventParams} param tv mousemove param\r\n   */\r\n  onCrosshair(param) {\r\n    let x\r\n\r\n    if (\r\n      param &&\r\n      param.time &&\r\n      param.point.x > 0 &&\r\n      param.point.x < this.$refs.chartContainer.clientWidth\r\n    ) {\r\n      x = param.point.x\r\n    }\r\n\r\n    if (this._lastCrosshairCoordinates === x) {\r\n      return\r\n    }\r\n\r\n    this._lastCrosshairCoordinates = x\r\n\r\n    for (let i = 0; i < this._chartController.loadedIndicators.length; i++) {\r\n      const indicator = this._chartController.loadedIndicators[i]\r\n\r\n      if (!indicator.apis.length) {\r\n        continue\r\n      }\r\n\r\n      const id = this.paneId + indicator.id\r\n\r\n      if (!this._legendElements[id]) {\r\n        continue\r\n      }\r\n\r\n      if (!x) {\r\n        continue\r\n      }\r\n\r\n      let text = ''\r\n\r\n      for (let j = 0; j < indicator.apis.length; j++) {\r\n        if (j > 10) {\r\n          break\r\n        }\r\n\r\n        const api = indicator.apis[j]\r\n\r\n        const data = param.seriesPrices.get(api)\r\n\r\n        if (text.length) {\r\n          text += '\\u00a0|\\u00a0'\r\n        }\r\n\r\n        if (!data) {\r\n          text += 'na'\r\n          continue\r\n        }\r\n\r\n        const formatFunction =\r\n          indicator.options.priceFormat &&\r\n          indicator.options.priceFormat.type === 'volume'\r\n            ? formatAmount\r\n            : formatPrice\r\n\r\n        if (typeof data === 'number') {\r\n          text += formatFunction(data, api.precision)\r\n        } else if (data.close) {\r\n          text += `O: ${formatFunction(\r\n            data.open,\r\n            api.precision\r\n          )} H: ${formatFunction(data.high, api.precision)} L: ${formatFunction(\r\n            data.low,\r\n            api.precision\r\n          )} C: ${formatFunction(data.close, api.precision)}`\r\n        }\r\n      }\r\n\r\n      this._legendElements[id].textContent = text\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the historical service response\r\n   * Split bars into chunks and add to chartCache\r\n   * Render chart once everything is done\r\n   */\r\n  onHistorical(results: HistoricalResponse) {\r\n    const chunk: Chunk = {\r\n      from: results.from,\r\n      to: results.to,\r\n      bars: results.data\r\n    }\r\n\r\n    this._chartController.chartCache.saveChunk(chunk)\r\n\r\n    if (\r\n      !(this.$store.state[this.paneId] as ChartPaneState).forceNormalizePrice\r\n    ) {\r\n      this._chartController.propagateInitialPrices = false\r\n    }\r\n\r\n    this._chartController.renderAll(true)\r\n  }\r\n\r\n  onTrades(trades: Trade[]) {\r\n    this._chartController.queueTrades(trades)\r\n  }\r\n\r\n  onAlert({ price, market }: { price: number; market: string }) {\r\n    this._chartController.triggerAlert(market, price)\r\n  }\r\n\r\n  refreshChartDimensions() {\r\n    if (!this._chartController || !this._chartController.chartInstance) {\r\n      return\r\n    }\r\n\r\n    this.$nextTick(() => {\r\n      let headerHeight = 0\r\n\r\n      if (!this.$store.state.settings.autoHideHeaders) {\r\n        headerHeight =\r\n          (this.$store.state.panes.panes[this.paneId].zoom || 1) * 2 * 16\r\n      }\r\n\r\n      this._chartController.chartInstance.resize(\r\n        this.$el.clientWidth,\r\n        this.$el.clientHeight - headerHeight\r\n      )\r\n    })\r\n  }\r\n\r\n  onPan(visibleLogicalRange) {\r\n    if (\r\n      !visibleLogicalRange ||\r\n      this._chartController.panPrevented ||\r\n      this._loading ||\r\n      /t$/.test(this.timeframe)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (this._onPanTimeout) {\r\n      clearTimeout(this._onPanTimeout)\r\n      this._onPanTimeout = null\r\n    }\r\n\r\n    this._onPanTimeout = setTimeout(() => {\r\n      this._onPanTimeout = null\r\n\r\n      if (this._chartController.chartCache.cacheRange.from === null) {\r\n        return\r\n      }\r\n\r\n      // get latest visible logical range\r\n      visibleLogicalRange = this._chartController.chartInstance\r\n        .timeScale()\r\n        .getVisibleLogicalRange()\r\n\r\n      this.savePosition(visibleLogicalRange)\r\n\r\n      this.fetchMore(visibleLogicalRange)\r\n    }, 500)\r\n  }\r\n\r\n  bindChartEvents() {\r\n    aggregatorService.on('trades', this.onTrades)\r\n    aggregatorService.on('alert', this.onAlert)\r\n\r\n    if (this.showLegend && this.showIndicatorsOverlay) {\r\n      this.bindLegend()\r\n    }\r\n\r\n    this._chartController.chartInstance\r\n      .timeScale()\r\n      .subscribeVisibleLogicalRangeChange(this.onPan)\r\n\r\n    if (process.env.VUE_APP_PUBLIC_VAPID_KEY) {\r\n      const canvas = this._chartController.chartElement.querySelector(\r\n        'canvas:nth-child(2)'\r\n      )\r\n      canvas.addEventListener(\r\n        isTouchSupported() ? 'touchstart' : 'mousedown',\r\n        this.onLevelDragStart\r\n      )\r\n    }\r\n  }\r\n\r\n  unbindChartEvents() {\r\n    aggregatorService.off('trades', this.onTrades)\r\n    aggregatorService.off('alert', this.onAlert)\r\n\r\n    this.unbindLegend()\r\n\r\n    this._chartController.chartInstance\r\n      .timeScale()\r\n      .unsubscribeVisibleLogicalRangeChange(this.onPan)\r\n\r\n    if (process.env.VUE_APP_PUBLIC_VAPID_KEY) {\r\n      const canvas = this._chartController.chartElement.querySelector(\r\n        'canvas:nth-child(2)'\r\n      )\r\n      canvas.removeEventListener(\r\n        isTouchSupported() ? 'touchstart' : 'mousedown',\r\n        this.onLevelDragStart\r\n      )\r\n    }\r\n  }\r\n\r\n  onLevelDragStart(event) {\r\n    if (\r\n      this._levelDragEndHandler ||\r\n      !this.$store.state.settings.alerts ||\r\n      event.button ||\r\n      dialogService.hasDialogOpened\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const dataAtPoint = this._chartController.getPricelineAtPoint(event)\r\n\r\n    if (!dataAtPoint || !dataAtPoint.api) {\r\n      return\r\n    }\r\n\r\n    const canvas = this._chartController.chartElement.querySelector(\r\n      'canvas:nth-child(2)'\r\n    )\r\n\r\n    if ((dataAtPoint as any).priceline) {\r\n      this._chartController.disableCrosshair()\r\n    }\r\n\r\n    this._levelDragMoveHandler = this.onLevelDragMove.bind(\r\n      this,\r\n      dataAtPoint,\r\n      Date.now()\r\n    )\r\n    canvas.addEventListener(\r\n      /touch/.test(event.type) ? 'touchmove' : 'mousemove',\r\n      this._levelDragMoveHandler\r\n    )\r\n\r\n    this._levelDragEndHandler = this.onLevelDragEnd.bind(\r\n      this,\r\n      dataAtPoint,\r\n      Date.now()\r\n    )\r\n    canvas.addEventListener(\r\n      /touch/.test(event.type) ? 'touchend' : 'mouseup',\r\n      this._levelDragEndHandler\r\n    )\r\n  }\r\n\r\n  onLevelDragMove(\r\n    { api, priceline, originalOffset, offset },\r\n    startedAt,\r\n    event\r\n  ) {\r\n    const { x, y } = getEventOffset(event)\r\n\r\n    const canMove =\r\n      Math.abs(originalOffset.y - y) > 5 || Date.now() - startedAt > 100\r\n\r\n    offset.x = x\r\n    offset.y = y\r\n\r\n    if (priceline) {\r\n      event.stopPropagation()\r\n\r\n      if (!canMove) {\r\n        return\r\n      }\r\n\r\n      const price = +formatPrice(\r\n        api.coordinateToPrice(y) as number,\r\n        api.options().priceFormat.precision\r\n      )\r\n\r\n      priceline.applyOptions({\r\n        price\r\n      })\r\n    }\r\n  }\r\n\r\n  async onLevelDragEnd(\r\n    { api, priceline, price, market, canCreate, originalOffset, offset },\r\n    startedAt,\r\n    event\r\n  ) {\r\n    const canvas = this._chartController.chartElement.querySelector(\r\n      'canvas:nth-child(2)'\r\n    )\r\n\r\n    const canMove =\r\n      Math.abs(originalOffset.y - offset.y) > 5 || Date.now() - startedAt > 200\r\n    canCreate = !priceline && canCreate && !canMove\r\n\r\n    if (priceline || canCreate) {\r\n      this._chartController.chartInstance.clearCrosshairPosition()\r\n    }\r\n\r\n    // unbind up\r\n    canvas.removeEventListener(\r\n      /touch/.test(event.type) ? 'touchend' : 'mouseup',\r\n      this._levelDragEndHandler\r\n    )\r\n    this._levelDragEndHandler = null\r\n\r\n    if (this._levelDragMoveHandler) {\r\n      // unbind move\r\n      canvas.removeEventListener(\r\n        /touch/.test(event.type) ? 'touchmove' : 'mousemove',\r\n        this._levelDragMoveHandler\r\n      )\r\n      this._levelDragMoveHandler = null\r\n    }\r\n\r\n    if (this._onPanTimeout) {\r\n      return\r\n    }\r\n\r\n    if (priceline) {\r\n      this._chartController.enableCrosshair()\r\n      const alert = this._chartController.alerts[market].find(\r\n        a => a.price === price\r\n      )\r\n      const newPrice = priceline.options().price\r\n\r\n      if (price !== newPrice && canMove) {\r\n        const active = await alertService.moveAlert(market, price, newPrice)\r\n\r\n        alert.triggered = false\r\n        alert.price = newPrice\r\n        alert.active = active\r\n\r\n        await workspacesService.saveAlerts({\r\n          market,\r\n          alerts: this._chartController.alerts[market].filter(\r\n            a => a.market === alert.market\r\n          )\r\n        })\r\n\r\n        priceline.applyOptions({\r\n          title: ''\r\n        })\r\n      } else {\r\n        api.removePriceLine(priceline)\r\n\r\n        // unregister alert from server\r\n        try {\r\n          await alertService.unsubscribe(market, price)\r\n        } catch (err) {\r\n          if (alert && alert.active) {\r\n            this.$store.dispatch('app/showNotice', {\r\n              id: 'alert-registration-failure',\r\n              title: `${err.message}\\nYou need to make sure your browser is set to allow push notifications.`,\r\n              type: 'error'\r\n            })\r\n          }\r\n        }\r\n\r\n        // save remaining active alerts for this market\r\n        const index = this._chartController.alerts[market].indexOf(alert)\r\n\r\n        if (index !== -1) {\r\n          this._chartController.alerts[market].splice(index, 1)\r\n        }\r\n\r\n        await workspacesService.saveAlerts({\r\n          market,\r\n          alerts: this._chartController.alerts[market].filter(\r\n            a => a.price !== price\r\n          )\r\n        })\r\n      }\r\n    } else if (canCreate) {\r\n      // draw line first with 50% opacity\r\n      const color = splitColorCode(this.$store.state.settings.alertsColor)\r\n      const alpha = color[3] || 1\r\n      color[3] = alpha * 0.5\r\n\r\n      let timestamp\r\n\r\n      if (!(event.ctrlKey || event.metaKey)) {\r\n        timestamp = this._chartController.chartInstance\r\n          .timeScale()\r\n          .coordinateToTime(offset.x)\r\n      }\r\n\r\n      const priceline = this._chartController.renderAlert(\r\n        {\r\n          price,\r\n          market,\r\n          timestamp\r\n        },\r\n        api,\r\n        joinRgba(color)\r\n      )\r\n\r\n      const alert: MarketAlert = {\r\n        price,\r\n        market,\r\n        timestamp,\r\n        active: false\r\n      }\r\n\r\n      this._chartController.alerts[market].push(alert)\r\n\r\n      let finalColor\r\n\r\n      // try subscribe to alert\r\n      await alertService\r\n        .subscribe(market, price)\r\n        .then(active => {\r\n          // make sure alert still exists before switching alpha / saving\r\n          if (this._chartController.alerts[market].indexOf(alert) !== -1) {\r\n            alert.active = active\r\n            const finalAlpha = active ? alpha : alpha * 0.75\r\n\r\n            // set line color to original alpha\r\n            color[3] = finalAlpha\r\n\r\n            finalColor = joinRgba(color)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.$store.dispatch('app/showNotice', {\r\n            id: 'alert-registration-failure',\r\n            title: `${err.message}\\nYou need to make sure your browser is set to allow push notifications.`,\r\n            type: 'error'\r\n          })\r\n\r\n          finalColor = this.$store.state.settings.alertsColor\r\n        })\r\n        .finally(() => {\r\n          workspacesService.saveAlerts({\r\n            market,\r\n            alerts: this._chartController.alerts[market]\r\n          })\r\n\r\n          priceline.applyOptions({\r\n            color: finalColor\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  getBarSpacing(visibleLogicalRange) {\r\n    if (!visibleLogicalRange) {\r\n      return defaultChartOptions.timeScale.barSpacing\r\n    }\r\n\r\n    const canvasWidth = this.$refs.chartContainer.querySelector('canvas').width\r\n    return (\r\n      canvasWidth /\r\n      (visibleLogicalRange.to - visibleLogicalRange.from) /\r\n      window.devicePixelRatio\r\n    )\r\n  }\r\n\r\n  savePosition(visibleLogicalRange) {\r\n    this.$store.commit(\r\n      this.paneId + '/SET_BAR_SPACING',\r\n      this.getBarSpacing(visibleLogicalRange)\r\n    )\r\n  }\r\n\r\n  setupRecycle() {\r\n    this._recycleTimeout = setTimeout(this.trimChart.bind(this), 1000 * 60 * 3)\r\n    this.setTimeToRecycle()\r\n  }\r\n\r\n  trimChart() {\r\n    if (Date.now() > this._timeToRecycle) {\r\n      const visibleRange = this._chartController.getVisibleRange() as TimeRange\r\n\r\n      let end\r\n\r\n      if (visibleRange) {\r\n        end = visibleRange.from - (visibleRange.to - visibleRange.from) * 2\r\n      }\r\n\r\n      if (this._chartController.chartCache.trim(end)) {\r\n        this.renderChart()\r\n      }\r\n\r\n      this.setTimeToRecycle()\r\n    }\r\n\r\n    const fastRefreshRate =\r\n      (this.$store.state[this.paneId] as ChartPaneState).refreshRate < 1000\r\n\r\n    if (fastRefreshRate) {\r\n      this.fixFastRefreshRate()\r\n    }\r\n\r\n    this._recycleTimeout = setTimeout(\r\n      this.trimChart,\r\n      1000 * 60 * (fastRefreshRate ? 3 : 15)\r\n    )\r\n  }\r\n\r\n  fixFastRefreshRate() {\r\n    const fontSize = this._chartController.chartInstance.options().layout\r\n      .fontSize\r\n\r\n    this._chartController.preventPan()\r\n    this._chartController.chartInstance.applyOptions({\r\n      layout: { fontSize: fontSize + 1 }\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this._chartController.chartInstance.applyOptions({\r\n        layout: { fontSize: fontSize }\r\n      })\r\n    }, 50)\r\n  }\r\n\r\n  renderChart() {\r\n    this._chartController.renderAll()\r\n  }\r\n\r\n  resetChart() {\r\n    this.destroyChart()\r\n    this.$nextTick(() => {\r\n      this.createChart()\r\n    })\r\n  }\r\n\r\n  async fetchMore(visibleLogicalRange) {\r\n    if (\r\n      this._loading ||\r\n      this._reachedEnd ||\r\n      !visibleLogicalRange ||\r\n      visibleLogicalRange.from > 0\r\n    ) {\r\n      return\r\n    }\r\n\r\n    let indicatorLength = 0\r\n\r\n    if (this._chartController.activeRenderer) {\r\n      for (const indicatorId in this._chartController.activeRenderer\r\n        .indicators) {\r\n        if (\r\n          !this._chartController.activeRenderer.indicators[indicatorId]\r\n            .minLength\r\n        ) {\r\n          continue\r\n        }\r\n        indicatorLength = Math.max(\r\n          indicatorLength,\r\n          this._chartController.activeRenderer.indicators[indicatorId].minLength\r\n        )\r\n      }\r\n    }\r\n\r\n    const barsToLoad = Math.round(\r\n      Math.min(Math.abs(visibleLogicalRange.from) + indicatorLength, 500)\r\n    )\r\n\r\n    if (!barsToLoad) {\r\n      return\r\n    }\r\n\r\n    const rangeToFetch = {\r\n      from:\r\n        this._chartController.chartCache.cacheRange.from -\r\n        barsToLoad * this.$store.state[this.paneId].timeframe,\r\n      to: this._chartController.chartCache.cacheRange.from - 1\r\n    }\r\n\r\n    await this.fetch(rangeToFetch)\r\n  }\r\n\r\n  onResize() {\r\n    this.refreshChartDimensions()\r\n  }\r\n\r\n  clear() {\r\n    this._chartController.clear()\r\n\r\n    this._reachedEnd = false\r\n  }\r\n\r\n  changeTimeframe(newTimeframe) {\r\n    if ((window.event as any).shiftKey) {\r\n      for (const id in this.$store.state.panes.panes) {\r\n        const type = this.$store.state.panes.panes[id].type\r\n        if (\r\n          type === 'chart' &&\r\n          this.$store.state[id].timeframe !== newTimeframe\r\n        ) {\r\n          this.$store.commit(id + '/SET_TIMEFRAME', newTimeframe)\r\n        }\r\n      }\r\n    } else {\r\n      this.$store.commit(this.paneId + '/SET_TIMEFRAME', newTimeframe)\r\n    }\r\n  }\r\n\r\n  setTimeframe(newTimeframe) {\r\n    const timeframe = parseInt(newTimeframe)\r\n    const type = newTimeframe[newTimeframe.length - 1] === 't' ? 'tick' : 'time'\r\n\r\n    if (\r\n      type === this._chartController.type &&\r\n      type === 'time' &&\r\n      this._chartController.timeframe < timeframe &&\r\n      this.$store.state.app.apiSupportedTimeframes.indexOf(newTimeframe) ===\r\n        -1 &&\r\n      Number.isInteger(timeframe / this._chartController.timeframe)\r\n    ) {\r\n      this._chartController.resample(newTimeframe)\r\n      this.fetchMore(\r\n        this._chartController.chartInstance.timeScale().getVisibleLogicalRange()\r\n      )\r\n    } else {\r\n      this._chartController.clear()\r\n      this.fetch()\r\n    }\r\n\r\n    this._reachedEnd = false\r\n  }\r\n\r\n  async bindLegend(indicatorId?: string) {\r\n    if (!this.showLegend) {\r\n      return\r\n    }\r\n\r\n    if (!indicatorId) {\r\n      for (const id in (this.$store.state[this.paneId] as ChartPaneState)\r\n        .indicators) {\r\n        this.bindLegend(id)\r\n      }\r\n\r\n      this._chartController.chartInstance.subscribeCrosshairMove(\r\n        this.onCrosshair\r\n      )\r\n      return\r\n    }\r\n\r\n    await this.$nextTick()\r\n\r\n    const legendId = this.paneId + indicatorId\r\n\r\n    if (this._legendElements[legendId]) {\r\n      return\r\n    }\r\n\r\n    const el = document.getElementById(legendId)\r\n\r\n    if (el) {\r\n      this._legendElements[legendId] = el\r\n    }\r\n  }\r\n\r\n  unbindLegend(indicatorId?: string) {\r\n    if (!indicatorId) {\r\n      for (const id in (this.$store.state[this.paneId] as ChartPaneState)\r\n        .indicators) {\r\n        this.unbindLegend(id)\r\n      }\r\n\r\n      this._chartController.chartInstance.unsubscribeCrosshairMove(\r\n        this.onCrosshair\r\n      )\r\n      return\r\n    }\r\n\r\n    const legendId = this.paneId + indicatorId\r\n\r\n    for (const bindedLegendId in this._legendElements) {\r\n      if (legendId === bindedLegendId) {\r\n        this._legendElements[bindedLegendId].innerText = ''\r\n        delete this._legendElements[bindedLegendId]\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  updateGridlines(type: 'vertical' | 'horizontal') {\r\n    const chartOptions = this.$store.state[this.paneId] as ChartPaneState\r\n    let show: boolean\r\n    let color: string\r\n\r\n    if (type === 'vertical') {\r\n      show = chartOptions.showVerticalGridlines\r\n      color = chartOptions.verticalGridlinesColor\r\n    } else {\r\n      show = chartOptions.showHorizontalGridlines\r\n      color = chartOptions.horizontalGridlinesColor\r\n    }\r\n\r\n    this._chartController.chartInstance.applyOptions({\r\n      grid: {\r\n        [type === 'vertical' ? 'vertLines' : 'horzLines']: {\r\n          color: color,\r\n          visible: show\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  updateWatermark() {\r\n    const chartOptions = this.$store.state[this.paneId] as ChartPaneState\r\n\r\n    this._chartController.chartInstance.applyOptions({\r\n      watermark: {\r\n        color: chartOptions.watermarkColor,\r\n        visible: chartOptions.showWatermark\r\n      }\r\n    })\r\n  }\r\n\r\n  updateChartAxis() {\r\n    if (!this.$refs.chartContainer) {\r\n      return\r\n    }\r\n\r\n    this.axis = [\r\n      this.$refs.chartContainer.querySelector(\r\n        'td:last-child canvas:nth-child(2)'\r\n      ).clientWidth,\r\n      this.$refs.chartContainer.querySelector('tr:last-child').clientHeight\r\n    ]\r\n  }\r\n\r\n  takeScreenshot() {\r\n    const chartCanvas = this._chartController.chartInstance.takeScreenshot()\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n\r\n    const zoom = this.$store.state.panes.panes[this.paneId].zoom || 1\r\n\r\n    const pxRatio = window.devicePixelRatio || 1\r\n    const textPadding = 16 * zoom * pxRatio\r\n    const textFontsize = 12 * zoom * pxRatio\r\n    canvas.width = chartCanvas.width\r\n    ctx.font = `${textFontsize}px Share Tech Mono`\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n\r\n    const lines = []\r\n    const dateString = new Date().toUTCString()\r\n\r\n    const visibleMarkets = this.$store.state.panes.panes[\r\n      this.paneId\r\n    ].markets.filter(a => !this.$store.state[this.paneId].hiddenMarkets[a])\r\n      .length\r\n\r\n    lines.push(dateString + ' | ' + this.timeframeForHuman)\r\n    lines.push(\r\n      this._chartController.watermark +\r\n        (visibleMarkets > 1 && this.$store.state.settings.normalizeWatermarks\r\n          ? ' (' + visibleMarkets + ' markets)'\r\n          : '')\r\n    )\r\n\r\n    const lineHeight = Math.round(textFontsize)\r\n    canvas.height = chartCanvas.height\r\n\r\n    const backgroundColor = this.$store.state.settings.backgroundColor\r\n    const color100 = getComputedStyle(\r\n      document.documentElement\r\n    ).getPropertyValue('--theme-color-100')\r\n\r\n    ctx.fillStyle = backgroundColor\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    ctx.fillStyle =\r\n      this.$store.state.settings.theme === 'light'\r\n        ? 'rgba(255,255,255,.2)'\r\n        : 'rgba(0,0,0,.2)'\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    ctx.drawImage(chartCanvas, 0, 0)\r\n\r\n    ctx.fillStyle = color100\r\n    ctx.font = `${textFontsize}px Share Tech Mono`\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n\r\n    let offsetY = 0\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      ctx.fillText(lines[i], textPadding, textPadding + offsetY)\r\n\r\n      offsetY += lineHeight * (i + 1)\r\n    }\r\n\r\n    const luminance = getColorLuminance(splitColorCode(backgroundColor))\r\n    const textColor = luminance < 0 ? '#ffffff' : '#000000'\r\n\r\n    if (this.showIndicatorsOverlay) {\r\n      offsetY += textPadding * 2\r\n\r\n      Object.values(\r\n        (this.$store.state[this.paneId] as ChartPaneState).indicators\r\n      ).forEach(indicator => {\r\n        const options = indicator.options as any\r\n\r\n        if (options.visible === false) {\r\n          return\r\n        }\r\n\r\n        let color = options.color || options.upColor || textColor\r\n\r\n        try {\r\n          color = splitColorCode(color)\r\n\r\n          if (typeof color[3] !== 'undefined') {\r\n            color[3] = 1\r\n          }\r\n\r\n          color = joinRgba(color)\r\n        } catch (error) {\r\n          // not rgb(a)\r\n        }\r\n\r\n        const text = indicator.displayName || indicator.name\r\n\r\n        ctx.fillStyle = backgroundColor\r\n        ctx.fillText(text, textPadding + 1, offsetY + 1)\r\n        ctx.fillText(text, textPadding - 1, offsetY - 1)\r\n        ctx.fillStyle = color\r\n        ctx.fillText(text, textPadding, offsetY)\r\n\r\n        offsetY += lineHeight * 1.2\r\n      })\r\n    }\r\n\r\n    const dataURL = canvas.toDataURL('image/png')\r\n    const startIndex = dataURL.indexOf('base64,') + 7\r\n    const b64 = dataURL.substr(startIndex)\r\n\r\n    openBase64InNewTab(b64, 'image/png')\r\n  }\r\n\r\n  toggleIndicatorOverlay() {\r\n    if (this.showIndicatorsOverlay) {\r\n      this.unbindLegend()\r\n    }\r\n\r\n    this.showIndicatorsOverlay = !this.showIndicatorsOverlay\r\n\r\n    if (this.showIndicatorsOverlay) {\r\n      this.$nextTick(() => {\r\n        this.bindLegend()\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleLayout() {\r\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING')\r\n  }\r\n\r\n  setTimeToRecycle() {\r\n    const now = Date.now()\r\n\r\n    if (this._chartController.type === 'time') {\r\n      const chartWidth = this.$refs.chartContainer.querySelector('canvas').width\r\n      const barSpacing = this.getBarSpacing(\r\n        this._chartController.chartInstance.timeScale().getVisibleLogicalRange()\r\n      )\r\n      this._timeToRecycle =\r\n        now +\r\n        Math.min(\r\n          1000 * 60 * 60 * 24,\r\n          (parseInt(this.timeframe) * 1000 * (chartWidth / barSpacing)) / 2\r\n        )\r\n    }\r\n\r\n    this._timeToRecycle = now + 900000\r\n  }\r\n\r\n  toggleTimeframeDropdown(event) {\r\n    if (this.timeframeDropdownTrigger) {\r\n      this.timeframeDropdownTrigger = null\r\n    } else {\r\n      this.timeframeDropdownTrigger = event.currentTarget\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Chart.vue?vue&type=template&id=4747b63b&scoped=true&\"\nimport script from \"./Chart.vue?vue&type=script&lang=ts&\"\nexport * from \"./Chart.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Chart.vue?vue&type=style&index=0&id=4747b63b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4747b63b\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=style&index=0&id=0d62332e&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=style&index=0&id=1bc47e00&lang=scss&scoped=true&\""],"sourceRoot":""}