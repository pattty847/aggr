{"version":3,"sources":["webpack:///./src/mixins/paneMixin.ts","webpack:///./src/components/chart/IndicatorsOverlay.vue?3b7d","webpack:///./src/components/chart/Chart.vue?bc49","webpack:///./src/components/chart/TimeframeDropdown.vue?a0b9","webpack:///./src/components/panes/PaneHeader.vue","webpack:///./src/components/panes/PaneHeader.vue?4649","webpack:///./src/components/panes/PaneHeader.vue?fd01","webpack:///./src/components/panes/PaneHeader.vue?c599","webpack:///./src/components/chart/Layout.vue?1d4b","webpack:///./src/components/chart/IndicatorControl.vue?b41e","webpack:///./src/components/chart/MarketsOverlay.vue?60d8","webpack:///./src/components/chart/Chart.vue","webpack:///./src/components/chart/serieUtils.ts","webpack:///./src/components/chart/cache.ts","webpack:///./src/components/chart/serieBuilder.ts","webpack:///./src/components/chart/chart.ts","webpack:///./src/services/historicalService.ts","webpack:///./src/components/chart/Layout.vue","webpack:///./src/components/chart/PriceScale.vue","webpack:///./src/components/chart/PriceScale.vue?43dc","webpack:///./src/components/chart/PriceScale.vue?2df9","webpack:///./src/components/chart/PriceScale.vue?2c42","webpack:///./src/components/chart/Layout.vue?d3b6","webpack:///./src/components/chart/Layout.vue?bf72","webpack:///./src/components/chart/Layout.vue?7b91","webpack:///./src/components/chart/TimeframeDropdown.vue","webpack:///./src/components/chart/TimeframeDropdown.vue?8d7a","webpack:///./src/components/chart/TimeframeDropdown.vue?25f6","webpack:///./src/components/chart/TimeframeDropdown.vue?0b95","webpack:///./src/components/chart/IndicatorsOverlay.vue","webpack:///./src/components/chart/IndicatorControl.vue","webpack:///./src/components/chart/IndicatorControl.vue?d5bf","webpack:///./src/components/chart/IndicatorControl.vue?c72f","webpack:///./src/components/chart/IndicatorControl.vue?c719","webpack:///./src/components/chart/CreateIndicatorDialog.vue","webpack:///src/components/chart/CreateIndicatorDialog.vue","webpack:///./src/components/chart/CreateIndicatorDialog.vue?00c2","webpack:///./src/components/chart/CreateIndicatorDialog.vue?ba9e","webpack:///./src/components/chart/IndicatorsOverlay.vue?ee51","webpack:///./src/components/chart/IndicatorsOverlay.vue?d414","webpack:///./src/components/chart/IndicatorsOverlay.vue?1654","webpack:///./src/components/chart/MarketsOverlay.vue","webpack:///./src/components/chart/MarketsOverlay.vue?0066","webpack:///./src/components/chart/MarketsOverlay.vue?4245","webpack:///./src/components/chart/MarketsOverlay.vue?9701","webpack:///./src/components/chart/Chart.vue?f677","webpack:///./src/components/chart/Chart.vue?2c12","webpack:///./src/components/chart/Chart.vue?7270","webpack:///./src/components/chart/PriceScale.vue?098e"],"names":["PaneMixin","Vue","this","$store","state","panes","paneId","mounted","$el","id","refreshZoom","$nextTick","width","clientWidth","onResize","clientHeight","addEventListener","focusPane","beforeDestroy","removeEventListener","_onStoreMutation","dispatch","commit","Component","props","required","type","String","render","_vm","_c","_self","_setupProxy","staticClass","class","loading","attrs","on","renamePane","_v","_s","name","maximizePane","_t","openSearch","settings","openSettings","_e","toggleDropdown","model","value","paneDropdownTrigger","callback","$$v","expression","$event","stopPropagation","changeZoom","resetZoom","apply","arguments","zoom","toFixed","duplicatePane","removePane","staticRenderFns","constructor","market","marketsListeners","markets","local","event","direction","shiftKey","$emit","dialogService","confirm","highlightPane","parentElement","classList","currentTarget","target","className","el","isMaximized","toggle","siblings","getSiblings","sibling","getAttribute","remove","style","display","cls","Event","window","dispatchEvent","prompt","action","input","open","default","default_1","Function","Boolean","component","scopedSlots","_u","key","fn","toggleLayout","resetChart","takeScreenshot","proxy","_l","favoriteTimeframes","timeframeLabel","timeframe","changeTimeframe","toggleTimeframeDropdown","timeframeForHuman","timeframeDropdownTrigger","bindLegend","unbindLegend","showIndicatorsOverlay","ref","layouting","axis","closeOHLC","close","high","low","copyOHLC","point","closeOHLCWithGaps","accumulatePoints","points","push","output","count","length","shift","accumulatePointsAverage","sum","accumulateStoch","lows","highs","avg_ohlc","next","update","renderer","nbSources","setOpen","identifier","sources","active","Math","max","min","time","localTimestamp","avg_heikinashi","avg_ohlc_with_gaps","Infinity","avg_close","ohlc","args","instruction","injected","cum_ohlc","cum","pivot_high","lengthBefore","lengthAfter","middle","i","current","pivot_low","highest","lowest","linreg","per","sumX","sumY","sumXSqr","sumXY","val","slope","average","intercept","avg","values","sma","cma","ema","k","last","rma","merge_overlapping_intervals","intervals","sort","a","b","reduce","acc","range","indexOfLast","prevRange","end","start","reverse_intervals","arr","stoch","ChartCache","chunks","cacheRange","from","to","initialPrices","saveChunk","chunk","index","unshift","clear","splice","trim","reduced","SERIE_UPDATE_REGEX","VARIABLES_VAR_NAME","FUNCTIONS_VAR_NAME","SERIE_TYPES","candlestick","bar","line","histogram","area","cloudarea","brokenarea","baseline","SerieBuilder","build","indicator","serieIndicatorsMap","indicatorId","store","indexOf","result","parse","script","functions","determineFunctionState","variables","determineVariableState","silentOutput","references","plots","normalizeInput","strings","replace","STRING_REGEX","stringMatch","iterations","exec","refIndex","slice","PARANTHESIS_REGEX","paranthesisMatch","closingParenthesisIndex","findClosingBracketMatchIndex","contentWithinParenthesis","lastIndex","seriesUtils","prop","JSON","stringify","error","getSilentOutput","originalOutput","instructionMatch","openingParenthesisIndex","parseVariables","parseMarkets","RegExp","parseFunctions","parseReferences","formatOutput","lineBreakIt","test","lines","split","sourcesMatches","match","join","VARIABLE_REGEX","variableMatch","nonPersistentVariables","variableName","isNonPersistent","variableLength","variable","determineVariablesType","parseSerie","serieType","closingBracketIndex","rawFunctionArguments","rawFunctionInstruction","parseFunctionArguments","serieOptions","parsedValue","pointVariable","seriePoint","expectedInput","timeProperty","offset","argIsObject","argContainSpecialChars","Error","serieUpdate","finalInstruction","randomString","names","Object","keys","concat","map","plot","uniqueName","plotTypesMap","options","instructions","FUNCTION_LOOKUP_REGEX","functionMatch","functionName","isMathFunction","prototype","hasOwnProperty","call","isSerieFunction","isMethod","targetFunction","injectedArgCount","customArgsStartIndex","customArgsEndIndex","customArgs","totalArgsCount","argDefinition","arg","customArg","EXCHANGE_REGEX","marketMatch","marketName","marketDataKey","replacement","REFERENCE_REGEX","referenceMatch","serieId","plotIndex","getSeriePath","find","reference","message","status","VARIABLE_LENGTH_REGEX","lengthMatch","position","hasSpecifiedIndex","substring","beforeVariable","variableReplacement","afterVariable","getAdapter","getRendererIndicatorData","minLength","isNaN","plotsOptions","getCustomPlotOptions","canRender","series","ChartController","loadedIndicators","renderedRange","alerts","timezoneOffset","fillGapsWithEmpty","propagateInitialPrices","priceScales","queuedTrades","seriesIndicatorsMap","_queueHandler","releaseQueue","bind","_refreshDecimalsHandler","refreshAutoDecimals","chartCache","serieBuilder","setTimeframe","setTimezoneOffset","refreshMarkets","aggregatorService","app","isExchangesReady","_promiseOfMarkets","waitForStateMutation","then","historicalMarkets","normalizeWatermarks","marketsForWatermark","cachedMarkets","marketKey","exchange","localPair","stripStable","exchanges","disabled","hiddenMarkets","historical","retrieveAlerts","updateWatermark","resetPriceScales","parseFloat","isOddTimeframe","originalTimezoneOffset","change","activeRenderer","createChart","containerElement","chartOptions","getChartOptions","defaultChartOptions","showVerticalGridlines","grid","vertLines","visible","color","verticalGridlinesColor","showHorizontalGridlines","horzLines","horizontalGridlinesColor","showWatermark","watermark","watermarkColor","preferedBarSpacing","barSpacing","timeScale","rightOffset","ceil","chartInstance","TV","chartElement","addEnabledSeries","updateFontSize","removeChart","removeIndicator","getLoadedIndicator","setIndicatorOption","silent","auto","apis","precision","applyOptions","optionRequiresRedraw","redrawIndicator","toggleIndicatorVisibility","createIndicatorSeries","prepareIndicator","removeIndicatorSeries","redrawOptions","noRedrawOptions","rebuildIndicator","addIndicator","getReferencedIndicators","filter","t","self","clearIndicatorSeries","bars","requiredIndicatorsIds","ensureIndicatorVisible","renderBars","indicatorIds","getVisibleRange","visibleRange","indicators","othersCount","text","getTimeframeForHuman","multiplier","watermarkBaseFontSize","layout","fontSize","dependencyDepth","indicatorSettings","indicatorOptions","adapter","silentAdapter","resolveDependency","ok","cancel","isDialogOpened","openIndicator","originalIndicatorId","missingSerieId","otherIndicatorId","indicatorsErrors","bindIndicator","prepareRendererForIndicators","unbindIndicator","ensurePriceScale","priceScaleId","priceScale","scaleMargins","top","bottom","refreshPriceScale","autoScale","clearChart","triggerPan","preventPan","clearData","activeChunk","clearPriceLines","indicatorsIds","_priceIndicatorId","_alertsRendered","j","removeAllPriceLines","resample","activeRendererTimestamp","floorTimestampToTimeframe","timestamp","getActiveChunk","source","empty","cloneSourceBar","newBar","destination","vbuy","vsell","cbuy","csell","lbuy","lsell","pair","barTimestamp","MAX_BARS_PER_CHUNKS","available","renderAll","rendered","destroy","clearQueue","off","setData","setupQueue","_releaseQueueInterval","refreshRate","setInterval","requestAnimationFrame","clearInterval","cancelAnimationFrame","renderRealtimeTrades","queueTrades","trades","Array","redrawRequired","trade","round","updateBar","nextBar","createRenderer","amount","price","size","resetBar","isActive","liquidation","side","sourceBar","refreshInitialPrices","prependInitialPrices","computedSeries","temporaryRenderer","computedBar","activeBars","activeBar","cachedBar","scrollPosition","barCount","computeBar","missingBars","incrementRendererBar","replaceData","scrollToPosition","renderAlerts","remainingInitialMarkets","maxLookback","initialTimestamp","removeSeries","isPriceScaleDead","apiMethodName","camelize","customPlotOptions","defaultSerieOptions","defaultPlotsOptions","api","priceFormat","panPrevented","delay","_releasePanTimeout","clearTimeout","setTimeout","_promiseOfMarketsRender","indexes","workspacesService","getAlerts","getPriceApi","renderAlert","triggerAlert","alert","alertSound","audioService","playOnce","triggered","priceline","getPriceLine","removePriceLine","title","coordinateToLogical","timeToCoordinate","createPriceLine","alertsColor","lineWidth","alertsLineWidth","lineStyle","alertsLineStyle","seriesData","serieData","lowerValue","firstBarTimestamp","referencesA","referencesB","resetRendererBar","rendererSerieData","f","v","pop","toggleFillGapsWithEmpty","chartMarkets","pricedMarket","marketDecimals","minMove","pow","getPricelineAtPoint","originalOffset","getEventOffset","x","y","coordinateToPrice","priceLineOptions","formatPrice","canCreate","alertsClick","disableCrosshair","crosshair","vertLine","labelVisible","horzLine","enableCrosshair","chartColorOptions","getChartCustomColorsOptions","HistoricalService","EventEmitter","super","promisesOfData","url","getApiUrl","filterOutUnavailableMarkets","params","toString","encodeURIComponent","fetch","response","json","results","format","normalizePoints","columns","catch","err","handleFetchError","data","lastClosedBars","isArray","Date","refs","isOdd","marketIndex","parseMarket","right","activePriceScales","updatePriceScaleScaleMargins","currentSide","roundedTop","roundedBottom","handleMove","directives","rawName","modes","updateMode","mode","$set","domProps","handleResize","currentMoveId","currentOrigin","currentContainerHeight","0","1","2","3","created","getSize","release","getEventCords","document","resize","percentMove","getPercentMove","updateScaleMargins","move","syncable","getContainerHeight","height","currentPosition","percent","origin","components","DropdownButton","watch","getActivePriceScales","body","add","_originalActivePriceScales","unsyncableMoveId","syncMoveWithOthers","originalScaleMargins","hasSynced","otherId","otherScaleMargins","set","ChartPriceScale","onInput","addTimeframe","typeaheadTimeframe","label","toggleEdit","editing","groups","group","timeframeGroups","timeframes","removeTimeframe","toggleFavoriteTimeframe","toggleGroup","units","unit","minute","hour","day","typeahead","order","currentUnit","groupsIds","TimeframeInput","dropdownTrigger","editIndicator","selectedIndicator","resizeIndicator","duplicateIndicator","downloadIndicator","onClickIndicator","toggleOverlay","onClick","toggleVisibility","actionName","showLegend","displayName","query","composing","filteredIndicators","selectIndicator","description","handleFile","staticStyle","availableScales","setPriceScaleId","createIndicator","mixins","Dialog","computed","slugify","queryFilter","s","scales","methods","CreateIndicatorDialog","IndicatorControl","showOverlay","toggleMarkets","toggleMarket","preventDefault","searchMarkets","visibleMarkets","inverse","Mixins","updateChartAxis","_chartController","_legendElements","subscribe","mutation","payload","updateGridlines","forceNormalizePrice","refreshChartDimensions","$parent","$refs","chartContainer","bindChartEvents","setupRecycle","destroyChart","unbindChartEvents","_recycleTimeout","_reachedEnd","alreadyHasData","historicalService","apiSupportedTimeframes","rangeToFetch","rightTime","now","barsCount","floor","bytesPerBar","estimatedSize","formatBytes","timeout","_loading","onHistorical","fetchMore","getVisibleLogicalRange","onCrosshair","param","_lastCrosshairCoordinates","seriesPrices","get","formatFunction","formatAmount","textContent","onTrades","onAlert","headerHeight","autoHideHeaders","onPan","visibleLogicalRange","_onPanTimeout","savePosition","subscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","onLevelDragStart","_levelDragEndHandler","button","hasDialogOpened","dataAtPoint","canvas","querySelector","_levelDragMoveHandler","onLevelDragMove","onLevelDragEnd","startedAt","canMove","abs","clearCrosshairPosition","newPrice","alertService","moveAlert","saveAlerts","unsubscribe","splitColorCode","alpha","ctrlKey","metaKey","coordinateToTime","joinRgba","finalColor","finalAlpha","finally","getBarSpacing","canvasWidth","devicePixelRatio","trimChart","setTimeToRecycle","_timeToRecycle","renderChart","fastRefreshRate","fixFastRefreshRate","indicatorLength","barsToLoad","newTimeframe","parseInt","Number","isInteger","subscribeCrosshairMove","legendId","getElementById","unsubscribeCrosshairMove","bindedLegendId","innerText","show","chartCanvas","createElement","ctx","getContext","pxRatio","textPadding","textFontsize","font","textAlign","textBaseline","dateString","toUTCString","lineHeight","backgroundColor","color100","getComputedStyle","documentElement","getPropertyValue","fillStyle","fillRect","theme","drawImage","offsetY","fillText","luminance","getColorLuminance","textColor","forEach","upColor","dataURL","toDataURL","startIndex","b64","substr","openBase64InNewTab","toggleIndicatorOverlay","chartWidth","ChartLayout","PaneHeader","TimeframeDropdown","IndicatorsOverlay","MarketsOverlay"],"mappings":"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","file":"js/chunk-662f5aef.c34ac558.js","sourcesContent":["import { Pane } from '@/store/panes'\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  props: {\n    paneId: {\n      required: true,\n      type: String\n    }\n  }\n})\nexport default class PaneMixin extends Vue {\n  paneId: string\n  protected _onStoreMutation: () => void\n\n  get pane(): Pane {\n    return this.$store.state.panes.panes[this.paneId]\n  }\n\n  mounted() {\n    this.$el.id = this.paneId\n\n    this.refreshZoom()\n\n    this.$nextTick(() => {\n      const width = this.$el.clientWidth\n\n      if (typeof this.onResize === 'function') {\n        this.onResize(width, this.$el.clientHeight, true)\n      }\n    })\n\n    this.$el.addEventListener('mousedown', this.focusPane)\n  }\n\n  beforeDestroy() {\n    this.$el.removeEventListener('mousedown', this.focusPane)\n\n    if (this._onStoreMutation) {\n      this._onStoreMutation()\n    }\n  }\n\n  refreshZoom() {\n    this.$store.dispatch('panes/refreshZoom', this.paneId)\n  }\n\n  focusPane() {\n    this.$store.commit('app/SET_FOCUSED_PANE', this.paneId)\n  }\n\n  onResize?(newWidth: number, newHeight: number, isMounting?: boolean)\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=style&index=0&id=4463ad8b&prod&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=style&index=0&id=4747b63b&prod&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=style&index=0&id=0d62332e&prod&lang=scss&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"pane-header hide-scrollbar pane-overlay d-flex\",class:{ '-loading': _vm.loading }},[_c('div',{staticClass:\"pane-header__loader\"}),_c('span',{staticClass:\"pane-header__name ml4 mrauto\",attrs:{\"data-hide-header\":\"\"},on:{\"dblclick\":_vm.renamePane}},[_vm._v(_vm._s(_vm.name))]),_c('div',{staticClass:\"toolbar flex-grow-1\",on:{\"dblclick\":_vm.maximizePane}},[_vm._t(\"default\"),_c('button',{staticClass:\"toolbar__label min-768\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSearch}},[_c('i',{staticClass:\"icon-search\"})]),(_vm.settings)?_c('button',{staticClass:\"toolbar__label min-768\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSettings}},[_c('i',{staticClass:\"icon-cog\"})]):_vm._e(),_c('button',{staticClass:\"toolbar__label\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleDropdown}},[_c('i',{staticClass:\"icon-more\"})]),_c('dropdown',{model:{value:(_vm.paneDropdownTrigger),callback:function ($$v) {_vm.paneDropdownTrigger=$$v},expression:\"paneDropdownTrigger\"}},[_c('div',{staticClass:\"d-flex btn-group\"},[_c('button',{staticClass:\"btn -green\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.changeZoom($event, -1)}}},[_c('i',{staticClass:\"icon-minus\"})]),_c('button',{staticClass:\"btn -green text-monospace flex-grow-1 text-center\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.resetZoom.apply(null, arguments)}}},[_vm._v(\" × \"+_vm._s(_vm.zoom.toFixed(2))+\" \")]),_c('button',{staticClass:\"btn -green\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.changeZoom($event, 1)}}},[_c('i',{staticClass:\"icon-plus\"})])]),_vm._t(\"menu\"),(_vm.settings !== null)?_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.openSettings}},[_c('i',{staticClass:\"icon-cog\"}),_c('span',[_vm._v(\"Settings\")])]):_vm._e(),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$store.dispatch('app/showSearch', _vm.paneId)}}},[_c('i',{staticClass:\"icon-search\"}),_c('span',[_vm._v(\"Sources\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.maximizePane}},[_c('i',{staticClass:\"icon-enlarge\"}),_c('span',[_vm._v(\"Maximize\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.duplicatePane}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('div',{staticClass:\"dropdown--divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.removePane}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])],2)],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\nimport { getSiblings } from '@/utils/helpers'\nimport dialogService from '@/services/dialogService'\n\n@Component({\n  name: 'PaneHeader',\n  props: {\n    paneId: {\n      type: String\n    },\n    settings: {\n      type: Function,\n      default: null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\nexport default class extends Vue {\n  private settings?: () => Promise<any>\n  paneId: string\n  paneDropdownTrigger = null\n\n  get zoom() {\n    return this.$store.state.panes.panes[this.paneId].zoom || 1\n  }\n\n  get type() {\n    return this.$store.state.panes.panes[this.paneId].type\n  }\n\n  get name() {\n    const name = this.$store.state.panes.panes[this.paneId].name\n    const market = this.$store.state.panes.marketsListeners[\n      this.$store.state.panes.panes[this.paneId].markets[0]\n    ]\n\n    if (name) {\n      return name\n    } else if (market) {\n      return market.local\n    } else {\n      return this.type\n    }\n  }\n\n  openSearch() {\n    this.$store.dispatch('app/showSearch', this.paneId)\n  }\n\n  changeZoom(event, direction) {\n    const zoom = this.zoom + (event.shiftKey ? 0.0625 : 0.125) * direction\n    this.$store.dispatch('panes/setZoom', { id: this.paneId, zoom: zoom })\n\n    this.$emit('zoom', zoom)\n  }\n\n  resetZoom() {\n    this.$store.dispatch('panes/setZoom', { id: this.paneId, zoom: 1 })\n\n    this.$emit('zoom', 1)\n  }\n\n  async removePane() {\n    if (await dialogService.confirm(`Delete pane \"${this.paneId}\" ?`)) {\n      this.$store.dispatch('panes/removePane', this.paneId)\n    }\n  }\n\n  duplicatePane() {\n    this.$store.dispatch('panes/duplicatePane', this.paneId)\n  }\n\n  highlightPane(value: boolean) {\n    this.$el.parentElement.parentElement.classList[value ? 'add' : 'remove'](\n      '-highlight'\n    )\n  }\n\n  maximizePane(event) {\n    if (\n      event.type === 'dblclick' &&\n      event.currentTarget !== event.target &&\n      event.target.className !== 'toolbar__spacer'\n    ) {\n      return\n    }\n\n    const el = this.$el.parentElement.parentElement\n    const isMaximized = el.classList.toggle('-maximized')\n\n    const siblings = getSiblings(el)\n\n    for (const sibling of siblings) {\n      if (!sibling.getAttribute('type')) {\n        continue\n      }\n      sibling.classList.remove('-maximized')\n      sibling.style.display = isMaximized ? 'none' : 'block'\n    }\n\n    const cls = Event as any\n\n    window.dispatchEvent(new cls('resize'))\n  }\n\n  async renamePane() {\n    const name = await dialogService.prompt({\n      action: 'Rename',\n      input: this.name\n    })\n\n    if (name !== this.name) {\n      this.$store.commit('panes/SET_PANE_NAME', { id: this.paneId, name: name })\n    }\n  }\n\n  toggleDropdown(event) {\n    if (this.paneDropdownTrigger) {\n      this.paneDropdownTrigger = null\n    } else {\n      this.paneDropdownTrigger = event.currentTarget\n    }\n  }\n\n  async openSettings() {\n    if (!this.settings) {\n      return\n    }\n\n    dialogService.open((await this.settings()).default, {\n      paneId: this.paneId\n    })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaneHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaneHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PaneHeader.vue?vue&type=template&id=219eac84&\"\nimport script from \"./PaneHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./PaneHeader.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=style&index=0&id=4a1ffafc&prod&lang=scss&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=style&index=0&id=1bc47e00&prod&lang=scss&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=style&index=0&id=fd44c7e2&prod&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"pane-chart\"},[_c('pane-header',{attrs:{\"paneId\":_vm.paneId,\"settings\":() => import('@/components/chart/ChartDialog.vue')},scopedSlots:_vm._u([{key:\"menu\",fn:function(){return [_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleLayout}},[_c('i',{staticClass:\"icon-resize-height\"}),_c('span',[_vm._v(\"Arrange\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.resetChart}},[_c('i',{staticClass:\"icon-refresh\"}),_c('span',[_vm._v(\"Restart\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.takeScreenshot}},[_c('i',{staticClass:\"icon-add-photo\"}),_c('span',[_vm._v(\"Snapshot\")])]),_c('div',{staticClass:\"dropdown-divider\"})]},proxy:true}])},[_vm._l((_vm.favoriteTimeframes),function(timeframeLabel,timeframe){return _c('button',{key:timeframe,staticClass:\"toolbar__label timeframe\",attrs:{\"title\":\"Maintain shift key to change timeframe on all panes\"},on:{\"click\":function($event){return _vm.changeTimeframe(timeframe)}}},[_c('span',[_vm._v(_vm._s(timeframeLabel))])])}),_c('button',{staticClass:\"-arrow toolbar__label\",on:{\"click\":_vm.toggleTimeframeDropdown}},[_vm._v(\" \"+_vm._s(_vm.timeframeForHuman)+\" \")]),_c('dropdown',{model:{value:(_vm.timeframeDropdownTrigger),callback:function ($$v) {_vm.timeframeDropdownTrigger=$$v},expression:\"timeframeDropdownTrigger\"}},[_c('timeframe-dropdown',{staticClass:\"timeframe-dropdown\",attrs:{\"pane-id\":_vm.paneId},on:{\"timeframe\":function($event){return _vm.changeTimeframe($event)}}})],1)],2),_c('div',{staticClass:\"chart-overlay hide-scrollbar\"},[_c('indicators-overlay',{attrs:{\"pane-id\":_vm.paneId},on:{\"input\":function($event){$event ? _vm.bindLegend() : _vm.unbindLegend()}},model:{value:(_vm.showIndicatorsOverlay),callback:function ($$v) {_vm.showIndicatorsOverlay=$$v},expression:\"showIndicatorsOverlay\"}}),_c('markets-overlay',{attrs:{\"pane-id\":_vm.paneId}})],1),_c('div',{ref:\"chartContainer\",staticClass:\"chart__container\"},[(_vm.layouting)?_c('chart-layout',{attrs:{\"pane-id\":_vm.paneId,\"layouting\":_vm.layouting,\"axis\":_vm.axis}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { IndicatorFunction } from './chart'\r\n\r\n/**\r\n * Close ohlc bar (all props to close value for smooth transition, but also fake opens)\r\n * @param fn\r\n */\r\nfunction closeOHLC(fn: IndicatorFunction) {\r\n  fn.state.open = fn.state.close\r\n  fn.state.high = fn.state.close\r\n  fn.state.low = fn.state.close\r\n}\r\n\r\n/**\r\n * Save (unaltered) copy of ohlc in state.point\r\n * @param fn\r\n */\r\nfunction copyOHLC(fn: IndicatorFunction) {\r\n  fn.state.point = {\r\n    open: fn.state.open,\r\n    high: fn.state.high,\r\n    low: fn.state.low,\r\n    close: fn.state.close\r\n  }\r\n}\r\n\r\n/**\r\n * Close ohlc (without keeping memory of previous close, making for real ohlc bars)\r\n * @param fn\r\n */\r\nfunction closeOHLCWithGaps(fn: IndicatorFunction) {\r\n  fn.state.open = null\r\n  fn.state.high = null\r\n  fn.state.low = null\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * @param fn\r\n */\r\nfunction accumulatePoints(fn: IndicatorFunction) {\r\n  fn.state.points.push(fn.state.output)\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.points.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * + store sum & count for easy access (& not having to loop through)\r\n * @param fn\r\n */\r\nfunction accumulatePointsAverage(fn: IndicatorFunction) {\r\n  fn.state.points.push(fn.state.output)\r\n\r\n  fn.state.sum += fn.state.output\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.sum -= fn.state.points.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n/**\r\n * Adds current fn value to point array when candle close\r\n * + store sum & count for easy access (& not having to loop through)\r\n * @param fn\r\n */\r\nfunction accumulateStoch(fn: IndicatorFunction) {\r\n  fn.state.lows.push(fn.state.low)\r\n  fn.state.highs.push(fn.state.high)\r\n  fn.state.count++\r\n\r\n  if (fn.state.count > fn.length - 1) {\r\n    fn.state.lows.shift()\r\n    fn.state.highs.shift()\r\n    fn.state.count--\r\n  }\r\n}\r\n\r\n// built-int functions are composed of the following\r\n// - a name (the keys)\r\n// - a update function (is called every time the chart is getting new data)\r\n// - a state object (the memory of the function, it's optional but most have one)\r\n// - a next function (called when on new bar - usualy to mutate the state and store current value somewhere safe)\r\nexport default {\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * use classic aggr printing (last close = next open)\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_ohlc: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: closeOHLC,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n      let setOpen = false\r\n\r\n      let open\r\n      let high = 0\r\n      let low = 0\r\n      let close = 0\r\n\r\n      if (state.open === null) {\r\n        setOpen = true\r\n        open = 0\r\n      }\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        if (setOpen) {\r\n          open += renderer.sources[identifier].open\r\n        }\r\n\r\n        high += renderer.sources[identifier].high\r\n        low += renderer.sources[identifier].low\r\n        close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        return { time: renderer.localTimestamp }\r\n      }\r\n\r\n      if (setOpen) {\r\n        state.open = open / nbSources\r\n      }\r\n\r\n      state.high = Math.max(state.open, high / nbSources)\r\n      state.low = Math.min(state.open, low / nbSources)\r\n      state.close = close / nbSources\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * use Heikin-Ashi technique (means \"average bar\" in Japanese)\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_heikinashi: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: copyOHLC,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      state.open = 0\r\n      state.high = 0\r\n      state.low = 0\r\n      state.close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        state.open += renderer.sources[identifier].open\r\n        state.high += renderer.sources[identifier].high\r\n        state.low += renderer.sources[identifier].low\r\n        state.close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        nbSources = 1\r\n      }\r\n\r\n      state.high /= nbSources\r\n      state.low /= nbSources\r\n      state.open /= nbSources\r\n      state.close =\r\n        (state.open + state.high + state.low + state.close / nbSources) / 4\r\n\r\n      if (typeof state.point !== 'undefined') {\r\n        state.open = (state.point.open + state.point.close) / 2\r\n      } else {\r\n        state.open = (state.open + state.close) / 2\r\n      }\r\n\r\n      state.low = Math.min(state.open, state.low, state.close)\r\n      state.high = Math.max(state.open, state.high, state.close)\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged ohlc of active sources bars contained in the renderer bar\r\n   * calculate average open on every candle\r\n   * @param renderer the full bar object\r\n   * @returns {object} close\r\n   */\r\n  avg_ohlc_with_gaps: {\r\n    state: {\r\n      open: null,\r\n      high: null,\r\n      low: null,\r\n      close: null\r\n    },\r\n    next: closeOHLCWithGaps,\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      let open = 0\r\n      let high = 0\r\n      let low = 0\r\n      let close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (\r\n          !renderer.sources[identifier].active ||\r\n          renderer.sources[identifier].open === null\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        open += renderer.sources[identifier].open\r\n        high += renderer.sources[identifier].high\r\n        low += renderer.sources[identifier].low\r\n        close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        return { time: renderer.localTimestamp }\r\n      }\r\n\r\n      state.open = open / nbSources\r\n      state.high = Math.max(\r\n        state.high === null ? -Infinity : state.high,\r\n        high / nbSources\r\n      )\r\n      state.low = Math.min(\r\n        state.low === null ? Infinity : state.low,\r\n        low / nbSources\r\n      )\r\n      state.close = close / nbSources\r\n\r\n      return {\r\n        time: renderer.localTimestamp,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * produce averaged close of active sources bars contained in the renderer bar\r\n   * simple average (sum / count)\r\n   * @param renderer the full bar object\r\n   * @returns {Number} close\r\n   */\r\n  avg_close: {\r\n    update(state, renderer) {\r\n      let nbSources = 0\r\n\r\n      state.close = 0\r\n\r\n      for (const identifier in renderer.sources) {\r\n        if (renderer.sources[identifier].open === null) {\r\n          continue\r\n        }\r\n\r\n        state.close += renderer.sources[identifier].close\r\n\r\n        nbSources++\r\n      }\r\n\r\n      if (!nbSources) {\r\n        nbSources = 1\r\n      }\r\n\r\n      state.close /= nbSources\r\n\r\n      return state.close\r\n    }\r\n  },\r\n  ohlc: {\r\n    args: [\r\n      {\r\n        instruction: 'renderer.localTimestamp',\r\n        injected: true\r\n      }\r\n    ],\r\n    next: closeOHLC,\r\n    update(state, time, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n        state.high = value\r\n        state.low = value\r\n      }\r\n\r\n      state.high = Math.max(state.high, value)\r\n      state.low = Math.min(state.low, value)\r\n      state.close = value\r\n\r\n      return {\r\n        time: time,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * output cumulative of a value as ohlc\r\n   * previous bar value + current value\r\n   * high & low are produced from the fluctuations within the bar (100% client side and so depends on chart refresh rate)\r\n   * @param {Number} value value to cumulate\r\n   * @param {Number} time time is required for ohlc (just use bar.localTimestamp)\r\n   * @returns {Object} ohlc\r\n   */\r\n  cum_ohlc: {\r\n    args: [\r\n      {\r\n        instruction: 'renderer.localTimestamp',\r\n        injected: true\r\n      }\r\n    ],\r\n    next: closeOHLC,\r\n    update(state, time, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n        state.high = value\r\n        state.low = value\r\n      } else {\r\n        value = state.open + value\r\n      }\r\n\r\n      state.high = Math.max(state.high, value)\r\n      state.low = Math.min(state.low, value)\r\n      state.close = value\r\n\r\n      return {\r\n        time: time,\r\n        open: state.open,\r\n        high: state.high,\r\n        low: state.low,\r\n        close: state.close\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * output cumulative of a value\r\n   * @param {Number} value value to cumulate\r\n   * @returns {Number} previous bar value + current value\r\n   */\r\n  cum: {\r\n    next: closeOHLC,\r\n    update(state, value) {\r\n      if (typeof state.open === 'undefined') {\r\n        state.open = value\r\n      }\r\n\r\n      state.close = state.open + value\r\n\r\n      return state.close\r\n    }\r\n  },\r\n  /**\r\n   * returns price of the pivot high point\r\n   * the highest value of all the bars from lengthBefore & lengthAfter\r\n   * @param {Number} value value to get pivot from\r\n   * @param {Number} lengthBefore number of bars to check on left\r\n   * @param {Number} lengthAfter number of bars to check on right\r\n   * @returns {Number} pivot high found (will return null if no pivot found)\r\n   */\r\n  pivot_high: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      },\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, lengthBefore, lengthAfter) {\r\n      state.output = value\r\n\r\n      let middle = state.points[lengthBefore]\r\n\r\n      if (typeof middle === 'undefined') {\r\n        middle = value\r\n      }\r\n\r\n      const length = lengthBefore + lengthAfter\r\n\r\n      for (let i = 0; i <= length; i++) {\r\n        const current = i < length - 1 ? state.points[i] : value\r\n\r\n        if (current > middle) {\r\n          return null\r\n        }\r\n      }\r\n\r\n      return middle\r\n    }\r\n  },\r\n  /**\r\n   * returns price of the pivot low point\r\n   * the lowest value of all the bars from lengthBefore & lengthAfter\r\n   * @param {Number} value value to get pivot from\r\n   * @param {Number} lengthBefore number of bars to check on left\r\n   * @param {Number} lengthAfter number of bars to check on right\r\n   * @returns {Number} pivot low found (will return null if no pivot found)\r\n   */\r\n  pivot_low: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      },\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, lengthBefore, lengthAfter) {\r\n      state.output = value\r\n\r\n      let middle = state.points[lengthBefore]\r\n\r\n      if (typeof middle === 'undefined') {\r\n        middle = value\r\n      }\r\n\r\n      const length = lengthBefore + lengthAfter\r\n\r\n      for (let i = 0; i <= length; i++) {\r\n        const current = i < length - 1 ? state.points[i] : value\r\n\r\n        if (current < middle) {\r\n          return null\r\n        }\r\n      }\r\n\r\n      return middle\r\n    }\r\n  },\r\n  /**\r\n   * the highest value within a set of bars\r\n   * @param {Number} value\r\n   * @param {Number} length number of bars to keep in the set\r\n   * @returns {Number} highest value\r\n   */\r\n  highest: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count > 1) {\r\n        return Math.max.apply(null, state.points)\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * the lowest value within a set of bars\r\n   * @param {Number} value\r\n   * @param {Number} length number of bars to keep in the set\r\n   * @returns {Number} highest value\r\n   */\r\n  lowest: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count > 1) {\r\n        return Math.min.apply(null, state.points)\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n  },\r\n  linreg: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value, length) {\r\n      state.output = value\r\n\r\n      if (state.count < 1) {\r\n        return null\r\n      }\r\n\r\n      let count = 0\r\n      let per = 0\r\n      let sumX = 0\r\n      let sumY = 0\r\n      let sumXSqr = 0\r\n      let sumXY = 0\r\n\r\n      for (let i = 0; i <= state.points.length; i++) {\r\n        const val = i === state.points.length ? value : state.points[i]\r\n        per = i + 1\r\n        sumX += per\r\n        sumY += val\r\n        sumXSqr += per * per\r\n        sumXY += val * per\r\n        count++\r\n      }\r\n\r\n      const slope =\r\n        (count * sumXY - sumX * sumY) / (count * sumXSqr - sumX * sumX)\r\n      const average = sumY / count\r\n      const intercept = average - (slope * sumX) / length + slope\r\n\r\n      return intercept + slope * (count - 1)\r\n    }\r\n  },\r\n  avg: {\r\n    update(state, values) {\r\n      let count = 0\r\n      let sum = 0\r\n\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (values[i] === null) {\r\n          continue\r\n        }\r\n        sum += values[i]\r\n        count++\r\n      }\r\n\r\n      return sum / count\r\n    }\r\n  },\r\n  sum: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      state.output = value\r\n      return state.sum + value\r\n    }\r\n  },\r\n  sma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      const average = (state.sum + value) / (state.count + 1)\r\n      state.output = value\r\n      return average\r\n    }\r\n  },\r\n  cma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value) {\r\n      state.output = (state.sum + value) / (state.count + 1)\r\n      return state.output\r\n    }\r\n  },\r\n  ema: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value, length) {\r\n      const k = 2 / (length + 1)\r\n\r\n      if (state.count) {\r\n        const last = state.points[state.points.length - 1]\r\n        state.output = (value - last) * k + last\r\n      } else {\r\n        state.output = value\r\n      }\r\n\r\n      return state.output\r\n    }\r\n  },\r\n  last: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      points: [],\r\n      count: 0\r\n    },\r\n    next: accumulatePoints,\r\n    update(state, value) {\r\n      state.output = value\r\n\r\n      return state.count ? state.points[0] : value\r\n    }\r\n  },\r\n  rma: {\r\n    args: [\r\n      {},\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      sum: 0,\r\n      points: []\r\n    },\r\n    next: accumulatePointsAverage,\r\n    update(state, value, length) {\r\n      const k = 1 / length\r\n\r\n      if (state.count) {\r\n        const last = state.points[state.points.length - 1]\r\n        state.output = k * value + (1 - k) * last\r\n      } else {\r\n        state.output = 1\r\n      }\r\n\r\n      return state.output\r\n    }\r\n  },\r\n  merge_overlapping_intervals: {\r\n    update(state, intervals) {\r\n      return intervals\r\n        .sort((a, b) => a[0] - b[0])\r\n        .reduce(\r\n          (acc, range) => {\r\n            const indexOfLast = acc.length - 1\r\n            const prevRange = acc[indexOfLast]\r\n            const end = prevRange[1]\r\n            const start = range[0]\r\n\r\n            if (end >= start) {\r\n              acc[indexOfLast][1] = Math.max(end, range[1])\r\n            } else {\r\n              acc.push(range)\r\n            }\r\n\r\n            return acc\r\n          },\r\n          [intervals[0]]\r\n        )\r\n    }\r\n  },\r\n  reverse_intervals: {\r\n    update(state, intervals) {\r\n      return intervals.reduce((acc, range, i, arr) => {\r\n        if (i > 0) {\r\n          acc[i - 1][1] = range[0]\r\n        }\r\n\r\n        if (i < arr.length - 1) {\r\n          acc.push([range[1]])\r\n        }\r\n\r\n        return acc\r\n      }, [])\r\n    }\r\n  },\r\n  stoch: {\r\n    args: [\r\n      null,\r\n      null,\r\n      null,\r\n      {\r\n        length: true\r\n      }\r\n    ],\r\n    state: {\r\n      count: 0,\r\n      lows: [],\r\n      highs: []\r\n    },\r\n    next: accumulateStoch,\r\n    update(state, close, high, low) {\r\n      state.low = low\r\n      const lowest =\r\n        state.count > 0 ? Math.min(Math.min.apply(null, state.lows), low) : low\r\n\r\n      state.high = high\r\n      const highest =\r\n        state.count > 0\r\n          ? Math.max(Math.max.apply(null, state.highs), high)\r\n          : high\r\n\r\n      state.output = (100 * (close - lowest)) / (highest - lowest || 1)\r\n\r\n      return state.output\r\n    }\r\n  }\r\n}\r\n","import { Bar, TimeRange } from './chart'\n\nexport interface Chunk {\n  from: number\n  to: number\n  bars: Bar[]\n  rendered?: boolean\n  active?: boolean\n}\n\nexport default class ChartCache {\n  chunks: Chunk[] = []\n  cacheRange: TimeRange = { from: null, to: null }\n  initialPrices: {\n    [exchange: string]: {\n      pair: string\n      exchange: string\n      price: number\n    }\n  } = {}\n\n  /**\n   * append or prepend chunk to cache array\n   * and recalculate this.cacheRange\n   * @param{Chunk} chunk Chunk to add\n   */\n  saveChunk(chunk) {\n    let index\n\n    if (\n      !this.chunks.length ||\n      this.chunks[this.chunks.length - 1].to < chunk.from\n    ) {\n      index = this.chunks.push(chunk) - 1\n    } else if (this.chunks[0].from > chunk.to) {\n      this.chunks.unshift(chunk)\n      index = 0\n    } else {\n      console.warn(`\\t-> couldn't push or prepend the chunk -> abort`)\n      return\n    }\n\n    if (index === 0) {\n      this.cacheRange.from = chunk.from\n    }\n\n    if (index === this.chunks.length - 1) {\n      this.cacheRange.to = chunk.to\n    }\n\n    return chunk\n  }\n\n  clear() {\n    console.log(`[chartCache/this.chunks] clear this.chunks`)\n\n    this.chunks.splice(0, this.chunks.length)\n    this.cacheRange.from = this.cacheRange.to = null\n    this.initialPrices = {}\n  }\n\n  trim(end) {\n    if (!this.chunks.length) {\n      return\n    }\n\n    let reduced = false\n\n    while (this.chunks[0] && this.chunks[0].to < end) {\n      console.debug(\n        `[chart.cache] trim chunk (${this.chunks[0].bars.length} bars)`\n      )\n      this.chunks.splice(0, 1)\n\n      reduced = true\n    }\n\n    this.cacheRange.from = this.chunks[0].from\n\n    return reduced\n  }\n}\n","import seriesUtils from './serieUtils'\r\n\r\nimport {\r\n  IndicatorRealtimeAdapter,\r\n  IndicatorTranspilationResult,\r\n  IndicatorPlot,\r\n  IndicatorVariable,\r\n  IndicatorFunction,\r\n  LoadedIndicator,\r\n  IndicatorReference,\r\n  IndicatorMarkets\r\n} from './chart'\r\nimport store from '@/store'\r\nimport {\r\n  findClosingBracketMatchIndex,\r\n  parseFunctionArguments,\r\n  randomString,\r\n  uniqueName\r\n} from '@/utils/helpers'\r\nimport { plotTypesMap } from './options'\r\nconst SERIE_UPDATE_REGEX = /series\\[[a-zA-Z0-9+\\-$ ]+\\]\\.update\\(/\r\nconst VARIABLES_VAR_NAME = 'vars'\r\nconst FUNCTIONS_VAR_NAME = 'fns'\r\nconst SERIE_TYPES = {\r\n  candlestick: 'ohlc',\r\n  bar: 'ohlc',\r\n  line: 'number',\r\n  histogram: 'number',\r\n  area: 'number',\r\n  cloudarea: 'range',\r\n  brokenarea: 'range',\r\n  baseline: 'number'\r\n}\r\nexport default class SerieBuilder {\r\n  private paneId: string\r\n  private markets: string[]\r\n  private indicatorId: string\r\n  private serieIndicatorsMap: { [serieId: string]: IndicatorReference }\r\n\r\n  /**\r\n   * build indicator\r\n   * parse variable, functions referenced sources and indicator used in it\r\n   * prepare dedicated state for each variables and functions\r\n   * @param indicator indicator to build\r\n   * @param serieIndicatorsMap serieId => { indicatorId, plotIndex } of activated indicators for dependency matching\r\n   * @param paneId paneId that trigged the build\r\n   * @returns {IndicatorTranspilationResult} build result\r\n   */\r\n  build(\r\n    indicator: LoadedIndicator,\r\n    serieIndicatorsMap: { [serieId: string]: IndicatorReference },\r\n    paneId: string\r\n  ) {\r\n    this.paneId = paneId\r\n    this.indicatorId = indicator.id\r\n    this.serieIndicatorsMap = serieIndicatorsMap\r\n\r\n    this.markets = []\r\n    for (const market of store.state.panes.panes[this.paneId].markets) {\r\n      if (this.markets.indexOf(market) === -1) {\r\n        this.markets.push(market)\r\n      }\r\n    }\r\n\r\n    const result = this.parse(indicator.script)\r\n\r\n    // guess the initial state of each function/variable in the code\r\n    for (const instruction of result.functions) {\r\n      this.determineFunctionState(instruction)\r\n    }\r\n\r\n    for (const instruction of result.variables) {\r\n      this.determineVariableState(instruction)\r\n    }\r\n\r\n    return {\r\n      output: result.output,\r\n      silentOutput: result.silentOutput,\r\n      functions: result.functions,\r\n      variables: result.variables,\r\n      references: result.references,\r\n      markets: result.markets,\r\n      plots: result.plots\r\n    }\r\n  }\r\n\r\n  /**\r\n   * replace shorthands with real variables names :\r\n   * replace 'bar' with renderer.bar\r\n   * replace all data (vbuy, vsell etc) from bar with renderer.bar.*\r\n   * remove spaces (keep new lines)\r\n   * @param input\r\n   * @returns\r\n   */\r\n  normalizeInput(input, strings) {\r\n    input = input.replace(\r\n      /([^.])?\\b(indicatorId)\\b/gi,\r\n      `$1'${this.indicatorId}'`\r\n    )\r\n    input = input.replace(/([^.])?\\b(bar)\\b/gi, '$1renderer')\r\n    input = input.replace(\r\n      /([^.]|^)\\b(vbuy|vsell|cbuy|csell|lbuy|lsell)\\b/gi,\r\n      '$1renderer.bar.$2'\r\n    )\r\n    input = input.replace(\r\n      /([^.]|^)\\b(time)\\b([^:])/gi,\r\n      '$1renderer.localTimestamp$3'\r\n    )\r\n    input = input.replace(/(\\n|^)\\s*?\\/\\/.*/g, '')\r\n\r\n    const STRING_REGEX = /'([^']*)'|\"([^\"]*)\"/\r\n    let stringMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((stringMatch = STRING_REGEX.exec(input))) {\r\n        let refIndex = strings.indexOf(stringMatch[0])\r\n\r\n        if (refIndex === -1) {\r\n          refIndex = strings.push(stringMatch[0]) - 1\r\n        }\r\n        input =\r\n          input.slice(0, stringMatch.index) +\r\n          '#STRING_' +\r\n          refIndex +\r\n          '#' +\r\n          input.slice(stringMatch.index + stringMatch[0].length)\r\n      }\r\n    } while (stringMatch && ++iterations < 1000)\r\n\r\n    // input = input.replace(/[^\\S\\r\\n]/g, '')\r\n\r\n    const PARANTHESIS_REGEX = /\\(/g\r\n    let paranthesisMatch\r\n    iterations = 0\r\n\r\n    do {\r\n      if ((paranthesisMatch = PARANTHESIS_REGEX.exec(input))) {\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          input,\r\n          paranthesisMatch.index,\r\n          /\\(|{|\\[/,\r\n          /\\)|}|\\]/\r\n        )\r\n\r\n        if (closingParenthesisIndex !== -1) {\r\n          const contentWithinParenthesis = input\r\n            .slice(paranthesisMatch.index + 1, closingParenthesisIndex)\r\n            .replace(/\\n/g, ' ')\r\n\r\n          input =\r\n            input.slice(0, paranthesisMatch.index) +\r\n            input.slice(paranthesisMatch.index, paranthesisMatch.index + 1) +\r\n            contentWithinParenthesis.replace(/\\n/g, '') +\r\n            input.slice(closingParenthesisIndex, closingParenthesisIndex + 1) +\r\n            '\\n' +\r\n            input.slice(closingParenthesisIndex + 1, input.length)\r\n\r\n          PARANTHESIS_REGEX.lastIndex = closingParenthesisIndex\r\n        }\r\n      }\r\n    } while (paranthesisMatch && ++iterations < 1000)\r\n\r\n    return input\r\n  }\r\n\r\n  /**\r\n   * use default state instruction defined in seriesUtils for each functions\r\n   * @param instruction\r\n   * @returns void\r\n   */\r\n  determineFunctionState(instruction: IndicatorFunction) {\r\n    if (\r\n      typeof seriesUtils[instruction.name] &&\r\n      typeof seriesUtils[instruction.name].state === 'object'\r\n    ) {\r\n      instruction.state = {}\r\n\r\n      for (const prop in seriesUtils[instruction.name].state) {\r\n        try {\r\n          instruction.state[prop] = JSON.parse(\r\n            JSON.stringify(seriesUtils[instruction.name].state[prop])\r\n          )\r\n        } catch (error) {\r\n          instruction.state[prop] = seriesUtils[instruction.name].state[prop]\r\n        }\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    instruction.state = {}\r\n  }\r\n\r\n  /**\r\n   * use instruction.length to know how much values the variables need to keep track of\r\n   * no state needed if variable history are never called in the script\r\n   * @param instruction\r\n   */\r\n  determineVariableState(instruction: IndicatorVariable) {\r\n    if (instruction.length > 1) {\r\n      instruction.state = [0]\r\n    } else {\r\n      instruction.state = 0\r\n    }\r\n  }\r\n\r\n  getSilentOutput(originalOutput) {\r\n    let silentOutput = originalOutput\r\n\r\n    let instructionMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((instructionMatch = SERIE_UPDATE_REGEX.exec(silentOutput))) {\r\n        const openingParenthesisIndex =\r\n          instructionMatch.index + instructionMatch[0].length - 1\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          silentOutput,\r\n          openingParenthesisIndex\r\n        )\r\n        silentOutput = silentOutput.replace(\r\n          instructionMatch[0] +\r\n            silentOutput.slice(\r\n              openingParenthesisIndex + 1,\r\n              closingParenthesisIndex + 1\r\n            ),\r\n          1\r\n        )\r\n      }\r\n    } while (instructionMatch && ++iterations < 1000)\r\n\r\n    return silentOutput\r\n  }\r\n\r\n  /**\r\n   * parse variable, functions referenced sources and external indicators used in it\r\n   * @param input\r\n   * @returns\r\n   */\r\n  parse(input): IndicatorTranspilationResult {\r\n    const functions: IndicatorFunction[] = []\r\n    const variables: IndicatorVariable[] = []\r\n    const plots: IndicatorPlot[] = []\r\n    const markets: IndicatorMarkets = {}\r\n    const references: IndicatorReference[] = []\r\n    const strings = []\r\n\r\n    let output = this.normalizeInput(input, strings)\r\n\r\n    output = this.parseVariables(output, variables)\r\n\r\n    output = this.parseMarkets(output, markets)\r\n\r\n    for (let i = 0; i < strings.length; i++) {\r\n      output = output.replace(\r\n        new RegExp('#STRING_' + i + '#', 'g'),\r\n        strings[i].replace(/\\$/g, '$$$')\r\n      )\r\n    }\r\n\r\n    output = this.parseFunctions(output, functions, plots)\r\n    output = this.parseReferences(output, references, plots)\r\n\r\n    output = this.formatOutput(output)\r\n\r\n    const silentOutput = this.getSilentOutput(output)\r\n\r\n    return {\r\n      output,\r\n      silentOutput,\r\n      functions,\r\n      variables,\r\n      plots,\r\n      markets,\r\n      references\r\n    }\r\n  }\r\n\r\n  formatOutput(input) {\r\n    const PARANTHESIS_REGEX = /\\(|{|\\[/g\r\n\r\n    let paranthesisMatch\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((paranthesisMatch = PARANTHESIS_REGEX.exec(input))) {\r\n        const lineBreakIt = paranthesisMatch[0] === '('\r\n\r\n        const closingParenthesisIndex = findClosingBracketMatchIndex(\r\n          input,\r\n          paranthesisMatch.index,\r\n          /\\(|{|\\[/,\r\n          /\\)|}|\\]/\r\n        )\r\n        const contentWithinParenthesis = input\r\n          .slice(paranthesisMatch.index + 1, closingParenthesisIndex)\r\n          .replace(/\\n/g, ' ')\r\n\r\n        if (/if|for|else/.test(input.slice(paranthesisMatch.index - 2, 2))) {\r\n          input =\r\n            input.slice(0, paranthesisMatch.index) +\r\n            input.slice(paranthesisMatch.index, paranthesisMatch.index + 1) +\r\n            contentWithinParenthesis +\r\n            input.slice(closingParenthesisIndex, closingParenthesisIndex + 1) +\r\n            (lineBreakIt ? '\\n' : '') +\r\n            input.slice(closingParenthesisIndex + 1, input.length)\r\n        }\r\n\r\n        PARANTHESIS_REGEX.lastIndex = closingParenthesisIndex\r\n      }\r\n    } while (paranthesisMatch && ++iterations < 1000)\r\n\r\n    const lines = input.trim().split(/\\n/)\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const sourcesMatches = lines[i].match(\r\n        /renderer.sources\\['[\\w/:_-]+']\\.\\w+/g\r\n      )\r\n\r\n      if (sourcesMatches && sourcesMatches.length === 1) {\r\n        lines[i] = `if (${sourcesMatches[0]}) {\r\n          ${lines[i]}\r\n        }`\r\n      }\r\n    }\r\n\r\n    return lines.join('\\n').replace(/\\n\\n/g, '\\n')\r\n  }\r\n\r\n  parseVariables(output, variables): string {\r\n    const VARIABLE_REGEX = /(?:^|\\n)\\s*((?:var )?[a-zA-Z0-9_]+)\\(?(\\d*)\\)?\\s*=\\s*([^\\n;,]*)?/\r\n    let variableMatch = null\r\n    let iterations = 0\r\n\r\n    const nonPersistentVariables = []\r\n\r\n    do {\r\n      if ((variableMatch = VARIABLE_REGEX.exec(output))) {\r\n        let variableName = variableMatch[1]\r\n        const isNonPersistent = /^var/.test(variableName)\r\n\r\n        if (\r\n          nonPersistentVariables.indexOf(variableName) !== -1 ||\r\n          isNonPersistent\r\n        ) {\r\n          if (isNonPersistent) {\r\n            variableName = variableName.replace(/var\\s*/, '')\r\n            output = output.replace(\r\n              variableMatch[0],\r\n              '\\nvar ' + variableName + '=' + variableMatch[3]\r\n            )\r\n            nonPersistentVariables.push(variableName)\r\n          }\r\n\r\n          // eslint-disable-next-line no-useless-escape\r\n          output = output.replace(\r\n            new RegExp(\r\n              '([^.$]|^)\\\\b(' + variableName + ')\\\\b(?!:)(?!\\\\()(?!\\\\$)',\r\n              'ig'\r\n            ),\r\n            `$1${variableName}$`\r\n          )\r\n          continue\r\n        }\r\n\r\n        const variableLength = +variableMatch[2] || 1\r\n\r\n        output = output.replace(\r\n          new RegExp('([^.]|^)\\\\b(' + variableName + ')\\\\b(?!:)', 'ig'),\r\n          `$1${VARIABLES_VAR_NAME}[${variables.length}]`\r\n        )\r\n\r\n        const variable: IndicatorVariable = {\r\n          length: variableLength\r\n        }\r\n\r\n        variables.push(variable)\r\n        output = output.replace(\r\n          new RegExp(\r\n            `(${VARIABLES_VAR_NAME}\\\\[${variables.length - 1}\\\\])\\\\(${\r\n              variable.length\r\n            }\\\\)\\\\s*=\\\\s*`\r\n          ),\r\n          '$1='\r\n        )\r\n      }\r\n    } while (variableMatch && ++iterations < 1000)\r\n\r\n    output = this.determineVariablesType(output, variables)\r\n\r\n    return output\r\n  }\r\n\r\n  parseSerie(output: string, match: RegExpExecArray, plots: IndicatorPlot[]) {\r\n    // absolute serie type eg. plotline -> line)\r\n    const serieType = match[1].replace(/^plot/, '')\r\n\r\n    // serie arguments eg. sma($price.close,options.smaLength),color=red\r\n    const closingBracketIndex = findClosingBracketMatchIndex(\r\n      output,\r\n      match.index + match[1].length\r\n    )\r\n    const rawFunctionArguments = output.slice(\r\n      match.index + match[1].length + 1,\r\n      closingBracketIndex\r\n    )\r\n\r\n    // full function call eg. plotline(sma($price.close,options.smaLength),color=red)\r\n    const rawFunctionInstruction = match[1] + '(' + rawFunctionArguments + ')'\r\n\r\n    // plot function arguments ['sma($price.close,options.smaLength)','color=red']\r\n    const args = parseFunctionArguments(rawFunctionArguments)\r\n    const serieOptions: { [key: string]: any } = {}\r\n\r\n    // parse and store serie options in dedicated object (eg. color=red in plotline arguments)\r\n    for (let i = 1; i < args.length; i++) {\r\n      try {\r\n        const [, key, value] = args[i].match(/^(\\w+)\\s*=(.*)/)\r\n\r\n        if (!key || !value.length) {\r\n          continue\r\n        }\r\n\r\n        let parsedValue = value.trim()\r\n\r\n        try {\r\n          parsedValue = JSON.parse(parsedValue)\r\n        } catch (error) {\r\n          // value a string\r\n        }\r\n\r\n        serieOptions[key.trim()] = parsedValue\r\n\r\n        args.splice(i, 1)\r\n        i--\r\n      } catch (error) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    // prepare final input that goes in plotline (store it for reference)\r\n    const pointVariable = `renderer.indicators['${this.indicatorId}'].series[${plots.length}]`\r\n    let seriePoint = `${pointVariable} = `\r\n\r\n    const expectedInput = SERIE_TYPES[serieType]\r\n    let timeProperty = `renderer.localTimestamp`\r\n\r\n    if (serieOptions.offset) {\r\n      timeProperty += `+renderer.timeframe*${serieOptions.offset}`\r\n    }\r\n\r\n    // tranform input into valid lightweight-charts data point\r\n    const argIsObject = /{/.test(args[0]) && /}/.test(args[0])\r\n    const argContainSpecialChars = /^[\\w_$]+\\$/.test(args[0])\r\n    if (\r\n      args.length === 1 &&\r\n      (argIsObject || (serieType !== 'line' && argContainSpecialChars))\r\n    ) {\r\n      seriePoint += args[0]\r\n    } else if (expectedInput === 'ohlc') {\r\n      if (args.length === 4) {\r\n        seriePoint += `{ time: ${timeProperty}, open: ${args[0]}, high: ${args[1]}, low: ${args[2]}, close: ${args[3]} }`\r\n      } else if (args.length === 1) {\r\n        if (/^[A-Z_]+:\\w+/.test(args[0])) {\r\n          seriePoint += `${args[0]}.close === null ? { time: ${timeProperty} } : { time: ${timeProperty}, open: ${args[0]}.open, high: ${args[0]}.high, low: ${args[0]}.low, close: ${args[0]}.close }`\r\n        } else {\r\n          seriePoint += args[0]\r\n        }\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected a ohlc object or 4 number`\r\n        )\r\n      }\r\n    } else if (expectedInput === 'range') {\r\n      if (args.length === 2) {\r\n        seriePoint += `{ time: ${timeProperty}, lowerValue: ${args[0]}, higherValue: ${args[1]} }`\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected 2 arguments (lowerValue and higherValue)`\r\n        )\r\n      }\r\n    } else if (expectedInput === 'number') {\r\n      if (args.length === 1) {\r\n        seriePoint += `{ time: ${timeProperty}, value: ${args[0]} }`\r\n      } else {\r\n        throw new Error(\r\n          `Invalid input for function ${match[1]}, expected 1 value (number)`\r\n        )\r\n      }\r\n    }\r\n\r\n    // this line will paint the point\r\n    const serieUpdate = `series[${plots.length}].update(renderer.indicators['${this.indicatorId}'].series[${plots.length}])`\r\n\r\n    // put everything together\r\n    let finalInstruction = seriePoint + ','\r\n\r\n    if (serieType === 'histogram') {\r\n      // only update point if there is a value to avoid long histogram * base line * at zero\r\n      finalInstruction += pointVariable + '.value&&'\r\n    } else if (serieType === 'line') {\r\n      // prevent null\r\n      finalInstruction += pointVariable + '.value !== null&&'\r\n    } else if (serieType === 'cloudarea' || serieType === 'brokenarea') {\r\n      // prevent null\r\n      finalInstruction += pointVariable + '.lowerValue !== null&&'\r\n    }\r\n\r\n    finalInstruction += serieUpdate\r\n\r\n    output = output.replace(rawFunctionInstruction, finalInstruction)\r\n\r\n    let id: string\r\n\r\n    if (typeof serieOptions.id === 'string' && serieOptions.id.length) {\r\n      id = serieOptions.id\r\n\r\n      delete serieOptions.id\r\n    } else if (plots.length === 0) {\r\n      id = this.indicatorId\r\n    } else {\r\n      id = randomString(8)\r\n    }\r\n\r\n    const names = Object.keys(this.serieIndicatorsMap).concat(\r\n      plots.map(plot => plot.id)\r\n    )\r\n\r\n    // register plot\r\n    plots.push({\r\n      id: uniqueName(id, names),\r\n      type: plotTypesMap[serieType] || serieType,\r\n      expectedInput: expectedInput,\r\n      options: serieOptions\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  parseFunctions(\r\n    output: string,\r\n    instructions: IndicatorFunction[],\r\n    plots: IndicatorPlot[]\r\n  ): string {\r\n    const FUNCTION_LOOKUP_REGEX = new RegExp(`([a-zA-Z0_9_]+)\\\\(`, 'g')\r\n\r\n    let functionMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((functionMatch = FUNCTION_LOOKUP_REGEX.exec(output))) {\r\n        const functionName = functionMatch[1]\r\n\r\n        const isMathFunction = Object.prototype.hasOwnProperty.call(\r\n          Math,\r\n          functionName\r\n        )\r\n        const isSerieFunction = SERIE_TYPES[functionName.replace(/^plot/, '')]\r\n        const isMethod = output[functionMatch.index - 1] === '.'\r\n\r\n        if (isMathFunction || isSerieFunction || isMethod) {\r\n          FUNCTION_LOOKUP_REGEX.lastIndex =\r\n            functionMatch.index + functionMatch[0].length\r\n\r\n          if (typeof isSerieFunction === 'string') {\r\n            output = this.parseSerie(output, functionMatch, plots)\r\n          }\r\n          continue\r\n        }\r\n\r\n        const targetFunction = seriesUtils[functionName]\r\n\r\n        if (!targetFunction) {\r\n          if (/for|if|rgba/i.test(functionName)) {\r\n            FUNCTION_LOOKUP_REGEX.lastIndex =\r\n              functionMatch.index + functionMatch[0].length\r\n            continue\r\n          } else {\r\n            throw new Error(`Function ${functionName} doesn't exists`)\r\n          }\r\n        }\r\n\r\n        const instruction: IndicatorFunction = {\r\n          name: functionName,\r\n          args: []\r\n        }\r\n\r\n        let injectedArgCount = 0\r\n\r\n        const customArgsStartIndex = functionMatch.index\r\n        const customArgsEndIndex = findClosingBracketMatchIndex(\r\n          output,\r\n          customArgsStartIndex + functionMatch[1].length\r\n        )\r\n        const customArgs = parseFunctionArguments(\r\n          output.slice(\r\n            customArgsStartIndex + functionMatch[1].length + 1,\r\n            customArgsEndIndex\r\n          )\r\n        )\r\n        let totalArgsCount =\r\n          (targetFunction.args ? targetFunction.args.length : 0) +\r\n          customArgs.length\r\n\r\n        for (let i = 0; i < totalArgsCount; i++) {\r\n          const argDefinition =\r\n            targetFunction.args && targetFunction.args[i]\r\n              ? targetFunction.args[i]\r\n              : {}\r\n\r\n          const arg = {\r\n            ...argDefinition\r\n          }\r\n\r\n          if (argDefinition.injected) {\r\n            injectedArgCount++\r\n\r\n            instruction.args.push(arg)\r\n\r\n            continue\r\n          } else {\r\n            totalArgsCount--\r\n          }\r\n\r\n          const customArg = customArgs[i - injectedArgCount]\r\n\r\n          if (typeof customArg !== 'undefined') {\r\n            arg.instruction = customArg\r\n          }\r\n\r\n          instruction.args.push(arg)\r\n        }\r\n\r\n        output = `${output.slice(\r\n          0,\r\n          customArgsStartIndex\r\n        )}utils.${functionName}.update(${FUNCTIONS_VAR_NAME}[${\r\n          instructions.length\r\n        }].state,${instruction.args\r\n          .map(a => a.instruction)\r\n          .join(',')})${output.slice(customArgsEndIndex + 1, output.length)}`\r\n\r\n        instructions.push(instruction)\r\n      }\r\n    } while (functionMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n\r\n  parseMarkets(output: string, markets: IndicatorMarkets): string {\r\n    const EXCHANGE_REGEX = /\\b([A-Z_]{3,}:[a-zA-Z0-9/_-]{5,})(:[\\w]{4,})?\\.?([a-z]{3,})?\\b/g\r\n\r\n    let marketMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((marketMatch = EXCHANGE_REGEX.exec(output))) {\r\n        const marketName =\r\n          marketMatch[1] + (marketMatch[2] ? marketMatch[2] : '')\r\n        const marketDataKey = marketMatch[3]\r\n\r\n        if (!markets[marketName]) {\r\n          markets[marketName] = []\r\n        }\r\n\r\n        if (marketDataKey) {\r\n          if (markets[marketName].indexOf(marketDataKey) === -1) {\r\n            markets[marketName].push(marketDataKey)\r\n          }\r\n        }\r\n\r\n        const replacement = `renderer.sources['${marketName}']${\r\n          marketDataKey ? '.' + marketDataKey : ''\r\n        }`\r\n\r\n        EXCHANGE_REGEX.lastIndex = marketMatch.index + replacement.length\r\n\r\n        output =\r\n          output.slice(0, marketMatch.index) +\r\n          replacement +\r\n          output.slice(marketMatch.index + marketMatch[0].length)\r\n      }\r\n    } while (marketMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n  parseReferences(\r\n    output: string,\r\n    references: IndicatorReference[],\r\n    plots: IndicatorPlot[]\r\n  ): string {\r\n    const REFERENCE_REGEX = new RegExp('\\\\$(\\\\w+[a-z_\\\\-0-9]+)\\\\b')\r\n\r\n    let referenceMatch = null\r\n    let iterations = 0\r\n\r\n    do {\r\n      if ((referenceMatch = REFERENCE_REGEX.exec(output))) {\r\n        const serieId = referenceMatch[1]\r\n\r\n        try {\r\n          const [indicatorId, plotIndex] = this.getSeriePath(serieId, plots)\r\n\r\n          if (\r\n            !references.find(\r\n              reference =>\r\n                reference.indicatorId === indicatorId &&\r\n                reference.plotIndex === plotIndex\r\n            )\r\n          ) {\r\n            references.push({\r\n              indicatorId,\r\n              serieId,\r\n              plotIndex\r\n            })\r\n          }\r\n\r\n          output = output.replace(\r\n            new RegExp('\\\\$(' + serieId + ')\\\\b', 'ig'),\r\n            `renderer.indicators['${indicatorId}'].series[${plotIndex}]`\r\n          )\r\n        } catch (error) {\r\n          throw {\r\n            message: `The serie \"${serieId}\" was not found in the current indicators`,\r\n            status: 'indicator-required',\r\n            serieId: serieId\r\n          }\r\n        }\r\n      }\r\n    } while (referenceMatch && ++iterations < 1000)\r\n\r\n    return output\r\n  }\r\n\r\n  getSeriePath(serieId: string, plots: IndicatorPlot[]): [string, number] {\r\n    let indicatorId: string\r\n    let plotIndex: number\r\n\r\n    // see if we can find the serie in the plots that are already processed\r\n    const reference = plots.find(\r\n      plot =>\r\n        plot.id === serieId ||\r\n        plot.id.replace(/\\W/g, '') === serieId.replace(/\\W/g, '')\r\n    )\r\n\r\n    if (reference) {\r\n      indicatorId = this.indicatorId\r\n      plotIndex = plots.indexOf(reference)\r\n    }\r\n\r\n    // or in the others indicator that are already in\r\n    if (!indicatorId && this.serieIndicatorsMap[serieId]) {\r\n      ;({ indicatorId, plotIndex } = this.serieIndicatorsMap[serieId])\r\n    }\r\n\r\n    // or match with indicatorId, taking first serie as result\r\n    if (\r\n      !indicatorId &&\r\n      Object.values(this.serieIndicatorsMap)\r\n        .map(a => a.indicatorId)\r\n        .indexOf(serieId) !== -1\r\n    ) {\r\n      indicatorId = serieId\r\n      plotIndex = 0\r\n    }\r\n\r\n    if (indicatorId) {\r\n      return [indicatorId, plotIndex]\r\n    }\r\n  }\r\n\r\n  determineVariablesType(output, variables: IndicatorVariable[]) {\r\n    for (const variable of variables) {\r\n      const index = variables.indexOf(variable)\r\n      const VARIABLE_LENGTH_REGEX = new RegExp(\r\n        `${VARIABLES_VAR_NAME}\\\\[${index}\\\\](?:\\\\[(\\\\d+)\\\\])?`,\r\n        'g'\r\n      )\r\n\r\n      let lengthMatch = null\r\n      let iterations = 0\r\n\r\n      do {\r\n        if ((lengthMatch = VARIABLE_LENGTH_REGEX.exec(output))) {\r\n          const variableLength = lengthMatch[1]\r\n          const position = lengthMatch.index + lengthMatch[0].length\r\n\r\n          if (typeof variableLength === 'undefined') {\r\n            const hasSpecifiedIndex = output[position] === '['\r\n            output =\r\n              output.substring(0, position) +\r\n              '.state' +\r\n              (!hasSpecifiedIndex ? '[0]' : '') +\r\n              output.substring(position)\r\n          } else {\r\n            const beforeVariable = output.substring(0, lengthMatch.index)\r\n            const variableReplacement = `${VARIABLES_VAR_NAME}[${index}].state[Math.min(${VARIABLES_VAR_NAME}[${index}].state.length-1,${variableLength})]`\r\n            const afterVariable = output.substring(\r\n              lengthMatch.index + lengthMatch[0].length\r\n            )\r\n            output = `${beforeVariable}${variableReplacement}${afterVariable}`\r\n\r\n            VARIABLE_LENGTH_REGEX.lastIndex =\r\n              beforeVariable.length + variableReplacement.length\r\n          }\r\n\r\n          variable.length = Math.max(\r\n            variable.length,\r\n            (+variableLength || 0) + 1\r\n          )\r\n        }\r\n      } while (lengthMatch && ++iterations < 1000)\r\n\r\n      if (!variable.length) {\r\n        throw new Error('Unexpected no length on var')\r\n      }\r\n\r\n      if (variable.length === 1) {\r\n        output = output.replace(\r\n          new RegExp(\r\n            `${VARIABLES_VAR_NAME}\\\\[${index}\\\\]\\\\.state\\\\[\\\\d+\\\\]`,\r\n            'g'\r\n          ),\r\n          `${VARIABLES_VAR_NAME}[${index}].state`\r\n        )\r\n      }\r\n\r\n      output = output.replace(\r\n        new RegExp(\r\n          `#${VARIABLES_VAR_NAME}\\\\[${index}\\\\]\\\\.state\\\\[\\\\d+\\\\]`,\r\n          'g'\r\n        ),\r\n        `${VARIABLES_VAR_NAME}[${index}].state`\r\n      )\r\n    }\r\n\r\n    return output\r\n  }\r\n\r\n  getAdapter(output) {\r\n    return (function() {\r\n      'use strict'\r\n      return new Function(\r\n        'renderer',\r\n        FUNCTIONS_VAR_NAME,\r\n        VARIABLES_VAR_NAME,\r\n        'series',\r\n        'options',\r\n        'utils',\r\n        '\"use strict\"; ' + output\r\n      )\r\n    })() as IndicatorRealtimeAdapter\r\n  }\r\n\r\n  /**\r\n   * get fresh state of indicator for the renderer\r\n   * @param indicator\r\n   */\r\n  getRendererIndicatorData(indicator: LoadedIndicator) {\r\n    const { functions, variables, plots } = JSON.parse(\r\n      JSON.stringify(indicator.model)\r\n    ) as IndicatorTranspilationResult\r\n\r\n    indicator.options.minLength = 0\r\n\r\n    // update functions arguments from script input\r\n    for (const instruction of functions) {\r\n      instruction.length = 0\r\n\r\n      for (let i = 0; i < instruction.args.length; i++) {\r\n        if (\r\n          typeof instruction.args[i].instruction === 'undefined' ||\r\n          instruction.args[i].instruction === ''\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        try {\r\n          instruction.args[i].instruction = new Function(\r\n            'options',\r\n            `'use strict'; return ${instruction.args[i].instruction}`\r\n          )(indicator.options)\r\n\r\n          if (\r\n            instruction.args[i].length &&\r\n            !isNaN(instruction.args[i].instruction)\r\n          ) {\r\n            instruction.length += instruction.args[i].instruction\r\n          }\r\n        } catch (error) {\r\n          // nothing to see here\r\n        }\r\n      }\r\n\r\n      indicator.options.minLength = Math.max(\r\n        indicator.options.minLength,\r\n        instruction.length\r\n      )\r\n    }\r\n\r\n    const plotsOptions = []\r\n\r\n    // update plot options from script input\r\n    for (const plot of plots) {\r\n      plotsOptions.push(this.getCustomPlotOptions(indicator, plot))\r\n    }\r\n\r\n    return {\r\n      canRender: indicator.options.minLength <= 1,\r\n      series: [],\r\n      functions,\r\n      variables,\r\n      plotsOptions,\r\n      minLength: indicator.options.minLength\r\n    }\r\n  }\r\n\r\n  getCustomPlotOptions(indicator, plot) {\r\n    // update plot options from script input\r\n\r\n    const options = {}\r\n\r\n    for (const prop in plot.options) {\r\n      try {\r\n        options[prop] = new Function(\r\n          'options',\r\n          `'use strict'; return ${plot.options[prop]}`\r\n        )(indicator.options)\r\n      } catch (error) {\r\n        options[prop] = plot.options[prop]\r\n      }\r\n    }\r\n\r\n    return options\r\n  }\r\n}\r\n","import { MAX_BARS_PER_CHUNKS } from '../../utils/constants'\r\nimport {\r\n  getHms,\r\n  camelize,\r\n  getTimeframeForHuman,\r\n  floorTimestampToTimeframe,\r\n  isOddTimeframe\r\n} from '../../utils/helpers'\r\nimport {\r\n  defaultChartOptions,\r\n  defaultPlotsOptions,\r\n  defaultSerieOptions,\r\n  getChartCustomColorsOptions,\r\n  getChartOptions\r\n} from './options'\r\nimport store from '../../store'\r\nimport seriesUtils from './serieUtils'\r\nimport * as TV from 'lightweight-charts'\r\nimport ChartCache, { Chunk } from './cache'\r\nimport SerieBuilder from './serieBuilder'\r\nimport { MarketAlert, Trade } from '@/types/types'\r\nimport dialogService from '@/services/dialogService'\r\nimport { ChartPaneState, PriceScaleSettings } from '@/store/panesSettings/chart'\r\nimport { waitForStateMutation } from '../../utils/store'\r\nimport aggregatorService from '@/services/aggregatorService'\r\nimport workspacesService from '@/services/workspacesService'\r\nimport { getEventOffset } from '@/utils/touchevent'\r\nimport {\r\n  formatPrice,\r\n  stripStable,\r\n  marketDecimals\r\n} from '@/services/productsService'\r\nimport audioService from '../../services/audioService'\r\n\r\nexport interface Bar {\r\n  vbuy?: number\r\n  vsell?: number\r\n  cbuy?: number\r\n  csell?: number\r\n  lbuy?: number\r\n  lsell?: number\r\n  exchange?: string\r\n  pair?: string\r\n  timestamp?: number\r\n  open?: number\r\n  high?: number\r\n  low?: number\r\n  close?: number\r\n  empty?: boolean\r\n  active?: boolean\r\n}\r\n\r\nexport interface IndicatorApi extends TV.ISeriesApi<any> {\r\n  id: string\r\n  precision?: number\r\n}\r\n\r\nexport type IndicatorMarkets = {\r\n  [marketId: string]: string[]\r\n}\r\n\r\nexport interface TimeRange {\r\n  from: number\r\n  to: number\r\n}\r\n\r\nexport interface OHLC {\r\n  open: number\r\n  high: number\r\n  low: number\r\n  close: number\r\n}\r\n\r\nexport type IndicatorRealtimeAdapter = (\r\n  renderer: Renderer,\r\n  functions: IndicatorFunction[],\r\n  variables: IndicatorVariable[],\r\n  apis: IndicatorApi[],\r\n  options: TV.SeriesOptions<any>,\r\n  seriesUtils: any\r\n) => void\r\nexport interface LoadedIndicator {\r\n  id: string\r\n  options: any\r\n  script: string\r\n  model: IndicatorTranspilationResult\r\n  adapter: IndicatorRealtimeAdapter\r\n  silentAdapter: IndicatorRealtimeAdapter\r\n  apis: IndicatorApi[]\r\n}\r\n\r\nexport interface IndicatorTranspilationResult {\r\n  output: string\r\n  silentOutput: string\r\n  variables: IndicatorVariable[]\r\n  functions: IndicatorFunction[]\r\n  plots: IndicatorPlot[]\r\n  markets?: IndicatorMarkets\r\n  references?: IndicatorReference[]\r\n}\r\nexport interface IndicatorFunction {\r\n  name: string\r\n  args?: any[]\r\n  length?: number\r\n  state?: any\r\n  next?: Function\r\n}\r\nexport interface IndicatorVariable {\r\n  length?: number\r\n  state?: any\r\n}\r\nexport interface IndicatorPlot {\r\n  id: string\r\n  type: string\r\n  expectedInput: 'number' | 'ohlc' | 'range'\r\n  options: { [prop: string]: any }\r\n}\r\nexport interface IndicatorReference {\r\n  indicatorId: string\r\n  serieId?: string\r\n  plotIndex: number\r\n}\r\nexport interface Renderer {\r\n  type: 'time' | 'tick'\r\n  timeframe: number\r\n  timestamp: number\r\n  localTimestamp: number\r\n  renderedTimestamp?: number\r\n  length: number\r\n  bar: Bar\r\n  sources: { [name: string]: Bar }\r\n  indicators: { [id: string]: RendererIndicatorData }\r\n  empty?: boolean\r\n}\r\n\r\ninterface RendererIndicatorData {\r\n  canRender: boolean\r\n  series: {\r\n    time: number\r\n    value?: number\r\n    open?: number\r\n    high?: number\r\n    low?: number\r\n    close?: number\r\n    color?: string\r\n    higherValue?: number\r\n    lowerValue?: number\r\n  }[]\r\n  variables: IndicatorVariable[]\r\n  functions: IndicatorFunction[]\r\n  plotsOptions?: any[]\r\n  minLength?: number\r\n}\r\n\r\nexport default class ChartController {\r\n  paneId: string\r\n  watermark: string\r\n\r\n  chartInstance: TV.IChartApi\r\n  chartElement: HTMLElement\r\n  loadedIndicators: LoadedIndicator[] = []\r\n  panPrevented: boolean\r\n  activeRenderer: Renderer\r\n  renderedRange: TimeRange = { from: null, to: null }\r\n  chartCache: ChartCache\r\n  markets: {\r\n    [identifier: string]: {\r\n      active: boolean\r\n      index: string\r\n      historical: boolean\r\n    }\r\n  } = {}\r\n  alerts: {\r\n    [identifier: string]: MarketAlert[]\r\n  } = {}\r\n  timezoneOffset = 0\r\n  fillGapsWithEmpty = true\r\n  timeframe: number\r\n  isOddTimeframe: boolean\r\n  type: 'time' | 'tick'\r\n  propagateInitialPrices = true\r\n  priceScales: string[] = []\r\n\r\n  private activeChunk: Chunk\r\n  private queuedTrades: Trade[] = []\r\n  private serieBuilder: SerieBuilder\r\n  private seriesIndicatorsMap: { [serieId: string]: IndicatorReference } = {}\r\n\r\n  private _releaseQueueInterval: number\r\n  private _releasePanTimeout: number\r\n  private _queueHandler = this.releaseQueue.bind(this)\r\n  private _refreshDecimalsHandler = this.refreshAutoDecimals.bind(this)\r\n  private _promiseOfMarkets: Promise<void>\r\n  private _promiseOfMarketsRender: Promise<void>\r\n  private _priceIndicatorId: string\r\n  private _alertsRendered: boolean\r\n\r\n  constructor(id: string) {\r\n    this.paneId = id\r\n\r\n    this.chartCache = new ChartCache()\r\n    this.serieBuilder = new SerieBuilder()\r\n\r\n    this.setTimeframe(store.state[this.paneId].timeframe)\r\n    this.setTimezoneOffset(store.state.settings.timezoneOffset)\r\n    this.refreshMarkets()\r\n    aggregatorService.on('decimals', this._refreshDecimalsHandler)\r\n\r\n    this.fillGapsWithEmpty = Boolean(store.state[this.paneId].fillGapsWithEmpty)\r\n  }\r\n\r\n  /**\r\n   * update watermark when pane's markets changes\r\n   */\r\n  async refreshMarkets() {\r\n    if (!store.state.app.isExchangesReady) {\r\n      // exchanges are still loading (probably fetching products)\r\n      // we need to call this again once fully loaded\r\n      if (!this._promiseOfMarkets) {\r\n        this._promiseOfMarkets = waitForStateMutation(\r\n          state => state.app.isExchangesReady\r\n        ).then(this.refreshMarkets.bind(this))\r\n      } else {\r\n        return this._promiseOfMarkets\r\n      }\r\n    } else if (this._promiseOfMarkets) {\r\n      this._promiseOfMarkets = null\r\n    }\r\n\r\n    const markets = store.state.panes.panes[this.paneId].markets\r\n    const historicalMarkets = store.state.app.historicalMarkets\r\n    const normalizeWatermarks = store.state.settings.normalizeWatermarks\r\n    const marketsForWatermark = []\r\n    const cachedMarkets: any = {}\r\n\r\n    for (const marketKey of markets) {\r\n      const [exchange] = marketKey.split(':')\r\n      const market = store.state.panes.marketsListeners[marketKey]\r\n\r\n      let localPair = marketKey\r\n\r\n      if (market) {\r\n        localPair = stripStable(market.local)\r\n      }\r\n\r\n      cachedMarkets[marketKey] = {\r\n        active:\r\n          store.state.exchanges[exchange] &&\r\n          !store.state.exchanges[exchange].disabled &&\r\n          !store.state[this.paneId].hiddenMarkets[marketKey],\r\n        index: localPair,\r\n        historical: historicalMarkets.indexOf(marketKey) !== -1\r\n      }\r\n\r\n      if (\r\n        cachedMarkets[marketKey].active &&\r\n        marketsForWatermark.indexOf(localPair) === -1\r\n      ) {\r\n        marketsForWatermark.push(\r\n          (!normalizeWatermarks && market ? market.exchange + ':' : '') +\r\n            localPair\r\n        )\r\n      }\r\n    }\r\n\r\n    this.markets = cachedMarkets\r\n\r\n    if (store.state.app.isExchangesReady) {\r\n      await this.retrieveAlerts()\r\n    }\r\n\r\n    this.updateWatermark(marketsForWatermark)\r\n    this.resetPriceScales()\r\n  }\r\n\r\n  /**\r\n   * set timeframe to chart model and update watermark with litteral\r\n   * @param timeframe\r\n   */\r\n  setTimeframe(timeframe) {\r\n    if (/t$/.test(timeframe)) {\r\n      this.type = 'tick'\r\n    } else {\r\n      this.type = 'time'\r\n    }\r\n\r\n    this.timeframe = parseFloat(timeframe)\r\n    this.isOddTimeframe = isOddTimeframe(this.timeframe)\r\n\r\n    this.updateWatermark()\r\n  }\r\n\r\n  /**\r\n   * cache timezone offset\r\n   * @param offset in ms\r\n   */\r\n  setTimezoneOffset(offset: number) {\r\n    const originalTimezoneOffset = this.timezoneOffset\r\n\r\n    this.timezoneOffset = offset / 1000\r\n\r\n    const change = this.timezoneOffset - originalTimezoneOffset\r\n\r\n    if (this.activeRenderer) {\r\n      this.activeRenderer.localTimestamp += change\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create Lightweight Charts instance and render pane's indicators\r\n   * @param {HTMLElement} containerElement\r\n   */\r\n  createChart(containerElement: HTMLElement) {\r\n    console.log(`[chart/${this.paneId}/controller] create chart`)\r\n\r\n    const chartOptions = getChartOptions(defaultChartOptions as any)\r\n\r\n    if (store.state[this.paneId].showVerticalGridlines) {\r\n      chartOptions.grid.vertLines.visible =\r\n        store.state[this.paneId].showVerticalGridlines\r\n      chartOptions.grid.vertLines.color =\r\n        store.state[this.paneId].verticalGridlinesColor\r\n    }\r\n\r\n    if (store.state[this.paneId].showHorizontalGridlines) {\r\n      chartOptions.grid.horzLines.visible =\r\n        store.state[this.paneId].showHorizontalGridlines\r\n      chartOptions.grid.horzLines.color =\r\n        store.state[this.paneId].horizontalGridlinesColor\r\n    }\r\n\r\n    if (store.state[this.paneId].showWatermark) {\r\n      chartOptions.watermark.visible = store.state[this.paneId].showWatermark\r\n      chartOptions.watermark.color = store.state[this.paneId].watermarkColor\r\n    }\r\n\r\n    const preferedBarSpacing = store.state[this.paneId].barSpacing\r\n\r\n    if (preferedBarSpacing) {\r\n      chartOptions.timeScale.barSpacing = store.state[this.paneId].barSpacing\r\n      chartOptions.timeScale.rightOffset = Math.ceil(\r\n        (containerElement.clientWidth * 0.05) /\r\n          chartOptions.timeScale.barSpacing\r\n      )\r\n    }\r\n\r\n    this.chartInstance = TV.createChart(containerElement, chartOptions)\r\n    this.chartElement = containerElement\r\n\r\n    this.addEnabledSeries()\r\n    this.updateWatermark()\r\n    this.updateFontSize()\r\n  }\r\n\r\n  /**\r\n   * remove series, destroy this.chartInstance and cancel related events\r\n   */\r\n  removeChart() {\r\n    console.log(`[chart/${this.paneId}/controller] remove chart`)\r\n\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    while (this.loadedIndicators.length) {\r\n      this.removeIndicator(this.loadedIndicators[0])\r\n    }\r\n\r\n    this.chartInstance.remove()\r\n    this.priceScales.splice(0, this.priceScales.length)\r\n\r\n    this.chartInstance = null\r\n  }\r\n\r\n  /**\r\n   * get active indicator by id\r\n   * @returns {LoadedIndicator} serie\r\n   */\r\n  getLoadedIndicator(id: string): LoadedIndicator {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (this.loadedIndicators[i].id === id) {\r\n        return this.loadedIndicators[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set indicator option by key\r\n   * @param {string} id serie id\r\n   * @param {string} key option key\r\n   * @param {any} value serie id\r\n   */\r\n  setIndicatorOption(id, key, value, silent = false) {\r\n    const indicator = this.getLoadedIndicator(id)\r\n\r\n    if (!indicator) {\r\n      return\r\n    }\r\n\r\n    indicator.options[key] = value\r\n\r\n    if (silent) {\r\n      return\r\n    }\r\n\r\n    if (key === 'visible') {\r\n      this.toggleIndicatorVisibility(indicator, value)\r\n\r\n      return\r\n    } else if (key === 'priceFormat' && value.auto) {\r\n      this.refreshAutoDecimals(id)\r\n    }\r\n\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      if (key === 'priceFormat' && !value.auto) {\r\n        indicator.apis[i].precision = value.precision\r\n      }\r\n\r\n      indicator.apis[i].applyOptions({\r\n        [key]: value\r\n      })\r\n    }\r\n\r\n    if (this.optionRequiresRedraw(key)) {\r\n      this.redrawIndicator(id)\r\n    }\r\n  }\r\n\r\n  toggleIndicatorVisibility(indicator: LoadedIndicator, value: boolean) {\r\n    if (!value) {\r\n      this.removeIndicatorSeries(indicator)\r\n    } else {\r\n      if (!indicator.model) {\r\n        this.prepareIndicator(indicator)\r\n      } else {\r\n        this.createIndicatorSeries(indicator)\r\n      }\r\n      this.redrawIndicator(indicator.id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * return true if option change require complete redraw, false otherwise\r\n   * @param key option key\r\n   * @returns\r\n   */\r\n  optionRequiresRedraw(key: string) {\r\n    const redrawOptions = /upColor|downColor|wickDownColor|wickUpColor|borderDownColor|borderUpColor|compositeOperation/i\r\n\r\n    if (redrawOptions.test(key)) {\r\n      return true\r\n    }\r\n\r\n    const noRedrawOptions = /color|priceFormat|linetype|width|style/i\r\n\r\n    if (noRedrawOptions.test(key)) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * rebuild the whole serie\r\n   * @param {string} id serie id\r\n   */\r\n  rebuildIndicator(id) {\r\n    this.removeIndicator(this.getLoadedIndicator(id))\r\n\r\n    if (this.addIndicator(id)) {\r\n      this.redrawIndicator(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get id(s) of indicators used in anoter indicator\r\n   * @param {LoadedIndicator} indicator\r\n   * @returns {string[]} id of indicators\r\n   */\r\n  getReferencedIndicators(indicator: LoadedIndicator) {\r\n    return indicator.model.references\r\n      .slice()\r\n      .map(a => a.indicatorId)\r\n      .filter((t, index, self) => self.indexOf(t) === index)\r\n  }\r\n\r\n  /**\r\n   * redraw one specific indicator (and the series it depends on)\r\n   * @param {string} indicatorId\r\n   */\r\n  redrawIndicator(indicatorId) {\r\n    const indicator = this.getLoadedIndicator(indicatorId)\r\n\r\n    this.clearIndicatorSeries(indicator)\r\n\r\n    let bars = []\r\n\r\n    for (const chunk of this.chartCache.chunks) {\r\n      bars = bars.concat(chunk.bars)\r\n    }\r\n\r\n    const requiredIndicatorsIds = this.getReferencedIndicators(indicator)\r\n\r\n    this.ensureIndicatorVisible(requiredIndicatorsIds)\r\n\r\n    this.renderBars(bars, [...requiredIndicatorsIds, indicatorId])\r\n  }\r\n\r\n  ensureIndicatorVisible(indicatorIds: string[]) {\r\n    for (const indicatorId of indicatorIds) {\r\n      if (\r\n        this.loadedIndicators[indicatorId] &&\r\n        this.loadedIndicators[indicatorId].options.visible === false\r\n      ) {\r\n        this.setIndicatorOption(indicatorId, 'visible', true, true)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * just a extention of Lightweight Charts getVisibleRange but using timezone offset from the settings\r\n   * @returns\r\n   */\r\n  getVisibleRange() {\r\n    const visibleRange = this.chartInstance\r\n      .timeScale()\r\n      .getVisibleRange() as TimeRange\r\n\r\n    if (!visibleRange) {\r\n      return visibleRange\r\n    }\r\n\r\n    visibleRange.from -= this.timezoneOffset\r\n    visibleRange.to -= this.timezoneOffset\r\n\r\n    return visibleRange\r\n  }\r\n\r\n  /**\r\n   * add all pane's indicators\r\n   */\r\n  addEnabledSeries() {\r\n    for (const id in store.state[this.paneId].indicators) {\r\n      this.addIndicator(id)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * render watermark in chart\r\n   * @returns\r\n   */\r\n  updateWatermark(markets?: string[]) {\r\n    if (markets) {\r\n      if (store.state.settings.normalizeWatermarks) {\r\n        this.watermark = markets.join(' | ')\r\n      } else {\r\n        const othersCount = markets.length - 3\r\n        this.watermark =\r\n          markets.slice(0, 3).join(' + ') +\r\n          (othersCount > 0\r\n            ? ' + ' + othersCount + ' other' + (othersCount > 1 ? 's' : '')\r\n            : '')\r\n      }\r\n    }\r\n\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    /**\r\n     * weird spaces (\\u00A0) are for left / right margins\r\n     */\r\n    this.chartInstance.applyOptions({\r\n      watermark: {\r\n        text: `\\u00A0\\u00A0\\u00A0\\u00A0${this.watermark +\r\n          ' | ' +\r\n          getTimeframeForHuman(\r\n            store.state[this.paneId].timeframe\r\n          )}\\u00A0\\u00A0\\u00A0\\u00A0`,\r\n        visible: store.state[this.paneId].showWatermark,\r\n        color: store.state[this.paneId].watermarkColor\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * update chart font using pane zoom option\r\n   */\r\n  updateFontSize() {\r\n    const multiplier = store.state.panes.panes[this.paneId].zoom || 1\r\n    const watermarkBaseFontSize = store.state.settings.normalizeWatermarks\r\n      ? 72\r\n      : 48\r\n\r\n    this.chartInstance.applyOptions({\r\n      layout: {\r\n        fontSize: 14 * multiplier\r\n      },\r\n      watermark: {\r\n        fontSize: watermarkBaseFontSize * multiplier\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * create indicator and register associated series\r\n   * @param {string} indicatorId indicator id\r\n   */\r\n  addIndicator(id, dependencyDepth?: number) {\r\n    if (this.getLoadedIndicator(id)) {\r\n      return true\r\n    }\r\n\r\n    if (dependencyDepth > 5) {\r\n      return false\r\n    }\r\n\r\n    // get indicator name, script, options ...\r\n    const indicatorSettings = store.state[this.paneId].indicators[id]\r\n    const indicatorOptions = indicatorSettings.options || {}\r\n\r\n    console.debug(`[chart/${this.paneId}/addIndicator] adding ${id}`)\r\n\r\n    const indicator: LoadedIndicator = {\r\n      id,\r\n      options: JSON.parse(JSON.stringify(indicatorOptions)),\r\n      script: indicatorSettings.script,\r\n      model: null,\r\n      adapter: null,\r\n      silentAdapter: null,\r\n      apis: []\r\n    }\r\n\r\n    // build indicator\r\n    try {\r\n      this.prepareIndicator(indicator)\r\n    } catch (error) {\r\n      // handle dependency issue (resolveDependency adds required indicator(s) then try add this one again)\r\n      if (\r\n        error.status === 'indicator-required' &&\r\n        !this.resolveDependency(\r\n          indicator.id,\r\n          error.serieId,\r\n          dependencyDepth || 0\r\n        )\r\n      ) {\r\n        dialogService.confirm({\r\n          message: `\"${indicator.id}\" indicator need the \"${error.serieId}\" serie but that one WAS NOT found anywhere in the current indicators.`,\r\n          ok: 'I see',\r\n          cancel: false\r\n        })\r\n      }\r\n\r\n      if (!error.status && !dialogService.isDialogOpened('indicator')) {\r\n        dialogService.openIndicator(this.paneId, indicator.id)\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    // build complete\r\n    this.loadedIndicators.push(indicator)\r\n\r\n    return true\r\n  }\r\n\r\n  resolveDependency(\r\n    originalIndicatorId: string,\r\n    missingSerieId: string,\r\n    dependencyDepth: number\r\n  ) {\r\n    // serie was not found in active indicators\r\n    // first we loop through pane indicators, maybe order of add is incorrect\r\n    const indicators = (store.state[this.paneId] as ChartPaneState).indicators\r\n\r\n    for (const otherIndicatorId in indicators) {\r\n      if (\r\n        otherIndicatorId === originalIndicatorId ||\r\n        !indicators[otherIndicatorId].series\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      if (indicators[otherIndicatorId].series.indexOf(missingSerieId) !== -1) {\r\n        // found missing indicator\r\n        // add missing indicator (otherIndicatorId) that seems to contain the missing serie (missingSerieId)\r\n        /*if (indicators[otherIndicatorId].options.visible === false) {\r\n          this.setIndicatorOption(otherIndicatorId, 'visible', true, true)\r\n        } else*/ if (\r\n          this.addIndicator(otherIndicatorId, dependencyDepth + 1)\r\n        ) {\r\n          if (dependencyDepth === 0) {\r\n            // finaly add original indicator\r\n            this.addIndicator(originalIndicatorId, dependencyDepth + 1)\r\n          }\r\n\r\n          return true\r\n        } else {\r\n          return false\r\n          // too many dependencies\r\n        }\r\n      }\r\n    }\r\n\r\n    if (indicators[missingSerieId]) {\r\n      if (\r\n        this.addIndicator(indicators[missingSerieId].id, dependencyDepth + 1)\r\n      ) {\r\n        if (dependencyDepth === 0) {\r\n          this.addIndicator(originalIndicatorId, dependencyDepth + 1)\r\n        }\r\n\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * build indicator and create own series instances from Lightweight Charts\r\n   * @param indicator\r\n   */\r\n  prepareIndicator(indicator: LoadedIndicator) {\r\n    try {\r\n      const result = this.serieBuilder.build(\r\n        indicator,\r\n        this.seriesIndicatorsMap,\r\n        this.paneId\r\n      )\r\n\r\n      if (store.state[this.paneId].indicatorsErrors[indicator.id]) {\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: null\r\n        })\r\n      }\r\n\r\n      indicator.model = result\r\n\r\n      if (indicator.options.visible !== false) {\r\n        this.createIndicatorSeries(indicator)\r\n      }\r\n    } catch (error) {\r\n      if (indicator.options.visible !== false) {\r\n        console.error(\r\n          `[chart/${this.paneId}/prepareIndicator] transpilation failed`\r\n        )\r\n        console.error(`\\t->`, error)\r\n\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: error.message\r\n        })\r\n\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * attach indicator copy of indicator model (incl. states of variables and functions)\r\n   * @param {LoadedIndicator} indicator\r\n   * @param {Renderer} renderer\r\n   * @returns\r\n   */\r\n  bindIndicator(indicator: LoadedIndicator, renderer: Renderer) {\r\n    if (\r\n      !renderer ||\r\n      typeof renderer.indicators[indicator.id] !== 'undefined' ||\r\n      !indicator.model\r\n    ) {\r\n      return\r\n    }\r\n\r\n    renderer.indicators[\r\n      indicator.id\r\n    ] = this.serieBuilder.getRendererIndicatorData(indicator)\r\n\r\n    if (!this.activeRenderer || renderer === this.activeRenderer) {\r\n      // update indicator series with plotoptions\r\n      for (\r\n        let i = 0;\r\n        i < renderer.indicators[indicator.id].plotsOptions.length;\r\n        i++\r\n      ) {\r\n        indicator.apis[i].applyOptions(\r\n          renderer.indicators[indicator.id].plotsOptions[i]\r\n        )\r\n      }\r\n\r\n      // create function ready to calculate (& render) everything for this indicator\r\n      indicator.adapter = this.serieBuilder.getAdapter(indicator.model.output)\r\n      indicator.silentAdapter = this.serieBuilder.getAdapter(\r\n        indicator.model.silentOutput\r\n      )\r\n    }\r\n\r\n    this.prepareRendererForIndicators(indicator, renderer)\r\n\r\n    return indicator\r\n  }\r\n\r\n  /**\r\n   * detach serie from renderer\r\n   * @param {LoadedIndicator} indicator\r\n   * @param {Renderer} renderer\r\n   */\r\n  unbindIndicator(indicator, renderer) {\r\n    if (!renderer || typeof renderer.indicators[indicator.id] === 'undefined') {\r\n      return\r\n    }\r\n\r\n    delete renderer.indicators[indicator.id]\r\n  }\r\n\r\n  ensurePriceScale(priceScaleId: string, indicator: LoadedIndicator) {\r\n    if (this.priceScales.indexOf(priceScaleId) !== -1) {\r\n      // chart already knows about that price scale (and doesn't need update)\r\n      return\r\n    } else {\r\n      // register pricescale\r\n      this.priceScales.push(priceScaleId)\r\n    }\r\n\r\n    let priceScale: TV.PriceScaleOptions | any =\r\n      store.state[this.paneId].priceScales[priceScaleId]\r\n\r\n    if (!priceScale) {\r\n      // create default price scale\r\n      priceScale = {}\r\n\r\n      if (indicator && indicator.options.scaleMargins) {\r\n        // use indicator priceScale\r\n        priceScale.scaleMargins = indicator.options.scaleMargins\r\n      } else {\r\n        priceScale.scaleMargins = {\r\n          top: 0.1,\r\n          bottom: 0.2\r\n        }\r\n      }\r\n\r\n      // save it\r\n      store.commit(this.paneId + '/SET_PRICE_SCALE', {\r\n        id: priceScaleId,\r\n        priceScale\r\n      })\r\n    }\r\n\r\n    this.refreshPriceScale(priceScaleId)\r\n  }\r\n\r\n  resetPriceScales() {\r\n    for (let i = 0; i < this.priceScales.length; i++) {\r\n      this.chartInstance.priceScale(this.priceScales[i]).applyOptions({\r\n        autoScale: true\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * deactivate indicator and remove it from chart controller\r\n   * @param {LoadedIndicator} indicator\r\n   */\r\n  removeIndicator(indicator: LoadedIndicator) {\r\n    if (typeof indicator === 'string') {\r\n      indicator = this.getLoadedIndicator(indicator)\r\n    }\r\n\r\n    if (!indicator) {\r\n      return\r\n    }\r\n\r\n    this.removeIndicatorSeries(indicator)\r\n\r\n    // remove from active series model\r\n    this.loadedIndicators.splice(this.loadedIndicators.indexOf(indicator), 1)\r\n  }\r\n\r\n  /**\r\n   * clear all rendered data on chart (empty the chart)\r\n   */\r\n  clearChart(triggerPan?: boolean) {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear chart (all series emptyed)`\r\n    )\r\n\r\n    if (!triggerPan) {\r\n      this.preventPan()\r\n    }\r\n\r\n    for (const indicator of this.loadedIndicators) {\r\n      this.clearIndicatorSeries(indicator)\r\n    }\r\n\r\n    this.renderedRange.from = this.renderedRange.to = null\r\n  }\r\n\r\n  /**\r\n   * remove active renderer and incoming data\r\n   * only use when chart indicators are cleared\r\n   */\r\n  clearData() {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear data (activeRenderer+activeChunk+queuedTrades1)`\r\n    )\r\n\r\n    this.activeRenderer = null\r\n    this.activeChunk = null\r\n    this.queuedTrades.splice(0, this.queuedTrades.length)\r\n  }\r\n\r\n  /**\r\n   * Remove chart price lines (of given indicators if passed)\r\n   * @param indicatorsIds\r\n   */\r\n  clearPriceLines(indicatorsIds?: string[]) {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (\r\n        indicatorsIds &&\r\n        indicatorsIds.indexOf(this.loadedIndicators[i].id) === -1\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      if (this._priceIndicatorId === this.loadedIndicators[i].id) {\r\n        this._alertsRendered = false\r\n      }\r\n\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        this.loadedIndicators[i].apis[j].removeAllPriceLines()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fresh start : clear cache, renderer and rendered series on chart\r\n   */\r\n  clear() {\r\n    console.log(\r\n      `[chart/${this.paneId}/controller] clear all (cache+activedata+chart)`\r\n    )\r\n\r\n    this.chartCache.clear()\r\n    this.clearData()\r\n    this.clearChart()\r\n\r\n    this.setTimeframe(store.state[this.paneId].timeframe)\r\n\r\n    // starting from here the chart will only develop using realtime api\r\n    // market will get priced once a trade is done: can take some time to get \"true price\" of aggregated markets\r\n    // we use this to re-render the whole chart with all initial prices everytime a market get priced first time\r\n    // if a fetch adds historical data after this present fucntion, propagateInitialPrices will be set to false\r\n    this.propagateInitialPrices = true\r\n  }\r\n\r\n  resample(timeframe: number) {\r\n    console.log(`[chart/${this.paneId}/controller] resample to ${timeframe}`)\r\n\r\n    const activeRendererTimestamp = floorTimestampToTimeframe(\r\n      this.activeRenderer.timestamp,\r\n      timeframe\r\n    )\r\n\r\n    const activeChunk = this.getActiveChunk()\r\n\r\n    if (activeChunk) {\r\n      for (const source in this.activeRenderer.sources) {\r\n        if (this.activeRenderer.sources[source].empty === false) {\r\n          activeChunk.bars.push(\r\n            this.cloneSourceBar(\r\n              this.activeRenderer.sources[source],\r\n              activeRendererTimestamp\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setTimeframe(timeframe)\r\n\r\n    if (!this.chartCache.chunks.length) {\r\n      return\r\n    }\r\n\r\n    const newBar = (source, destination, timestamp) => {\r\n      if (typeof source.close === 'number') {\r\n        destination.open = destination.high = destination.low = destination.close =\r\n          source.close\r\n      } else if (\r\n        typeof destination.close === 'undefined' ||\r\n        destination.close === null\r\n      ) {\r\n        destination.open = destination.high = destination.low = destination.close = null\r\n\r\n        destination.vbuy = 0\r\n        destination.vsell = 0\r\n        destination.cbuy = 0\r\n        destination.csell = 0\r\n        destination.lbuy = 0\r\n        destination.lsell = 0\r\n      }\r\n\r\n      destination.timestamp = timestamp\r\n\r\n      return destination\r\n    }\r\n\r\n    const markets = {}\r\n\r\n    for (let i = 0; i < this.chartCache.chunks.length; i++) {\r\n      for (let j = 0; j < this.chartCache.chunks[i].bars.length; j++) {\r\n        const bar = this.chartCache.chunks[i].bars[j]\r\n\r\n        const market = bar.exchange + ':' + bar.pair\r\n\r\n        const barTimestamp = floorTimestampToTimeframe(\r\n          bar.timestamp,\r\n          this.timeframe,\r\n          this.isOddTimeframe\r\n        )\r\n\r\n        if (!markets[market] || markets[market].timestamp < barTimestamp) {\r\n          if (markets[market]) {\r\n            markets[market] = newBar(markets[market], bar, barTimestamp)\r\n          } else {\r\n            markets[market] = newBar({}, bar, barTimestamp)\r\n          }\r\n          continue\r\n        }\r\n\r\n        if (typeof markets[market].open === null) {\r\n          markets[market].open = bar.open\r\n          markets[market].high = bar.high\r\n          markets[market].low = bar.low\r\n          markets[market].close = bar.close\r\n        }\r\n\r\n        markets[market].vbuy += bar.vbuy\r\n        markets[market].vsell += bar.vsell\r\n        markets[market].cbuy += bar.cbuy\r\n        markets[market].csell += bar.csell\r\n        markets[market].lbuy += bar.lbuy\r\n        markets[market].lsell += bar.lsell\r\n        markets[market].close = bar.close\r\n        markets[market].high = Math.max(\r\n          markets[market].high,\r\n          bar.high,\r\n          bar.open,\r\n          bar.close\r\n        )\r\n        markets[market].low = Math.min(\r\n          markets[market].low,\r\n          bar.low,\r\n          bar.open,\r\n          bar.close\r\n        )\r\n\r\n        this.chartCache.chunks[i].bars.splice(j--, 1)\r\n      }\r\n\r\n      if (i && this.chartCache.chunks[i].bars.length < MAX_BARS_PER_CHUNKS) {\r\n        if (this.chartCache.chunks[i].bars.length) {\r\n          const available =\r\n            MAX_BARS_PER_CHUNKS - this.chartCache.chunks[i - 1].bars.length\r\n\r\n          if (available) {\r\n            this.chartCache.chunks[i - 1].bars = this.chartCache.chunks[\r\n              i - 1\r\n            ].bars.concat(this.chartCache.chunks[i].bars.splice(0, available))\r\n          }\r\n        }\r\n\r\n        if (!this.chartCache.chunks[i].bars.length) {\r\n          this.chartCache.chunks.splice(i, 1)\r\n          i--\r\n        }\r\n      }\r\n    }\r\n\r\n    this.activeRenderer = null\r\n\r\n    this.renderAll()\r\n  }\r\n\r\n  getActiveChunk() {\r\n    if (\r\n      !this.activeChunk &&\r\n      this.chartCache.cacheRange.to === this.activeRenderer.timestamp\r\n    ) {\r\n      this.activeChunk = this.chartCache.chunks[\r\n        this.chartCache.chunks.length - 1\r\n      ]\r\n      this.activeChunk.active = true\r\n    } else {\r\n      if (this.activeChunk) {\r\n        this.activeChunk.active = false\r\n      }\r\n      this.activeChunk = this.chartCache.saveChunk({\r\n        from: this.activeRenderer.timestamp,\r\n        to: this.activeRenderer.timestamp,\r\n        active: true,\r\n        rendered: true,\r\n        bars: []\r\n      })\r\n    }\r\n\r\n    return this.activeChunk\r\n  }\r\n\r\n  /**\r\n   * clear everything\r\n   */\r\n  destroy() {\r\n    console.log(`[chart/${this.paneId}/controller] destroy`)\r\n\r\n    this.chartCache.clear()\r\n    this.clearData()\r\n    this.clearChart()\r\n    this.removeChart()\r\n    this.clearQueue()\r\n\r\n    aggregatorService.off('decimals', this._refreshDecimalsHandler)\r\n  }\r\n\r\n  /**\r\n   * @param {LoadedIndicator} indicator indicator owning series\r\n   */\r\n  clearIndicatorSeries(indicator: LoadedIndicator) {\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      indicator.apis[i].removeAllPriceLines()\r\n      indicator.apis[i].setData([])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * start queuing next trades\r\n   */\r\n  setupQueue() {\r\n    if (this._releaseQueueInterval) {\r\n      return\r\n    }\r\n\r\n    if (!store.state[this.paneId].refreshRate) {\r\n      this._releaseQueueInterval = requestAnimationFrame(this._queueHandler)\r\n      return\r\n    }\r\n\r\n    console.debug(\r\n      `[chart/${this.paneId}/controller] setup queue (${getHms(\r\n        store.state[this.paneId].refreshRate\r\n      )})`\r\n    )\r\n\r\n    this._releaseQueueInterval = setInterval(\r\n      this._queueHandler,\r\n      store.state[this.paneId].refreshRate\r\n    )\r\n  }\r\n\r\n  /**\r\n   * release queue and stop queuing next trades (stops all timers handling realtime data)\r\n   * called when chart refresh rate changes (followed by setupQueue with new refresh rate)\r\n   */\r\n  clearQueue() {\r\n    if (!this._releaseQueueInterval) {\r\n      return\r\n    }\r\n\r\n    console.log(`[chart/${this.paneId}/controller] clear queue`)\r\n\r\n    clearInterval(this._releaseQueueInterval)\r\n    cancelAnimationFrame(this._releaseQueueInterval)\r\n    delete this._releaseQueueInterval\r\n\r\n    this.releaseQueue()\r\n  }\r\n\r\n  /**\r\n   * pull trades from queue and render them immediately\r\n   */\r\n  releaseQueue() {\r\n    if (!this.queuedTrades.length) {\r\n      return\r\n    }\r\n\r\n    this.renderRealtimeTrades(this.queuedTrades)\r\n    this.queuedTrades.splice(0, this.queuedTrades.length)\r\n  }\r\n\r\n  /**\r\n   * push a set of trades to queue in order to render them later\r\n   * @param {Trades[]} trades\r\n   */\r\n  queueTrades(trades) {\r\n    Array.prototype.push.apply(this.queuedTrades, trades)\r\n\r\n    if (!store.state[this.paneId].refreshRate) {\r\n      this._releaseQueueInterval = requestAnimationFrame(this._queueHandler)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * take a set of trades, group them into bars while using activeRenderer for reference and render them\r\n   * also cache finished bar\r\n   * @param {Trade[]} trades trades to render\r\n   */\r\n  renderRealtimeTrades(trades) {\r\n    if (!trades.length) {\r\n      return\r\n    }\r\n\r\n    let redrawRequired = false\r\n\r\n    for (let i = 0; i < trades.length; i++) {\r\n      const trade = trades[i]\r\n      const identifier = trade.exchange + ':' + trade.pair\r\n\r\n      if (typeof this.markets[identifier] === 'undefined') {\r\n        continue\r\n      }\r\n\r\n      let timestamp\r\n      if (this.activeRenderer) {\r\n        if (this.activeRenderer.type === 'time') {\r\n          timestamp = floorTimestampToTimeframe(\r\n            trade.timestamp / 1000,\r\n            this.timeframe,\r\n            this.isOddTimeframe\r\n          )\r\n        } else {\r\n          if (\r\n            this.activeRenderer.bar.cbuy + this.activeRenderer.bar.csell >=\r\n            this.timeframe\r\n          ) {\r\n            timestamp = Math.max(\r\n              this.activeRenderer.timestamp + 0.001,\r\n              Math.round(trade.timestamp / 1000)\r\n            )\r\n          } else {\r\n            timestamp = this.activeRenderer.timestamp\r\n          }\r\n        }\r\n      } else {\r\n        timestamp = trade.timestamp / 1000\r\n      }\r\n\r\n      if (!this.activeRenderer || this.activeRenderer.timestamp < timestamp) {\r\n        if (this.activeRenderer) {\r\n          if (\r\n            !this.activeChunk ||\r\n            (this.activeChunk.to < this.activeRenderer.timestamp &&\r\n              this.activeChunk.bars.length >= MAX_BARS_PER_CHUNKS)\r\n          ) {\r\n            // ensure active chunk is created and ready to receive bars\r\n            this.getActiveChunk()\r\n          }\r\n\r\n          if (!this.activeRenderer.bar.empty) {\r\n            this.updateBar(this.activeRenderer)\r\n          }\r\n\r\n          // feed activeChunk with active bar exchange snapshot\r\n          for (const source in this.activeRenderer.sources) {\r\n            if (this.activeRenderer.sources[source].empty === false) {\r\n              this.activeChunk.bars.push(\r\n                this.cloneSourceBar(\r\n                  this.activeRenderer.sources[source],\r\n                  this.activeRenderer.timestamp\r\n                )\r\n              )\r\n            }\r\n          }\r\n\r\n          this.activeChunk.to = this.chartCache.cacheRange.to = this.activeRenderer.timestamp\r\n\r\n          if (this.renderedRange.to < this.activeRenderer.timestamp) {\r\n            this.renderedRange.to = this.activeRenderer.timestamp\r\n          }\r\n\r\n          this.nextBar(timestamp, this.activeRenderer)\r\n        } else {\r\n          this.activeRenderer = this.createRenderer(timestamp)\r\n        }\r\n      }\r\n\r\n      const amount = trade.price * trade.size\r\n\r\n      if (\r\n        !this.activeRenderer.sources[identifier] ||\r\n        typeof this.activeRenderer.sources[identifier].pair === 'undefined'\r\n      ) {\r\n        if (this.propagateInitialPrices) {\r\n          this.chartCache.initialPrices[identifier] = {\r\n            exchange: trade.exchange,\r\n            pair: trade.pair,\r\n            price: trade.price\r\n          }\r\n\r\n          if (!redrawRequired) {\r\n            redrawRequired = true\r\n          }\r\n        }\r\n\r\n        this.activeRenderer.sources[identifier] = {\r\n          pair: trade.pair,\r\n          exchange: trade.exchange,\r\n          close: +trade.price,\r\n          active: this.markets[identifier].active\r\n        }\r\n\r\n        this.resetBar(this.activeRenderer.sources[identifier])\r\n      }\r\n\r\n      const isActive = this.markets[identifier].active\r\n\r\n      if (trade.liquidation) {\r\n        this.activeRenderer.sources[identifier]['l' + trade.side] += amount\r\n\r\n        this.activeRenderer.bar.empty = false\r\n\r\n        if (isActive) {\r\n          this.activeRenderer.bar['l' + trade.side] += amount\r\n        }\r\n\r\n        continue\r\n      }\r\n\r\n      this.activeRenderer.sources[identifier].close = +trade.price\r\n\r\n      if (this.activeRenderer.sources[identifier].empty) {\r\n        this.activeRenderer.sources[\r\n          identifier\r\n        ].open = this.activeRenderer.sources[\r\n          identifier\r\n        ].high = this.activeRenderer.sources[\r\n          identifier\r\n        ].low = this.activeRenderer.sources[identifier].close\r\n      } else {\r\n        this.activeRenderer.sources[identifier].high = Math.max(\r\n          this.activeRenderer.sources[identifier].high,\r\n          this.activeRenderer.sources[identifier].close\r\n        )\r\n        this.activeRenderer.sources[identifier].low = Math.min(\r\n          this.activeRenderer.sources[identifier].low,\r\n          this.activeRenderer.sources[identifier].close\r\n        )\r\n      }\r\n\r\n      this.activeRenderer.sources[identifier]['c' + trade.side] += trade.count\r\n      this.activeRenderer.sources[identifier]['v' + trade.side] += amount\r\n\r\n      this.activeRenderer.sources[identifier].empty = false\r\n\r\n      if (isActive) {\r\n        this.activeRenderer.bar['v' + trade.side] += amount\r\n        this.activeRenderer.bar['c' + trade.side] += trade.count\r\n\r\n        this.activeRenderer.bar.empty = false\r\n      }\r\n    }\r\n\r\n    if (!this.activeRenderer) {\r\n      return\r\n    }\r\n\r\n    if (redrawRequired) {\r\n      this.renderAll()\r\n    } else if (!this.activeRenderer.bar.empty) {\r\n      this.updateBar(this.activeRenderer)\r\n\r\n      if (this.renderedRange.to < this.activeRenderer.timestamp) {\r\n        this.renderedRange.to = this.activeRenderer.timestamp\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create a new object from an existing bar\r\n   * to avoid reference when storing finished bar data to cache\r\n   * @param {Bar} bar do copy\r\n   * @param {number} [timestamp] apply timestamp to returned bar\r\n   */\r\n  cloneSourceBar(sourceBar, timestamp?: number): Bar {\r\n    return {\r\n      pair: sourceBar.pair,\r\n      exchange: sourceBar.exchange,\r\n      timestamp: timestamp || sourceBar.timestamp,\r\n      open: sourceBar.open,\r\n      high: sourceBar.high,\r\n      low: sourceBar.low,\r\n      close: sourceBar.close,\r\n      vbuy: sourceBar.vbuy,\r\n      vsell: sourceBar.vsell,\r\n      cbuy: sourceBar.cbuy,\r\n      csell: sourceBar.csell,\r\n      lbuy: sourceBar.lbuy,\r\n      lsell: sourceBar.lsell\r\n    }\r\n  }\r\n\r\n  /**\r\n   * then render indicatorsIds (or all if not specified) from new set of bars\r\n   * this replace data of series, erasing current data on chart\r\n   * if no indicatorsIds is specified, all indicators on chart are rendered from start to finish\r\n   * then merge indicator's states from temporary renderer used to render all thoses bars into activeRenderer\r\n   *\r\n   * @param {Bar[]} bars bars to render\r\n   * @param {string[]} indicatorsId id of indicators to render\r\n   * @param {boolean} refreshInitialPrices\r\n   */\r\n  renderBars(\r\n    bars,\r\n    indicatorsIds,\r\n    refreshInitialPrices?: boolean,\r\n    triggerPan?: boolean\r\n  ) {\r\n    if (bars.length) {\r\n      this.prependInitialPrices(bars, refreshInitialPrices)\r\n    }\r\n\r\n    this.clearPriceLines(indicatorsIds)\r\n\r\n    const computedSeries = {}\r\n    let from = null\r\n    let to = null\r\n\r\n    let temporaryRenderer: Renderer\r\n    let computedBar: any\r\n\r\n    if (!bars.length) {\r\n      if (\r\n        this.activeRenderer &&\r\n        this.activeRenderer.bar &&\r\n        !this.activeRenderer.bar.empty\r\n      ) {\r\n        bars = Object.values(this.activeRenderer.sources).filter(\r\n          bar => bar.empty === false\r\n        )\r\n      }\r\n\r\n      if (!bars.length) {\r\n        return\r\n      }\r\n    } else if (\r\n      this.activeRenderer &&\r\n      this.activeRenderer.timestamp > bars[bars.length - 1].timestamp\r\n    ) {\r\n      const activeBars = Object.values(this.activeRenderer.sources).filter(\r\n        bar => bar.empty === false\r\n      )\r\n\r\n      for (let i = 0; i < activeBars.length; i++) {\r\n        const activeBar = activeBars[i]\r\n\r\n        activeBar.timestamp = this.activeRenderer.timestamp\r\n\r\n        for (let j = bars.length - 1; j >= 0; j--) {\r\n          const cachedBar = bars[j]\r\n\r\n          if (cachedBar.timestamp < this.activeRenderer.timestamp) {\r\n            bars.splice(j + 1, 0, activeBar)\r\n            activeBars.splice(i, 1)\r\n            i--\r\n            break\r\n          } else if (\r\n            cachedBar.exchange === activeBar.exchange &&\r\n            cachedBar.pair === activeBar.pair\r\n          ) {\r\n            cachedBar.vbuy += activeBar.vbuy\r\n            cachedBar.vsell += activeBar.vsell\r\n            cachedBar.cbuy += activeBar.cbuy\r\n            cachedBar.csell += activeBar.csell\r\n            cachedBar.lbuy += activeBar.lbuy\r\n            cachedBar.lsell += activeBar.lsell\r\n            cachedBar.open = activeBar.open\r\n            cachedBar.high = activeBar.high\r\n            cachedBar.low = activeBar.low\r\n            cachedBar.close = activeBar.close\r\n            activeBars.splice(i, 1)\r\n            i--\r\n\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let barCount = 0\r\n\r\n    for (let i = 0; i <= bars.length; i++) {\r\n      const bar = bars[i]\r\n\r\n      if (\r\n        !bar ||\r\n        !temporaryRenderer ||\r\n        bar.timestamp > temporaryRenderer.timestamp\r\n      ) {\r\n        if (temporaryRenderer) {\r\n          if (temporaryRenderer.bar.empty && !this.fillGapsWithEmpty && bar) {\r\n            this.nextBar(bar.timestamp, temporaryRenderer)\r\n            continue\r\n          }\r\n\r\n          if (from === null) {\r\n            from = temporaryRenderer.timestamp\r\n          }\r\n\r\n          to = temporaryRenderer.timestamp\r\n\r\n          computedBar = this.computeBar(temporaryRenderer, indicatorsIds)\r\n\r\n          for (const id in computedBar) {\r\n            if (typeof computedSeries[id] === 'undefined') {\r\n              computedSeries[id] = []\r\n            }\r\n\r\n            computedSeries[id].push(computedBar[id])\r\n          }\r\n        }\r\n\r\n        if (!bar) {\r\n          break\r\n        }\r\n\r\n        barCount++\r\n\r\n        if (temporaryRenderer) {\r\n          if (this.fillGapsWithEmpty && temporaryRenderer.type === 'time') {\r\n            const missingBars =\r\n              (bar.timestamp -\r\n                temporaryRenderer.timeframe -\r\n                temporaryRenderer.timestamp) /\r\n              temporaryRenderer.timeframe\r\n\r\n            if (missingBars > 0) {\r\n              for (let j = 0; j < missingBars; j++) {\r\n                this.incrementRendererBar(temporaryRenderer)\r\n\r\n                for (const id in computedBar) {\r\n                  if (typeof computedSeries[id] === 'undefined') {\r\n                    computedSeries[id] = []\r\n                  }\r\n\r\n                  computedSeries[id].push({\r\n                    time: temporaryRenderer.localTimestamp\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.nextBar(bar.timestamp, temporaryRenderer)\r\n        } else {\r\n          temporaryRenderer = this.createRenderer(\r\n            bar.timestamp || this.activeRenderer.timestamp,\r\n            indicatorsIds\r\n          )\r\n        }\r\n      }\r\n\r\n      const marketKey = bar.exchange + ':' + bar.pair\r\n\r\n      const isActive = this.markets[marketKey].active\r\n\r\n      if (isActive && !bar.empty) {\r\n        temporaryRenderer.bar.empty = false\r\n        temporaryRenderer.bar.vbuy += bar.vbuy\r\n        temporaryRenderer.bar.vsell += bar.vsell\r\n        temporaryRenderer.bar.cbuy += bar.cbuy\r\n        temporaryRenderer.bar.csell += bar.csell\r\n        temporaryRenderer.bar.lbuy += bar.lbuy\r\n        temporaryRenderer.bar.lsell += bar.lsell\r\n      }\r\n\r\n      temporaryRenderer.sources[marketKey] = this.cloneSourceBar(bar)\r\n      temporaryRenderer.sources[marketKey].empty = false\r\n      temporaryRenderer.sources[marketKey].active = isActive\r\n    }\r\n    if (this.activeRenderer) {\r\n      this.activeRenderer.bar = temporaryRenderer.bar\r\n      for (const id in temporaryRenderer.indicators) {\r\n        this.activeRenderer.indicators[id] = temporaryRenderer.indicators[id]\r\n      }\r\n      for (const id in temporaryRenderer.sources) {\r\n        this.activeRenderer.sources[id] = temporaryRenderer.sources[id]\r\n      }\r\n    } else {\r\n      this.activeRenderer = temporaryRenderer\r\n    }\r\n\r\n    let scrollPosition: number\r\n\r\n    if (!indicatorsIds || !indicatorsIds.length) {\r\n      this.activeRenderer.length = barCount\r\n      // whole chart was rendered from start to finish\r\n\r\n      scrollPosition = this.chartInstance.timeScale().scrollPosition()\r\n      if (!bars.length) {\r\n        this.renderedRange.from = this.renderedRange.to = null\r\n      } else {\r\n        this.renderedRange.from = from\r\n        this.renderedRange.to = to\r\n      }\r\n    }\r\n    this.replaceData(computedSeries, triggerPan)\r\n\r\n    if (scrollPosition) {\r\n      this.chartInstance.timeScale().scrollToPosition(scrollPosition, false)\r\n    }\r\n\r\n    this.renderAlerts()\r\n  }\r\n\r\n  prependInitialPrices(bars: Bar[], refreshInitialPrices: boolean) {\r\n    const remainingInitialMarkets = Object.keys(this.markets).filter(\r\n      name => this.markets[name].historical\r\n    )\r\n\r\n    const maxLookback = 100 * remainingInitialMarkets.length\r\n\r\n    if (this.propagateInitialPrices) {\r\n      const initialTimestamp = bars[0].timestamp\r\n\r\n      if (refreshInitialPrices) {\r\n        for (let i = 0; i < bars.length; i++) {\r\n          const market = bars[i].exchange + ':' + bars[i].pair\r\n          let index\r\n\r\n          if (refreshInitialPrices) {\r\n            if (bars[i].timestamp <= initialTimestamp) {\r\n              if ((index = remainingInitialMarkets.indexOf(market)) !== -1) {\r\n                remainingInitialMarkets.splice(index, 1)\r\n              }\r\n              continue\r\n            } else if (\r\n              (index = remainingInitialMarkets.indexOf(market)) !== -1\r\n            ) {\r\n              this.chartCache.initialPrices[market] = {\r\n                exchange: bars[i].exchange,\r\n                pair: bars[i].pair,\r\n                price: bars[i].close\r\n              }\r\n              remainingInitialMarkets.splice(index, 1)\r\n            } else if (!remainingInitialMarkets.length || i > maxLookback) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const market in this.chartCache.initialPrices) {\r\n        const price = this.chartCache.initialPrices[market].price\r\n        const exchange = this.chartCache.initialPrices[market].exchange\r\n        const pair = this.chartCache.initialPrices[market].pair\r\n        const bar = this.resetBar({\r\n          timestamp: initialTimestamp,\r\n          exchange: exchange,\r\n          pair: pair,\r\n          open: price,\r\n          high: price,\r\n          low: price,\r\n          close: price\r\n        })\r\n\r\n        bars.unshift(bar)\r\n      }\r\n    }\r\n  }\r\n\r\n  removeIndicatorSeries(indicator) {\r\n    // remove from chart instance (derender)\r\n    for (let i = 0; i < indicator.apis.length; i++) {\r\n      this.chartInstance.removeSeries(indicator.apis[i])\r\n      indicator.apis.splice(i--, 1)\r\n    }\r\n\r\n    // unbind from activebar (remove serie meta data like sma memory etc)\r\n    this.unbindIndicator(indicator, this.activeRenderer)\r\n\r\n    const isPriceScaleDead =\r\n      typeof this.loadedIndicators.find(\r\n        i =>\r\n          i.id !== indicator.id &&\r\n          i.options.visible !== false &&\r\n          i.options.priceScaleId === indicator.options.priceScaleId\r\n      ) === 'undefined'\r\n\r\n    if (isPriceScaleDead) {\r\n      this.priceScales.splice(\r\n        this.priceScales.indexOf(indicator.options.priceScaleId),\r\n        1\r\n      )\r\n    }\r\n  }\r\n\r\n  createIndicatorSeries(indicator) {\r\n    const series = []\r\n\r\n    for (let i = 0; i < indicator.model.plots.length; i++) {\r\n      const plot = indicator.model.plots[i]\r\n      const apiMethodName = camelize('add-' + plot.type + '-series')\r\n      const customPlotOptions = this.serieBuilder.getCustomPlotOptions(\r\n        indicator,\r\n        plot\r\n      )\r\n      const serieOptions = {\r\n        ...defaultSerieOptions,\r\n        ...(defaultPlotsOptions[plot.type] || {}),\r\n        ...indicator.options,\r\n        ...customPlotOptions\r\n      }\r\n\r\n      if (serieOptions.scaleMargins) {\r\n        delete serieOptions.scaleMargins\r\n      }\r\n\r\n      const api = this.chartInstance[apiMethodName](\r\n        serieOptions\r\n      ) as IndicatorApi\r\n\r\n      api.id = plot.id\r\n\r\n      if (\r\n        serieOptions.priceFormat &&\r\n        typeof serieOptions.priceFormat.precision === 'number'\r\n      ) {\r\n        api.precision = serieOptions.priceFormat.precision\r\n      }\r\n\r\n      this.seriesIndicatorsMap[plot.id] = {\r\n        indicatorId: indicator.id,\r\n        plotIndex: i\r\n      }\r\n      series.push(plot.id)\r\n\r\n      indicator.apis.push(api)\r\n    }\r\n\r\n    store.commit(this.paneId + '/SET_INDICATOR_SERIES', {\r\n      id: indicator.id,\r\n      series\r\n    })\r\n\r\n    // ensure chart is aware of pricescale used by this indicator\r\n    this.ensurePriceScale(indicator.options.priceScaleId, indicator)\r\n\r\n    // attach indicator to active renderer\r\n    this.bindIndicator(indicator, this.activeRenderer)\r\n  }\r\n\r\n  refreshPriceScale(priceScaleId: string) {\r\n    const priceScale: PriceScaleSettings =\r\n      store.state[this.paneId].priceScales[priceScaleId]\r\n\r\n    this.chartInstance.priceScale(priceScaleId).applyOptions({\r\n      ...priceScale\r\n    })\r\n  }\r\n\r\n  /**\r\n   * disable \"fetch on pan\" until current operation (serie.update / serie.setData) is finished\r\n   */\r\n  preventPan() {\r\n    if (this.panPrevented) {\r\n      return\r\n    }\r\n\r\n    const delay = 100\r\n\r\n    if (typeof this._releasePanTimeout !== 'undefined') {\r\n      clearTimeout(this._releasePanTimeout)\r\n    }\r\n\r\n    this.panPrevented = true\r\n\r\n    this._releasePanTimeout = window.setTimeout(() => {\r\n      this.panPrevented = false\r\n    }, delay)\r\n  }\r\n\r\n  /**\r\n   * Renders all chunks\r\n   */\r\n  renderAll(refreshInitialPrices?: boolean, triggerPan?: boolean) {\r\n    if (!this.chartInstance) {\r\n      return\r\n    }\r\n\r\n    if (this._promiseOfMarkets) {\r\n      if (!this._promiseOfMarketsRender) {\r\n        this._promiseOfMarketsRender = this._promiseOfMarkets.then(() => {\r\n          this._promiseOfMarketsRender = null\r\n          this.renderAll(false, true)\r\n        })\r\n      }\r\n\r\n      return this._promiseOfMarketsRender\r\n    }\r\n\r\n    this.clearChart(triggerPan)\r\n\r\n    this.renderBars(\r\n      this.chartCache.chunks.length\r\n        ? this.chartCache.chunks.reduce(\r\n            (bars, chunk) => bars.concat(chunk.bars),\r\n            []\r\n          )\r\n        : [],\r\n      null,\r\n      refreshInitialPrices,\r\n      triggerPan\r\n    )\r\n  }\r\n\r\n  async retrieveAlerts() {\r\n    const indexes = Object.values(this.markets).reduce((acc, market) => {\r\n      if (acc.indexOf(market.index) === -1) {\r\n        acc.push(market.index)\r\n      }\r\n\r\n      return acc\r\n    }, [])\r\n\r\n    for (const index of Object.keys(this.alerts)) {\r\n      if (indexes.indexOf(index) === -1) {\r\n        delete this.alerts[index]\r\n      }\r\n    }\r\n\r\n    for (const index of indexes) {\r\n      if (this.alerts[index]) {\r\n        continue\r\n      }\r\n\r\n      this.alerts[index] = []\r\n\r\n      await workspacesService.getAlerts(index).then(alerts => {\r\n        for (let i = 0; i < alerts.length; i++) {\r\n          this.alerts[index].push(alerts[i])\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  renderAlerts() {\r\n    if (this._alertsRendered || !store.state.settings.alerts) {\r\n      return\r\n    }\r\n\r\n    const api = this.getPriceApi()\r\n\r\n    if (!api) {\r\n      return\r\n    }\r\n\r\n    for (const index in this.alerts) {\r\n      for (let i = 0; i < this.alerts[index].length; i++) {\r\n        this.renderAlert(this.alerts[index][i], api)\r\n      }\r\n    }\r\n\r\n    this._alertsRendered = true\r\n  }\r\n\r\n  triggerAlert(market: string, price: number) {\r\n    if (!this.alerts[market]) {\r\n      return\r\n    }\r\n\r\n    const alert = this.alerts[market].find(a => a.price === price)\r\n\r\n    if (alert) {\r\n      if (store.state.settings.alertSound) {\r\n        audioService.playOnce(store.state.settings.alertSound)\r\n      }\r\n\r\n      alert.triggered = true\r\n\r\n      const api = this.getPriceApi()\r\n      const priceline = api.getPriceLine(price)\r\n\r\n      if (priceline) {\r\n        api.removePriceLine(priceline)\r\n      }\r\n\r\n      this.renderAlert(alert, api)\r\n    }\r\n  }\r\n\r\n  renderAlert(alert: MarketAlert, api: TV.ISeriesApi<any>, color?: string) {\r\n    let index\r\n\r\n    if (alert.timestamp) {\r\n      const timestamp = floorTimestampToTimeframe(\r\n        alert.timestamp,\r\n        this.timeframe\r\n      )\r\n      index = this.chartInstance\r\n        .timeScale()\r\n        .coordinateToLogical(\r\n          this.chartInstance\r\n            .timeScale()\r\n            .timeToCoordinate(timestamp as TV.UTCTimestamp)\r\n        )\r\n    }\r\n\r\n    let title\r\n\r\n    if (alert.triggered) {\r\n      title = '✔'\r\n    }\r\n\r\n    return api.createPriceLine({\r\n      market: alert.market,\r\n      index,\r\n      price: alert.price,\r\n      color: color || store.state.settings.alertsColor,\r\n      lineWidth: store.state.settings.alertsLineWidth,\r\n      lineStyle: store.state.settings.alertsLineStyle,\r\n      title\r\n    } as any)\r\n  }\r\n\r\n  /**\r\n   * replace whole chart with a set of computed series bars\r\n   * @param {Bar[]} seriesData Lightweight Charts formated series\r\n   */\r\n  replaceData(\r\n    seriesData: {\r\n      [id: string]: (TV.LineData | TV.BarData | TV.HistogramData)[]\r\n    },\r\n    triggerPan?: boolean\r\n  ) {\r\n    if (!triggerPan) {\r\n      this.preventPan()\r\n    }\r\n\r\n    for (let i = this.loadedIndicators.length - 1; i >= 0; i--) {\r\n      if (this.loadedIndicators[i].options.visible === false) {\r\n        continue\r\n      }\r\n\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        const serieId = this.loadedIndicators[i].apis[j].id\r\n        if (seriesData[serieId]) {\r\n          try {\r\n            this.loadedIndicators[i].apis[j].setData(seriesData[serieId])\r\n          } catch (error) {\r\n            store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n              id: this.loadedIndicators[i].id,\r\n              error: error.message\r\n            })\r\n\r\n            this.setIndicatorOption(\r\n              this.loadedIndicators[i].id,\r\n              'visible',\r\n              false\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * excecute indicators, updating chart series with renderer's data\r\n   * @param renderer\r\n   */\r\n  updateBar(renderer: Renderer) {\r\n    this.preventPan()\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (this.loadedIndicators[i].options.visible === false) {\r\n        continue\r\n      }\r\n\r\n      const indicator = this.loadedIndicators[i]\r\n      const serieData = renderer.indicators[indicator.id]\r\n\r\n      if (serieData.canRender) {\r\n        this.loadedIndicators[i].adapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      } else {\r\n        this.loadedIndicators[i].silentAdapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * excecute indicators with renderer's data, and return series points\r\n   * this does not update series on chart (indicator.apisNoop is passed instead of indicator.apis)\r\n   * @param {Renderer} renderer\r\n   * @param {string[]} indicators id of indicators to execute (all indicators calculated if null)\r\n   * @returns series points\r\n   */\r\n  computeBar(\r\n    renderer: Renderer,\r\n    indicatorsIds?: string[]\r\n  ): { [serieId: string]: any } {\r\n    const points = {}\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      if (\r\n        (indicatorsIds &&\r\n          indicatorsIds.indexOf(this.loadedIndicators[i].id) === -1) ||\r\n        this.loadedIndicators[i].options.visible === false\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      const indicator = this.loadedIndicators[i]\r\n      const serieData = renderer.indicators[indicator.id]\r\n\r\n      serieData.series = []\r\n\r\n      try {\r\n        indicator.silentAdapter(\r\n          renderer,\r\n          serieData.functions,\r\n          serieData.variables,\r\n          indicator.apis,\r\n          indicator.options,\r\n          seriesUtils\r\n        )\r\n      } catch (error) {\r\n        store.commit(this.paneId + '/SET_INDICATOR_ERROR', {\r\n          id: indicator.id,\r\n          error: error.message\r\n        })\r\n\r\n        continue\r\n      }\r\n\r\n      for (let i = 0; i < serieData.series.length; i++) {\r\n        if (!indicator.model.plots[i]) {\r\n          break\r\n        }\r\n\r\n        if (\r\n          renderer.length < serieData.minLength ||\r\n          !serieData.series[i] ||\r\n          (typeof serieData.series[i].value !== 'undefined' &&\r\n            serieData.series[i].value === null) ||\r\n          (typeof serieData.series[i].lowerValue !== 'undefined' &&\r\n            serieData.series[i].lowerValue === null) ||\r\n          (indicator.model.plots[i].type === 'histogram' &&\r\n            serieData.series[i].value === 0)\r\n        ) {\r\n          continue\r\n        }\r\n        points[indicator.apis[i].id] = serieData.series[i]\r\n      }\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  getPriceApi() {\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n        const api = this.loadedIndicators[i].apis[j]\r\n\r\n        if (api.options().priceScaleId === 'right') {\r\n          this._priceIndicatorId = this.loadedIndicators[i].id\r\n\r\n          return api\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create empty renderer\r\n   * this is called on first realtime trade or when indicator(s) are rendered from start to finish\r\n   * @param {number} timestamp create at time\r\n   * @param {string[]} indicatorsIds id of indicators to bind (if null all indicators are binded)\r\n   */\r\n  createRenderer(firstBarTimestamp, indicatorsIds?: string[]) {\r\n    firstBarTimestamp = floorTimestampToTimeframe(\r\n      firstBarTimestamp,\r\n      this.timeframe\r\n    )\r\n\r\n    const renderer: Renderer = {\r\n      timestamp: firstBarTimestamp,\r\n      localTimestamp: firstBarTimestamp + this.timezoneOffset,\r\n      timeframe: this.timeframe,\r\n      type: this.type,\r\n      length: 1,\r\n      indicators: {},\r\n      sources: {},\r\n\r\n      bar: {\r\n        vbuy: 0,\r\n        vsell: 0,\r\n        cbuy: 0,\r\n        csell: 0,\r\n        lbuy: 0,\r\n        lsell: 0,\r\n        empty: true\r\n      }\r\n    }\r\n\r\n    this.loadedIndicators = this.loadedIndicators.sort((a, b) => {\r\n      const referencesA = a.model ? a.model.references.length : 0\r\n      const referencesB = b.model ? b.model.references.length : 0\r\n      return referencesA - referencesB\r\n    })\r\n\r\n    for (const indicator of this.loadedIndicators) {\r\n      if (\r\n        (indicatorsIds && indicatorsIds.indexOf(indicator.id) === -1) ||\r\n        indicator.options.visible === false\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      this.bindIndicator(indicator, renderer)\r\n    }\r\n\r\n    return renderer\r\n  }\r\n\r\n  /**\r\n   * prepare renderer for next bar\r\n   * @param {number} timestamp timestamp of the next bar\r\n   * @param {Renderer?} renderer bar to use as reference\r\n   */\r\n  nextBar(timestamp, renderer?: Renderer) {\r\n    if (\r\n      this.fillGapsWithEmpty &&\r\n      renderer === this.activeRenderer &&\r\n      this.activeRenderer.type === 'time' &&\r\n      this.activeRenderer.timestamp < timestamp - this.activeRenderer.timeframe\r\n    ) {\r\n      const missingBars =\r\n        (timestamp -\r\n          this.activeRenderer.timeframe -\r\n          this.activeRenderer.timestamp) /\r\n        this.activeRenderer.timeframe\r\n\r\n      for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n        for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n          for (let k = 0; k < missingBars; k++) {\r\n            if (i === 0 && j === 0) {\r\n              this.incrementRendererBar(renderer)\r\n            }\r\n\r\n            this.loadedIndicators[i].apis[j].update({\r\n              time: renderer.localTimestamp\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.incrementRendererBar(renderer)\r\n    this.resetRendererBar(renderer)\r\n\r\n    renderer.timestamp = timestamp\r\n    renderer.localTimestamp = timestamp + this.timezoneOffset\r\n  }\r\n\r\n  /**\r\n   * increment bar (1 timeframe forward)\r\n   * @param {Renderer} bar bar to clear for next timestamp\r\n   */\r\n  incrementRendererBar(renderer: Renderer) {\r\n    renderer.length++\r\n    renderer.timestamp += renderer.timeframe\r\n    renderer.localTimestamp += renderer.timeframe\r\n\r\n    for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n      const rendererSerieData = renderer.indicators[this.loadedIndicators[i].id]\r\n\r\n      if (!rendererSerieData) {\r\n        continue\r\n      }\r\n\r\n      rendererSerieData.canRender =\r\n        renderer.length >= rendererSerieData.minLength\r\n\r\n      for (let f = 0; f < rendererSerieData.functions.length; f++) {\r\n        const instruction = rendererSerieData.functions[f]\r\n\r\n        if (typeof seriesUtils[instruction.name].next === 'function') {\r\n          seriesUtils[instruction.name].next(instruction)\r\n        }\r\n      }\r\n\r\n      for (let v = 0; v < rendererSerieData.variables.length; v++) {\r\n        const instruction = rendererSerieData.variables[v]\r\n\r\n        if (instruction.length > 1) {\r\n          instruction.state.unshift(instruction.state[0])\r\n\r\n          if (instruction.state.length > instruction.length) {\r\n            instruction.state.pop()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fresh start for the renderer bar (and all its sources / markets)\r\n   * @param {Renderer} bar bar to clear for next timestamp\r\n   */\r\n  resetRendererBar(renderer: Renderer) {\r\n    renderer.bar = {\r\n      vbuy: 0,\r\n      vsell: 0,\r\n      cbuy: 0,\r\n      csell: 0,\r\n      lbuy: 0,\r\n      lsell: 0,\r\n      empty: true\r\n    }\r\n\r\n    if (typeof renderer.sources !== 'undefined') {\r\n      for (const identifier in renderer.sources) {\r\n        this.resetBar(renderer.sources[identifier])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * preparing bar for next\r\n   * @param {Bar} bar\r\n   */\r\n  resetBar(bar: Bar) {\r\n    if (bar.close !== null) {\r\n      bar.open = bar.close\r\n      bar.high = bar.close\r\n      bar.low = bar.close\r\n    }\r\n\r\n    bar.vbuy = 0\r\n    bar.vsell = 0\r\n    bar.cbuy = 0\r\n    bar.csell = 0\r\n    bar.lbuy = 0\r\n    bar.lsell = 0\r\n    bar.empty = true\r\n\r\n    return bar\r\n  }\r\n\r\n  prepareRendererForIndicators(indicator: LoadedIndicator, renderer: Renderer) {\r\n    const markets = Object.keys(indicator.model.markets)\r\n\r\n    for (let j = 0; j < markets.length; j++) {\r\n      if (!renderer.sources[markets[j]]) {\r\n        renderer.sources[markets[j]] = {\r\n          open: null,\r\n          high: null,\r\n          low: null,\r\n          close: null\r\n        }\r\n      }\r\n\r\n      const keys = indicator.model.markets[markets[j]]\r\n\r\n      if (keys.length) {\r\n        for (let k = 0; k < keys.length; k++) {\r\n          if (\r\n            typeof renderer.sources[markets[j]][keys[k]] === 'undefined' &&\r\n            keys[k] !== 'open' &&\r\n            keys[k] !== 'high' &&\r\n            keys[k] !== 'low' &&\r\n            keys[k] !== 'close'\r\n          ) {\r\n            renderer.sources[markets[j]][keys[k]] = 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleFillGapsWithEmpty() {\r\n    this.fillGapsWithEmpty = !this.fillGapsWithEmpty\r\n\r\n    this.renderAll()\r\n  }\r\n\r\n  refreshAutoDecimals(indicatorId?: string) {\r\n    const chartMarkets = Object.keys(this.markets)\r\n    const pricedMarket = Object.keys(marketDecimals).find(\r\n      market => chartMarkets.indexOf(market) !== -1\r\n    )\r\n\r\n    if (pricedMarket) {\r\n      const precision = marketDecimals[pricedMarket]\r\n\r\n      for (let i = 0; i < this.loadedIndicators.length; i++) {\r\n        if (indicatorId && indicatorId !== this.loadedIndicators[i].id) {\r\n          continue\r\n        }\r\n\r\n        let priceFormat = this.loadedIndicators[i].options.priceFormat || {\r\n          type: 'price'\r\n        }\r\n\r\n        if (\r\n          !priceFormat.auto ||\r\n          priceFormat.type === 'volume' ||\r\n          priceFormat.precision === precision\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        priceFormat = {\r\n          ...priceFormat,\r\n          precision,\r\n          minMove: 1 / Math.pow(10, precision)\r\n        }\r\n\r\n        store.dispatch(this.paneId + '/setIndicatorOption', {\r\n          id: this.loadedIndicators[i].id,\r\n          key: 'priceFormat',\r\n          value: priceFormat,\r\n          silent: true\r\n        })\r\n\r\n        for (let j = 0; j < this.loadedIndicators[i].apis.length; j++) {\r\n          this.loadedIndicators[i].apis[j].applyOptions({\r\n            priceFormat\r\n          })\r\n\r\n          this.loadedIndicators[i].apis[j].precision = precision\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get price api, index & price at a point on the chart\r\n   * Return the priceline if found at price\r\n   * @param {MouseEvent | TouchEvent} event\r\n   * @returns {{\r\n   *  originalOffset: {x: number, y: number},\r\n   *  offset: {x?: number, y?: number},\r\n   *  priceline: TV.IPriceLine | null,\r\n   *  api: IndicatorApi,\r\n   *  price: number,\r\n   *  market: string,\r\n   *  canCreate: boolean\r\n   * }}\r\n   */\r\n  getPricelineAtPoint(event) {\r\n    const originalOffset = getEventOffset(event)\r\n    const offset = {\r\n      x: originalOffset.x,\r\n      y: originalOffset.y\r\n    }\r\n\r\n    const api = this.getPriceApi()\r\n\r\n    if (!api) {\r\n      return\r\n    }\r\n\r\n    let price = api.coordinateToPrice(originalOffset.y) as number\r\n\r\n    if (!price) {\r\n      return\r\n    }\r\n\r\n    let priceline = api.getPriceLine(\r\n      price,\r\n      this.chartInstance.timeScale().coordinateToLogical(originalOffset.x)\r\n    )\r\n\r\n    let market\r\n\r\n    if (priceline) {\r\n      const priceLineOptions = priceline.options() as any\r\n      market = priceLineOptions.market\r\n\r\n      if (!priceLineOptions.market) {\r\n        priceline = null\r\n      } else {\r\n        market = priceLineOptions.market\r\n        price = priceLineOptions.price\r\n      }\r\n    }\r\n\r\n    if (!market) {\r\n      for (const marketKey in this.markets) {\r\n        if (\r\n          this.markets[marketKey].active &&\r\n          this.markets[marketKey].historical\r\n        ) {\r\n          market = this.markets[marketKey].index\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!market) {\r\n        market = Object.values(this.markets)[0].index\r\n      }\r\n    }\r\n\r\n    if (!priceline) {\r\n      price = +formatPrice(price, api.options().priceFormat.precision)\r\n    }\r\n\r\n    const canCreate =\r\n      store.state.settings.alerts &&\r\n      (event.shiftKey || store.state.settings.alertsClick)\r\n\r\n    return { api, price, market, priceline, canCreate, originalOffset, offset }\r\n  }\r\n\r\n  disableCrosshair() {\r\n    this.chartInstance.applyOptions({\r\n      crosshair: {\r\n        vertLine: {\r\n          color: 'transparent',\r\n          labelVisible: false\r\n        },\r\n        horzLine: {\r\n          color: 'transparent',\r\n          labelVisible: false\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  enableCrosshair() {\r\n    const chartColorOptions = getChartCustomColorsOptions()\r\n\r\n    this.chartInstance.applyOptions({\r\n      crosshair: {\r\n        vertLine: {\r\n          color: chartColorOptions.crosshair.vertLine.color,\r\n          labelVisible: true\r\n        },\r\n        horzLine: {\r\n          color: chartColorOptions.crosshair.horzLine.color,\r\n          labelVisible: true\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Bar } from '@/components/chart/chart'\nimport {\n  floorTimestampToTimeframe,\n  getApiUrl,\n  handleFetchError,\n  isOddTimeframe\n} from '@/utils/helpers'\nimport EventEmitter from 'eventemitter3'\n\nimport store from '../store'\nimport { parseMarket } from './productsService'\n\nexport interface HistoricalResponse {\n  from: number\n  to: number\n  data: Bar[]\n}\n\nclass HistoricalService extends EventEmitter {\n  url: string\n  promisesOfData: { [keyword: string]: Promise<HistoricalResponse> } = {}\n\n  constructor() {\n    super()\n\n    this.url = getApiUrl('historical')\n  }\n\n  filterOutUnavailableMarkets(markets: string[]) {\n    return markets.filter(\n      market => store.state.app.historicalMarkets.indexOf(market) !== -1\n    )\n  }\n\n  getApiUrl(from, to, timeframe, markets) {\n    const params = [from, to, (timeframe * 1000).toString()]\n\n    if (markets && markets.length) {\n      params.push(encodeURIComponent(markets.join('+')))\n    }\n\n    return `${this.url}/${params.join('/')}`\n  }\n\n  fetch(\n    from: number,\n    to: number,\n    timeframe: number,\n    markets: string[]\n  ): Promise<HistoricalResponse> {\n    const url = this.getApiUrl(from, to, timeframe, markets)\n\n    if (this.promisesOfData[url]) {\n      return this.promisesOfData[url]\n    }\n\n    store.commit('app/TOGGLE_LOADING', true)\n\n    this.promisesOfData[url] = fetch(url)\n      .then(response =>\n        response.json().then(json => {\n          json.status = response.status\n          return json\n        })\n      )\n      .then(json => {\n        if (!json || json.error) {\n          throw new Error(json && json.error ? json.error : 'empty-response')\n        }\n\n        if (!json.results.length) {\n          throw new Error('No more data')\n        }\n\n        if (json.format !== 'point') {\n          throw new Error('Bad data')\n        }\n\n        return this.normalizePoints(\n          json.results,\n          json.columns,\n          timeframe,\n          markets\n        )\n      })\n      .catch(err => {\n        handleFetchError(err)\n\n        throw err\n      })\n      .then(data => {\n        store.commit('app/TOGGLE_LOADING', false)\n        delete this.promisesOfData[url]\n\n        return data\n      })\n\n    return this.promisesOfData[url]\n  }\n  normalizePoints(data, columns, timeframe, markets: string[]) {\n    const lastClosedBars = {}\n\n    markets = markets.slice()\n\n    if (!data || !data.length) {\n      return data\n    }\n\n    // base timestamp of results\n    let firstBarTimestamp: number\n\n    if (Array.isArray(data[0])) {\n      firstBarTimestamp = data[0][0]\n    } else {\n      firstBarTimestamp = +new Date(data[0].time) / 1000\n    }\n\n    markets = [...markets]\n\n    const refs = {}\n\n    const isOdd = isOddTimeframe(timeframe)\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].time && data[i][0]) {\n        // new format is array, transform into objet\n        data[i] = {\n          time:\n            typeof columns['time'] !== 'undefined'\n              ? data[i][columns['time']]\n              : 0,\n          cbuy:\n            typeof columns['cbuy'] !== 'undefined'\n              ? data[i][columns['cbuy']]\n              : 0,\n          close:\n            typeof columns['close'] !== 'undefined'\n              ? data[i][columns['close']]\n              : 0,\n          csell:\n            typeof columns['csell'] !== 'undefined'\n              ? data[i][columns['csell']]\n              : 0,\n          high:\n            typeof columns['high'] !== 'undefined'\n              ? data[i][columns['high']]\n              : 0,\n          lbuy:\n            typeof columns['lbuy'] !== 'undefined'\n              ? data[i][columns['lbuy']]\n              : 0,\n          low:\n            typeof columns['low'] !== 'undefined' ? data[i][columns['low']] : 0,\n          lsell:\n            typeof columns['lsell'] !== 'undefined'\n              ? data[i][columns['lsell']]\n              : 0,\n          market:\n            typeof columns['market'] !== 'undefined'\n              ? data[i][columns['market']]\n              : 0,\n          open:\n            typeof columns['open'] !== 'undefined'\n              ? data[i][columns['open']]\n              : 0,\n          vbuy:\n            typeof columns['vbuy'] !== 'undefined'\n              ? data[i][columns['vbuy']]\n              : 0,\n          vsell:\n            typeof columns['vsell'] !== 'undefined'\n              ? data[i][columns['vsell']]\n              : 0\n        }\n        data[i].timestamp = data[i].time\n      } else {\n        // pending bar was sent\n        if (!lastClosedBars[data[i].market]) {\n          // get latest bar for that market\n          for (let j = i - 1; j >= 0; j--) {\n            if (data[j].market === data[i].market) {\n              lastClosedBars[data[i].market] = data[j]\n              break\n            }\n          }\n        }\n\n        // format pending bar time floored to timeframe\n        data[i].timestamp = floorTimestampToTimeframe(\n          data[i].time / 1000,\n          timeframe,\n          isOdd\n        )\n\n        if (\n          !lastClosedBars[data[i].market] ||\n          lastClosedBars[data[i].market].timestamp < data[i].timestamp\n        ) {\n          // store reference bar for this market (either because it didn't exist or because reference bar time is < than pending bar time)\n          lastClosedBars[data[i].market] = data[i]\n        } else if (lastClosedBars[data[i].market] !== data[i]) {\n          lastClosedBars[data[i].market].vbuy += data[i].vbuy\n          lastClosedBars[data[i].market].vsell += data[i].vsell\n          lastClosedBars[data[i].market].cbuy += data[i].cbuy\n          lastClosedBars[data[i].market].csell += data[i].csell\n          lastClosedBars[data[i].market].lbuy += data[i].lbuy\n          lastClosedBars[data[i].market].lsell += data[i].lsell\n          lastClosedBars[data[i].market].high = Math.max(\n            data[i].high,\n            lastClosedBars[data[i].market].high\n          )\n          lastClosedBars[data[i].market].low = Math.min(\n            data[i].low,\n            lastClosedBars[data[i].market].low\n          )\n          lastClosedBars[data[i].market].close = data[i].close\n\n          data.splice(i, 1)\n          i--\n          continue\n        }\n      }\n\n      if (typeof refs[data[i].market] !== 'number') {\n        refs[data[i].market] = data[i].open\n      }\n\n      if (data[i].timestamp === firstBarTimestamp) {\n        const marketIndex = markets.indexOf(data[i].market)\n\n        markets.splice(marketIndex, 1)\n      }\n\n      const [exchange, pair] = parseMarket(data[i].market)\n      data[i].exchange = exchange\n      data[i].pair = pair\n      delete data[i].time\n    }\n\n    return {\n      data,\n      markets,\n      from: data[0].timestamp,\n      to: data[data.length - 1].timestamp\n    }\n  }\n}\n\nexport default new HistoricalService()\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"chart-layout\",style:({\n    right: _vm.axis[0] + 'px',\n    bottom: _vm.axis[1] + 'px'\n  }),on:{\"dblclick\":function($event){return _vm.$store.commit(_vm.paneId + '/TOGGLE_LAYOUTING')}}},[_c('div',{staticClass:\"chart-layout__controls\"},[_c('button',{staticClass:\"btn -red -small\",attrs:{\"title\":\"Close menu while reverting chart layout to it's original state\"},on:{\"click\":_vm.cancel}},[_vm._v(\" Cancel \"),_c('i',{staticClass:\"icon-eraser ml4\"})]),_c('button',{staticClass:\"btn -green -small ml8\",attrs:{\"title\":\"Click if you finished rearranging the chart layout\"},on:{\"click\":function($event){return _vm.$store.commit(_vm.paneId + '/TOGGLE_LAYOUTING')}}},[_vm._v(\" Ok \"),_c('i',{staticClass:\"icon-check ml4\"})])]),_vm._l((_vm.activePriceScales),function(priceScale,id){return _c('chart-price-scale',{key:id,staticClass:\"chart-layout__item\",attrs:{\"paneId\":_vm.paneId,\"priceScaleId\":id,\"priceScale\":priceScale},on:{\"update\":function($event){return _vm.updatePriceScaleScaleMargins(id, $event)}}})})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"chart-pricescale\",class:{ '-active': !!_vm.currentSide },style:({ top: _vm.roundedTop + '%', bottom: _vm.roundedBottom + '%' })},[_c('div',{staticClass:\"chart-pricescale__content\"},[_c('div',{staticClass:\"chart-pricescale__title pane-overlay\",on:{\"mousedown\":_vm.handleMove,\"touchstart\":_vm.handleMove}},[_c('i',{staticClass:\"icon-move mr8\"}),_vm._v(\" \"+_vm._s(_vm.priceScale.indicators.join(', '))+\" \"),(_vm.priceScaleId === 'right')?_c('span',{directives:[{name:\"tippy\",rawName:\"v-tippy\"}],staticClass:\"ml4\",attrs:{\"title\":\"Main scale\"}},[_vm._v(\"👑\")]):_vm._e(),_c('dropdown-button',{staticClass:\"chart-pricescale__mode -text -small ml8 text-bold -arrow\",attrs:{\"options\":_vm.modes,\"placeholder\":\"linear\"},on:{\"input\":function($event){return _vm.updateMode($event)}},model:{value:(_vm.priceScale.mode),callback:function ($$v) {_vm.$set(_vm.priceScale, \"mode\", $$v)},expression:\"priceScale.mode\"}})],1),_c('div',{staticClass:\"chart-pricescale__size pane-overlay\",domProps:{\"textContent\":_vm._s(100 - _vm.roundedTop - _vm.roundedBottom + '%')}})]),_c('div',{staticClass:\"chart-pricescale__boundary -top\",class:{ '-active': _vm.currentSide === 'top' },on:{\"mousedown\":function($event){return _vm.handleResize($event, 'top')},\"touchstart\":function($event){return _vm.handleResize($event, 'top')}}}),_c('div',{staticClass:\"chart-pricescale__boundary -bottom\",class:{ '-active': _vm.currentSide === 'bottom' },on:{\"mousedown\":function($event){return _vm.handleResize($event, 'bottom')},\"touchstart\":function($event){return _vm.handleResize($event, 'bottom')}}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport { Component, Vue } from 'vue-property-decorator'\n\nimport { PriceScaleSettings } from '@/store/panesSettings/chart'\nimport { getEventCords, randomString } from '@/utils/helpers'\nimport DropdownButton from '@/components/framework/DropdownButton.vue'\n\n@Component({\n  name: 'ChartPriceScale',\n  components: {\n    DropdownButton\n  },\n  props: {\n    paneId: {\n      required: true\n    },\n    priceScaleId: {\n      required: true\n    },\n    priceScale: {\n      required: true\n    }\n  },\n  watch: {\n    'priceScale.scaleMargins.top': function() {\n      if (!this.currentMoveId) {\n        this.getSize()\n      }\n    },\n    'priceScale.scaleMargins.bottom': function() {\n      if (!this.currentMoveId) {\n        this.getSize()\n      }\n    }\n  }\n})\nexport default class extends Vue {\n  paneId: string\n  priceScaleId: string\n  priceScale: PriceScaleSettings\n\n  top: number = null\n  bottom: number = null\n  roundedTop: number = null\n  roundedBottom: number = null\n\n  currentMoveId: string = null\n  currentSide: 'top' | 'bottom' | 'both' = null\n  currentOrigin: number = null\n  currentContainerHeight: number = null\n\n  modes = {\n    0: 'Linear',\n    1: 'Logarithimic',\n    2: 'Percent',\n    3: 'Indexed to 100'\n  }\n\n  created() {\n    this.getSize()\n  }\n\n  beforeDestroy() {\n    this.release()\n  }\n\n  getSize() {\n    this.roundedTop = this.top = this.priceScale.scaleMargins.top * 100\n    this.roundedBottom = this.bottom = this.priceScale.scaleMargins.bottom * 100\n  }\n\n  handleResize(event: MouseEvent | TouchEvent, side: 'top' | 'bottom') {\n    if (this.currentMoveId) {\n      this.release()\n\n      return\n    }\n\n    this.start(side, getEventCords(event).y)\n\n    document.addEventListener('mousemove', this.resize)\n    document.addEventListener('mouseup', this.release)\n    document.addEventListener('touchmove', this.resize)\n    document.addEventListener('touchend', this.release)\n  }\n\n  resize(event: MouseEvent | TouchEvent) {\n    const percentMove = this.getPercentMove(event)\n\n    if (!percentMove) {\n      return\n    }\n\n    this[this.currentSide] +=\n      percentMove * (this.currentSide === 'top' ? 1 : -1)\n\n    this.updateScaleMargins(event)\n  }\n\n  handleMove(event: MouseEvent | TouchEvent) {\n    if (this.currentMoveId) {\n      this.release()\n\n      return\n    }\n\n    this.start('both', getEventCords(event).y)\n\n    document.addEventListener('mousemove', this.move)\n    document.addEventListener('mouseup', this.release)\n    document.addEventListener('touchmove', this.move)\n    document.addEventListener('touchend', this.release)\n  }\n\n  move(event: MouseEvent | TouchEvent) {\n    const percentMove = this.getPercentMove(event)\n\n    if (!percentMove) {\n      return\n    }\n\n    this.top += percentMove\n    this.bottom -= percentMove\n\n    this.updateScaleMargins(event)\n  }\n\n  release() {\n    if (!this.currentSide) {\n      return\n    }\n\n    if (this.currentSide !== 'both') {\n      document.removeEventListener('mousemove', this.resize)\n      document.removeEventListener('touchmove', this.resize)\n    } else {\n      document.removeEventListener('mousemove', this.move)\n      document.removeEventListener('touchmove', this.move)\n    }\n\n    document.removeEventListener('mouseup', this.release)\n    document.removeEventListener('touchend', this.release)\n\n    this.currentMoveId = null\n    this.currentSide = null\n\n    this.top = this.roundedTop\n    this.bottom = this.roundedBottom\n  }\n\n  updateScaleMargins(event) {\n    const top = Math.round(this.top)\n    const bottom = Math.round(this.bottom)\n\n    this.roundedTop = Math.max(0, Math.min(100 - bottom, top))\n    this.roundedBottom = Math.max(0, Math.min(bottom, 100 - top))\n\n    const scaleMargins = {\n      top: this.roundedTop / 100,\n      bottom: this.roundedBottom / 100\n    }\n\n    if (\n      this.priceScale.scaleMargins.top === scaleMargins.top &&\n      this.priceScale.scaleMargins.bottom === scaleMargins.bottom\n    ) {\n      return\n    }\n\n    this.$emit('update', {\n      id: this.currentMoveId,\n      side: this.currentSide,\n      value: scaleMargins,\n      syncable: event.type !== 'touchmove' && !event.shiftKey\n    })\n  }\n\n  updateMode(mode) {\n    this.priceScale.mode = +mode\n\n    this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n      id: this.priceScaleId,\n      priceScale: this.priceScale\n    })\n  }\n\n  getContainerHeight() {\n    const height = parseFloat(this.$el.parentElement.clientHeight as any)\n\n    return height\n  }\n\n  getPercentMove(event) {\n    const currentPosition = getEventCords(event)\n\n    const percent =\n      ((currentPosition.y - this.currentOrigin) / this.currentContainerHeight) *\n      100\n\n    if (!percent) {\n      return null\n    }\n\n    this.currentOrigin = currentPosition.y\n\n    return percent\n  }\n\n  start(side: 'top' | 'bottom' | 'both', origin: number) {\n    /* const siblings = (this.$el.parentElement.children as unknown) as HTMLElement[]\n\n    for (const el of siblings) {\n      if (el === this.$el) {\n        el.style.zIndex = '1'\n      } else {\n        el.style.zIndex = ''\n      }\n    } */\n\n    this.currentMoveId = randomString(8)\n    this.currentSide = side\n    this.currentOrigin = origin\n    this.currentContainerHeight = this.getContainerHeight()\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PriceScale.vue?vue&type=template&id=2cef81f0&\"\nimport script from \"./PriceScale.vue?vue&type=script&lang=ts&\"\nexport * from \"./PriceScale.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PriceScale.vue?vue&type=style&index=0&id=2cef81f0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { Component, Vue } from 'vue-property-decorator'\n\nimport { ChartPaneState, PriceScaleSettings } from '@/store/panesSettings/chart'\nimport ChartPriceScale from './PriceScale.vue'\n\n@Component({\n  components: { ChartPriceScale },\n  name: 'ChartLayout',\n  props: {\n    paneId: {\n      required: true\n    },\n    axis: {\n      required: true\n    },\n    layouting: {\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  paneId: string\n  layouting: string\n  unsyncableMoveId: string\n  axis: [number, number]\n  activePriceScales: { [id: string]: PriceScaleSettings }\n\n  private _originalActivePriceScales: { [id: string]: PriceScaleSettings }\n\n  created() {\n    this.getActivePriceScales()\n  }\n\n  mounted() {\n    document.body.classList.add('-unselectable')\n  }\n\n  beforeDestroy() {\n    document.body.classList.remove('-unselectable')\n  }\n\n  getActivePriceScales() {\n    const indicators = (this.$store.state[this.paneId] as ChartPaneState)\n      .indicators\n\n    this.activePriceScales = Object.keys(indicators).reduce(\n      (priceScales, indicatorId) => {\n        if (\n          typeof this.layouting === 'string' &&\n          indicatorId !== this.layouting\n        ) {\n          return priceScales\n        }\n        const priceScaleId = indicators[indicatorId].options.priceScaleId\n\n        if (!priceScales[priceScaleId]) {\n          priceScales[priceScaleId] = this.$store.state[\n            this.paneId\n          ].priceScales[priceScaleId]\n          priceScales[priceScaleId].indicators = []\n        }\n\n        priceScales[priceScaleId].indicators.push(indicators[indicatorId].name)\n\n        return priceScales\n      },\n      {}\n    )\n\n    this._originalActivePriceScales = JSON.parse(\n      JSON.stringify(this.activePriceScales)\n    )\n  }\n\n  updatePriceScaleScaleMargins(priceScaleId, event) {\n    if (event.syncable && this.unsyncableMoveId !== event.id) {\n      if (!this.syncMoveWithOthers(priceScaleId, event.side, event.value)) {\n        this.unsyncableMoveId = event.id\n      }\n    }\n\n    this.activePriceScales[priceScaleId].scaleMargins = event.value\n\n    this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n      id: priceScaleId,\n      priceScale: this.activePriceScales[priceScaleId]\n    })\n  }\n\n  syncMoveWithOthers(priceScaleId, side, scaleMargins): boolean {\n    const originalScaleMargins = this.activePriceScales[priceScaleId]\n      .scaleMargins\n\n    let hasSynced = false\n\n    for (const otherId in this.activePriceScales) {\n      if (priceScaleId === otherId) {\n        continue\n      }\n\n      const otherScaleMargins = this.activePriceScales[otherId].scaleMargins\n\n      if (\n        otherScaleMargins.top === originalScaleMargins.top &&\n        otherScaleMargins.bottom === originalScaleMargins.bottom\n      ) {\n        // sync overlapping\n\n        Vue.set(this.activePriceScales[otherId], 'scaleMargins', scaleMargins)\n\n        this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n          id: otherId,\n          priceScale: this.activePriceScales[otherId]\n        })\n\n        hasSynced = true\n      }\n    }\n\n    return hasSynced\n  }\n\n  cancel() {\n    for (const id in this._originalActivePriceScales) {\n      this.$store.commit(this.paneId + '/SET_PRICE_SCALE', {\n        id,\n        priceScale: this._originalActivePriceScales[id]\n      })\n    }\n\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING')\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Layout.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Layout.vue?vue&type=template&id=4a1ffafc&\"\nimport script from \"./Layout.vue?vue&type=script&lang=ts&\"\nexport * from \"./Layout.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Layout.vue?vue&type=style&index=0&id=4a1ffafc&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"timeframe-dropdown\"},[_c('div',{staticClass:\"dropdown-item timeframe-dropdown__header\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('timeframe-input',{staticClass:\"timeframe-dropdown__input\",attrs:{\"placeholder\":\"enter tf.\"},on:{\"input\":_vm.onInput,\"submit\":_vm.addTimeframe}}),(_vm.typeaheadTimeframe && _vm.typeaheadTimeframe.value)?_c('div',{staticClass:\"text-nowrap text-monospace text-muted\"},[_vm._v(\" ~ \"+_vm._s(_vm.typeaheadTimeframe.label)+\" \")]):_vm._e(),_c('button',{staticClass:\"btn -text\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.toggleEdit}},[_c('i',{class:_vm.editing ? 'icon-cross' : 'icon-edit'})])],1),_vm._l((_vm.groups),function(group){return _c('section',{key:group.title,staticClass:\"section section--small\"},[(_vm.timeframeGroups.indexOf(group.title) !== -1)?_c('div',{staticClass:\"section__content\"},_vm._l((group.timeframes),function(timeframe){return _c('button',{key:timeframe.value,staticClass:\"dropdown-item dropdown-item--space-between\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('timeframe', timeframe.value)}}},[_c('span',[_vm._v(_vm._s(timeframe.label))]),(_vm.editing)?_c('i',{staticClass:\"icon-trash\",on:{\"click\":function($event){$event.stopPropagation();return _vm.removeTimeframe(timeframe.value)}}}):_c('i',{staticClass:\"icon-star\",class:{ 'icon-star-filled': _vm.favoriteTimeframes[timeframe.value] },on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleFavoriteTimeframe(timeframe.value)}}})])}),0):_vm._e(),_c('div',{staticClass:\"section__title\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleGroup(group)}}},[_vm._v(\" \"+_vm._s(group.title)+\" \"),_c('i',{staticClass:\"icon-up-thin\"})])])})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport { Component, Vue } from 'vue-property-decorator'\nimport TimeframeInput from '@/components/chart/TimeframeInput.vue'\nimport { getTimeframeForHuman } from '@/utils/helpers'\n\n@Component({\n  name: 'TimeframeDropdown',\n  components: {\n    TimeframeInput\n  },\n  props: {\n    paneId: {\n      type: String,\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  editing = false\n  typeaheadTimeframe = null\n\n  get timeframes() {\n    return this.$store.state.settings.timeframes\n  }\n\n  get favoriteTimeframes() {\n    return this.$store.state.settings.favoriteTimeframes\n  }\n\n  get timeframeGroups() {\n    return this.$store.state.settings.timeframeGroups\n  }\n\n  created() {\n    console.log('create timeframe dropdown')\n  }\n\n  mounted() {\n    console.log('mount timeframe dropdown')\n  }\n\n  get groups() {\n    console.log('get timeframe sections')\n    const units = ['seconds', 'minutes', 'hours', 'ticks']\n    let unit = -1\n    const minute = 60\n    const hour = minute * 60\n    const day = hour * 24\n\n    const typeahead = this.typeaheadTimeframe\n\n    return this.timeframes\n      .sort((a, b) => {\n        const x = a.value && a.value[a.value.length - 1] === 't'\n        const y = b.value && b.value[b.value.length - 1] === 't'\n        let order = x === y ? 0 : x ? 100000 : -100000\n\n        order += parseFloat(a.value) - parseFloat(b.value)\n        return order\n      })\n      .reduce((acc, timeframe) => {\n        if (\n          typeahead &&\n          typeahead.value != timeframe.value &&\n          timeframe.label.indexOf(typeahead.label) === -1\n        ) {\n          return acc\n        }\n\n        let currentUnit\n        if (+timeframe.value < minute) {\n          currentUnit = 0\n        } else if (+timeframe.value < hour) {\n          currentUnit = 1\n        } else if (+timeframe.value <= day) {\n          currentUnit = 2\n        } else {\n          currentUnit = 3\n        }\n\n        if (currentUnit > unit) {\n          acc.push({\n            title: units[currentUnit],\n            timeframes: []\n          })\n\n          unit = currentUnit\n        }\n\n        acc[acc.length - 1].timeframes.push(timeframe)\n\n        return acc\n      }, [])\n  }\n\n  toggleGroup(group) {\n    this.$store.commit('settings/TOGGLE_TIMEFRAME_GROUP', group.title)\n  }\n\n  toggleFavoriteTimeframe(timeframe) {\n    this.$store.commit('settings/TOGGLE_FAVORITE_TIMEFRAME', timeframe)\n  }\n\n  addTimeframe(value) {\n    if (!value) {\n      return\n    }\n\n    this.$store.commit(this.paneId + '/SET_TIMEFRAME', value)\n\n    if (!this.timeframes.find(timeframe => timeframe.value == value)) {\n      this.$store.commit('settings/ADD_TIMEFRAME', value)\n\n      this.$store.dispatch('app/showNotice', {\n        title: `Added timeframe ${getTimeframeForHuman(value)} to the list !`\n      })\n    }\n  }\n\n  removeTimeframe(value) {\n    this.$store.commit('settings/REMOVE_TIMEFRAME', value)\n  }\n\n  toggleEdit() {\n    this.editing = !this.editing\n  }\n\n  async onInput(event) {\n    this.typeaheadTimeframe = event\n\n    await this.$nextTick()\n\n    const groupsIds = Object.keys(this.groups)\n\n    if (\n      groupsIds.length === 1 &&\n      this.timeframeGroups.indexOf(this.groups[groupsIds[0]].title) === -1\n    ) {\n      this.toggleGroup(this.groups[groupsIds[0]])\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimeframeDropdown.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TimeframeDropdown.vue?vue&type=template&id=0d62332e&scoped=true&\"\nimport script from \"./TimeframeDropdown.vue?vue&type=script&lang=ts&\"\nexport * from \"./TimeframeDropdown.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./TimeframeDropdown.vue?vue&type=style&index=0&id=0d62332e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d62332e\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"chart-overlay__panel indicators-overlay\"},[(_vm.value)?_c('div',{staticClass:\"chart-overlay__content\"},[_c('dropdown',{model:{value:(_vm.dropdownTrigger),callback:function ($$v) {_vm.dropdownTrigger=$$v},expression:\"dropdownTrigger\"}},[_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.editIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-edit\"}),_c('span',[_vm._v(\"Edit\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.resizeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-resize-height\"}),_c('span',[_vm._v(\"Resize\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.duplicateIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.downloadIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-download\"}),_c('span',[_vm._v(\"Download\")])]),_c('div',{staticClass:\"dropdown-divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.removeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])]),_vm._l((_vm.indicators),function(indicator,id){return _c('IndicatorControl',{key:id,attrs:{\"indicator-id\":id,\"pane-id\":_vm.paneId},on:{\"action\":_vm.onClickIndicator}})})],2):_vm._e(),_c('div',{staticClass:\"chart-overlay__title pane-overlay\",on:{\"click\":_vm.toggleOverlay}},[_c('span',[_vm._v(\"Indicators\")]),_c('button',{staticClass:\"btn badge -outline\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.addIndicator.apply(null, arguments)}}},[_vm._v(\" Add \"),_c('i',{staticClass:\"icon-plus -small ml4\"})]),_c('i',{staticClass:\"icon-up-thin\"})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"indicator\",class:{ '-error': !!_vm.error, '-disabled': !_vm.visible }},[_c('button',{staticClass:\"indicator__name pane-overlay\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.onClick}},[_vm._v(\" \"+_vm._s(_vm.name)+\" \")]),_c('div',{staticClass:\"indicator__controls\"},[_c('button',{staticClass:\"btn\",attrs:{\"title\":_vm.visible ? 'Hide' : 'Show'},on:{\"click\":_vm.toggleVisibility}},[_c('i',{class:{ 'icon-visible': !_vm.visible, 'icon-hidden': _vm.visible }})]),_c('button',{staticClass:\"btn\",attrs:{\"title\":\"Menu\"},on:{\"click\":function($event){return _vm.$emit('action', { indicatorId: _vm.indicatorId, actionName: 'menu', event: $event })}}},[_c('i',{staticClass:\"icon-more\"})])]),_c('div',{staticClass:\"indicator__legend pane-overlay\",attrs:{\"id\":_vm.paneId + _vm.indicator.id}}),(_vm.error)?_c('div',[_c('i',{staticClass:\"icon-warning ml4 mr8\"}),_vm._v(\" \"+_vm._s(_vm.error)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  name: 'IndicatorControl',\n  props: {\n    paneId: {\n      required: true\n    },\n    indicatorId: {\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  private indicatorId: string\n\n  get indicator() {\n    return this.$store.state[this.paneId].indicators[this.indicatorId]\n  }\n  get showLegend() {\n    return this.$store.state[this.paneId].showLegend\n  }\n\n  get name() {\n    if (this.indicator.displayName) {\n      return this.indicator.displayName\n    } else if (this.indicator.name) {\n      return this.indicator.name\n    } else {\n      return this.indicatorId\n    }\n  }\n\n  get visible() {\n    return !this.indicator.options ||\n      typeof this.indicator.options.visible === 'undefined'\n      ? true\n      : this.indicator.options.visible\n  }\n\n  get error() {\n    return this.$store.state[this.paneId].indicatorsErrors[this.indicatorId]\n  }\n\n  onClick(event) {\n    if (event.shiftKey) {\n      this.$emit('action', {\n        actionName: 'resize',\n        indicatorId: this.indicatorId\n      })\n\n      return\n    }\n\n    this.$emit('action', { indicatorId: this.indicatorId })\n  }\n\n  toggleVisibility() {\n    this.$nextTick(() => {\n      this.$store.dispatch(\n        this.paneId + '/toggleSerieVisibility',\n        this.indicatorId\n      )\n    })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorControl.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IndicatorControl.vue?vue&type=template&id=1bc47e00&scoped=true&\"\nimport script from \"./IndicatorControl.vue?vue&type=script&lang=ts&\"\nexport * from \"./IndicatorControl.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./IndicatorControl.vue?vue&type=style&index=0&id=1bc47e00&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1bc47e00\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Dialog',{staticClass:\"-auto\",on:{\"clickOutside\":_vm.close},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"Add indicator\")]),_c('div',{staticClass:\"column -center\"})]},proxy:true}])},[_c('div',{staticClass:\"d-flex mobile-dir-col-desktop-dir-row\"},[(_vm.indicators.length)?[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(\"Choose from existing indicator\")]),_c('div',{staticClass:\"d-flex mb8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.query),expression:\"query\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"search\"},domProps:{\"value\":(_vm.query)},on:{\"input\":function($event){if($event.target.composing)return;_vm.query=$event.target.value}}}),_c('div',{staticClass:\"-center text-muted ml16\",domProps:{\"textContent\":_vm._s(_vm.indicators.length)}})]),(_vm.filteredIndicators.length)?_c('table',{staticClass:\"table\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Name\")]),_c('th',{staticClass:\"min-768\"},[_vm._v(\"Description\")]),_c('th')])]),_c('tbody',_vm._l((_vm.filteredIndicators),function(indicator){return _c('tr',{key:indicator.id,staticClass:\"-action\",on:{\"click\":function($event){return _vm.selectIndicator(indicator)}}},[_c('td',{staticClass:\"table-input\"},[_vm._v(\" \"+_vm._s((indicator.displayName || indicator.name).replace( /\\{[\\w_]+\\}/g, '' ))+\" \")]),_c('td',{staticClass:\"min-768 table-input\"},[_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(indicator.description))])]),_c('td',{staticClass:\"table-action -hover\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleDropdown($event, indicator)}}},[_c('button',{staticClass:\"btn -text -small\"},[_c('i',{staticClass:\"icon-more\"})])])])}),0)]):_vm._e()]),_c('hr',{staticClass:\"-single -horizontal\"}),_c('hr',{staticClass:\"-single -vertical\"})]:_vm._e(),_c('div',{staticClass:\"-unshrinkable\"},[_c('div',{staticClass:\"form-group mb16\"},[_c('label',[_vm._v(\"Import indicator\")]),_c('button',{staticClass:\"btn -blue -large -cases w-100 -file\"},[_c('i',{staticClass:\"icon-upload mr8\"}),_vm._v(\" Browse \"),_c('input',{attrs:{\"type\":\"file\"},on:{\"change\":_vm.handleFile}})]),_c('div',{staticClass:\"divider -horizontal\",staticStyle:{\"display\":\"flex\"}},[_vm._v(\"Or\")]),_c('label',[_vm._v(\"Create blank indicator\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.name),expression:\"name\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Name it\"},domProps:{\"value\":(_vm.name)},on:{\"input\":function($event){if($event.target.composing)return;_vm.name=$event.target.value}}})]),_c('div',{staticClass:\"form-group mb16\"},[_c('label',[_vm._v(\"Scale with\")]),_c('dropdown-button',{staticClass:\"-outline form-control -arrow\",attrs:{\"options\":_vm.availableScales,\"placeholder\":\"Default scale\"},on:{\"input\":function($event){return _vm.setPriceScaleId($event)}},model:{value:(_vm.priceScaleId),callback:function ($$v) {_vm.priceScaleId=$$v},expression:\"priceScaleId\"}})],1),_c('div',{staticClass:\"text-right\"},[_c('button',{staticClass:\"btn -large -green ml16\",on:{\"click\":function($event){return _vm.createIndicator()}}},[_vm._v(\" Start coding \"),_c('i',{staticClass:\"icon-plus ml8\"})])])])],2),_c('dropdown',{model:{value:(_vm.dropdownTrigger),callback:function ($$v) {_vm.dropdownTrigger=$$v},expression:\"dropdownTrigger\"}},[_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.selectIndicator()}}},[_c('i',{staticClass:\"icon-plus\"}),_c('span',[_vm._v(\"Add to chart\")])]),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.duplicateIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-copy-paste\"}),_c('span',[_vm._v(\"Duplicate\")])]),_c('div',{staticClass:\"dropdown-divider\"}),_c('button',{staticClass:\"dropdown-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.removeIndicator(_vm.selectedIndicator)}}},[_c('i',{staticClass:\"icon-trash\"}),_c('span',[_vm._v(\"Remove\")])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Dialog @clickOutside=\"close\" class=\"-auto\">\n    <template v-slot:header>\n      <div class=\"title\">Add indicator</div>\n      <div class=\"column -center\"></div>\n    </template>\n    <div class=\"d-flex mobile-dir-col-desktop-dir-row\">\n      <template v-if=\"indicators.length\">\n        <div class=\"form-group\">\n          <label>Choose from existing indicator</label>\n          <div class=\"d-flex mb8\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"search\"\n              v-model=\"query\"\n            />\n            <div\n              v-text=\"indicators.length\"\n              class=\"-center text-muted ml16\"\n            ></div>\n          </div>\n          <table v-if=\"filteredIndicators.length\" class=\"table\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th class=\"min-768\">Description</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"indicator of filteredIndicators\"\n                :key=\"indicator.id\"\n                @click=\"selectIndicator(indicator)\"\n                class=\"-action\"\n              >\n                <td class=\"table-input\">\n                  {{\n                    (indicator.displayName || indicator.name).replace(\n                      /\\{[\\w_]+\\}/g,\n                      ''\n                    )\n                  }}\n                </td>\n                <td class=\"min-768 table-input\">\n                  <span class=\"text-muted\">{{ indicator.description }}</span>\n                </td>\n                <td\n                  class=\"table-action -hover\"\n                  @click.stop=\"toggleDropdown($event, indicator)\"\n                >\n                  <button class=\"btn -text -small\">\n                    <i class=\"icon-more\"></i>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <hr class=\"-single -horizontal\" />\n        <hr class=\"-single -vertical\" />\n      </template>\n      <div class=\"-unshrinkable\">\n        <div class=\"form-group mb16\">\n          <label>Import indicator</label>\n          <button class=\"btn -blue -large -cases w-100 -file\">\n            <i class=\"icon-upload mr8\"></i> Browse\n            <input type=\"file\" @change=\"handleFile\" />\n          </button>\n          <div class=\"divider -horizontal\" style=\"display: flex\">Or</div>\n          <label>Create blank indicator</label>\n          <input class=\"form-control\" v-model=\"name\" placeholder=\"Name it\" />\n        </div>\n        <div class=\"form-group mb16\">\n          <label>Scale with</label>\n          <dropdown-button\n            v-model=\"priceScaleId\"\n            :options=\"availableScales\"\n            placeholder=\"Default scale\"\n            class=\"-outline form-control -arrow\"\n            @input=\"setPriceScaleId($event)\"\n          ></dropdown-button>\n        </div>\n        <div class=\"text-right\">\n          <button class=\"btn -large -green ml16\" @click=\"createIndicator()\">\n            Start coding <i class=\"icon-plus ml8\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <dropdown v-model=\"dropdownTrigger\">\n      <button type=\"button\" class=\"dropdown-item\" @click=\"selectIndicator()\">\n        <i class=\"icon-plus\"></i>\n        <span>Add to chart</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"dropdown-item\"\n        @click=\"duplicateIndicator(selectedIndicator)\"\n      >\n        <i class=\"icon-copy-paste\"></i>\n        <span>Duplicate</span>\n      </button>\n      <div class=\"dropdown-divider\"></div>\n      <button\n        type=\"button\"\n        class=\"dropdown-item\"\n        @click=\"removeIndicator(selectedIndicator)\"\n      >\n        <i class=\"icon-trash\"></i>\n        <span>Remove</span>\n      </button>\n    </dropdown>\n  </Dialog>\n</template>\n\n<script>\nimport { slugify, uniqueName } from '@/utils/helpers'\nimport Dialog from '@/components/framework/Dialog.vue'\nimport DropdownButton from '@/components/framework/DropdownButton.vue'\nimport DialogMixin from '@/mixins/dialogMixin'\nimport dialogService from '@/services/dialogService'\nimport workspacesService from '@/services/workspacesService'\nimport importService from '@/services/importService'\n\nexport default {\n  mixins: [DialogMixin],\n  components: {\n    Dialog,\n    DropdownButton\n  },\n  props: {\n    paneId: {\n      type: String,\n      required: true\n    }\n  },\n  data: () => ({\n    name: '',\n    priceScaleId: 'right',\n    query: '',\n    indicators: [],\n    selectedIndicator: null,\n    dropdownTrigger: null\n  }),\n  computed: {\n    indicatorId: function() {\n      return uniqueName(\n        slugify(this.name),\n        this.indicators.map(i => i.id)\n      )\n    },\n    queryFilter: function() {\n      return new RegExp(this.query.replace(/\\W/, '.*'), 'i')\n    },\n    filteredIndicators: function() {\n      return this.indicators.filter(\n        a =>\n          this.queryFilter.test(a.name) || this.queryFilter.test(a.displayName)\n      )\n    },\n    availableScales: function() {\n      return this.indicators\n        .map(s => s.options && s.options.priceScaleId)\n        .reduce(\n          (scales, priceScaleId) => {\n            if (!priceScaleId || scales[priceScaleId]) {\n              return scales\n            }\n\n            scales[priceScaleId] = priceScaleId\n            return scales\n          },\n          {\n            '': 'Own scale',\n            right: 'Main scale (right)'\n          }\n        )\n    }\n  },\n  async created() {\n    await this.getIndicators()\n  },\n  beforeDestroy() {\n    if (this.editor) {\n      this.editor.destroy()\n    }\n  },\n  methods: {\n    async getIndicators() {\n      this.indicators = (await workspacesService.getIndicators()).sort(\n        (a, b) => (b.uses || 0) - (a.uses || 0)\n      )\n    },\n    async handleFile(event) {\n      try {\n        const preset = await importService.getJSON(event.target.files[0])\n\n        if (!preset.data) {\n          throw new Error('indicator is empty')\n        }\n\n        if (preset.type !== 'indicator') {\n          throw new Error('not an indicator')\n        }\n\n        this.createIndicator({\n          name: preset.name\n            .split(':')\n            .slice(1)\n            .join(':'),\n          script: preset.data.script || '',\n          options: preset.data.options || {}\n        })\n      } catch (error) {\n        this.$store.dispatch('app/showNotice', {\n          title: error.message,\n          type: 'error'\n        })\n      }\n    },\n    async createIndicator(indicator) {\n      if (!indicator) {\n        indicator = {}\n      }\n\n      if (indicator.name) {\n        this.name = indicator.name\n      } else if (!this.name) {\n        this.name = 'Untitled'\n      }\n\n      indicator.id = this.indicatorId\n      indicator.name = this.name\n\n      if (!indicator.priceScaleId) {\n        const slug = slugify(indicator.name)\n\n        indicator.priceScaleId = this.priceScaleId || slug\n      }\n\n      this.$store.dispatch(this.paneId + '/addIndicator', indicator)\n\n      dialogService.openIndicator(this.paneId, indicator.id)\n\n      this.close(null)\n    },\n    selectIndicator(indicator = this.selectedIndicator) {\n      workspacesService.incrementIndicatorUsage(indicator.id)\n\n      this.$store.dispatch(this.paneId + '/addIndicator', indicator)\n      this.close(null)\n    },\n    async removeIndicator(indicator = this.selectedIndicator) {\n      if (\n        await dialogService.confirm(`Delete indicator \"${indicator.name}\" ?`)\n      ) {\n        workspacesService.deleteIndicator(indicator.id)\n\n        this.indicators.splice(this.indicators.indexOf(indicator), 1)\n      }\n    },\n    async duplicateIndicator(indicator = this.selectedIndicator) {\n      this.$store.dispatch(this.paneId + '/duplicateIndicator', {\n        paneId: this.paneId,\n        indicatorId: indicator.id\n      })\n    },\n    toggleDropdown(event, indicator) {\n      if (\n        event &&\n        (!this.dropdownTrigger || this.selectedIndicator !== indicator)\n      ) {\n        this.dropdownTrigger = event.currentTarget\n        this.selectedIndicator = indicator\n      } else {\n        this.dropdownTrigger = null\n        this.selectedIndicator = null\n      }\n    },\n    setPriceScaleId(id) {\n      this.priceScaleId = id\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateIndicatorDialog.vue?vue&type=template&id=6f134462&\"\nimport script from \"./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateIndicatorDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\nimport { ChartPaneState } from '../../store/panesSettings/chart'\n\nimport dialogService from '../../services/dialogService'\n\nimport IndicatorControl from '@/components/chart/IndicatorControl.vue'\nimport CreateIndicatorDialog from '@/components/chart/CreateIndicatorDialog.vue'\n\n@Component({\n  name: 'IndicatorsOverlay',\n  components: {\n    IndicatorControl\n  },\n  props: {\n    paneId: {\n      type: String\n    },\n    value: {\n      type: Boolean,\n      required: true\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  private value: boolean\n\n  dropdownTrigger = null\n  selectedIndicator = null\n\n  get indicators() {\n    return (this.$store.state[this.paneId] as ChartPaneState).indicators\n  }\n\n  get ids() {\n    return Object.values(this.indicators).map(a => a.id)\n  }\n\n  $refs!: {\n    indicatorDropdown: any\n  }\n\n  toggleOverlay() {\n    this.$emit('input', !this.value)\n  }\n\n  toggleDropdown(event?: Event, id?: string) {\n    if (event && (!this.dropdownTrigger || this.selectedIndicator !== id)) {\n      this.dropdownTrigger = event.currentTarget\n      this.selectedIndicator = id\n    } else {\n      this.dropdownTrigger = null\n      this.selectedIndicator = null\n    }\n  }\n\n  async editIndicator(indicatorId: string) {\n    dialogService.open(\n      (await import('@/components/chart/IndicatorDialog.vue')).default,\n      { paneId: this.paneId, indicatorId: indicatorId },\n      'indicator'\n    )\n    this.dropdownTrigger = null\n  }\n\n  removeIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/removeIndicator', { id: indicatorId })\n  }\n\n  resizeIndicator(indicatorId: string) {\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING', indicatorId)\n  }\n\n  duplicateIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/duplicateIndicator', indicatorId)\n  }\n\n  downloadIndicator(indicatorId: string) {\n    this.$store.dispatch(this.paneId + '/downloadIndicator', indicatorId)\n  }\n\n  addIndicator() {\n    dialogService.open(CreateIndicatorDialog, { paneId: this.paneId })\n  }\n\n  onClickIndicator({\n    indicatorId,\n    actionName,\n    event\n  }: {\n    indicatorId: string\n    actionName?: string\n    event?: Event\n  }) {\n    switch (actionName) {\n      case 'menu':\n        return this.toggleDropdown(event, indicatorId)\n      case 'remove':\n        return this.removeIndicator(indicatorId)\n      case 'resize':\n        return this.resizeIndicator(indicatorId)\n    }\n\n    return this.editIndicator(indicatorId)\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IndicatorsOverlay.vue?vue&type=template&id=4463ad8b&scoped=true&\"\nimport script from \"./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"\nexport * from \"./IndicatorsOverlay.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./IndicatorsOverlay.vue?vue&type=style&index=0&id=4463ad8b&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4463ad8b\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"chart-overlay__panel markets-overlay\"},[(_vm.showOverlay)?_c('div',{staticClass:\"chart-overlay__content pane-overlay\"},[_c('div',{staticClass:\"column\"},[_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('perp')}}},[_vm._v(\"perp\")]),_c('i',{staticClass:\"pipe -center\"},[_vm._v(\"|\")]),_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('spot')}}},[_vm._v(\"spot\")]),_c('i',{staticClass:\"pipe -center\"},[_vm._v(\"|\")]),_c('a',{staticClass:\"btn -text\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.toggleMarkets('all')}}},[_vm._v(\"all\")])]),_c('div',{staticClass:\"mx8 mt0\"},_vm._l((_vm.markets),function(market){return _c('div',{key:market,on:{\"click\":function($event){return _vm.toggleMarket($event, market)}}},[_c('label',{staticClass:\"checkbox-control -extra-small mb4\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":!_vm.hiddenMarkets[market]},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();}}}),_c('div'),_c('span',[_vm._v(_vm._s(market))])])])}),0)]):_vm._e(),_c('div',{staticClass:\"chart-overlay__title pane-overlay\",on:{\"click\":function($event){_vm.showOverlay = !_vm.showOverlay}}},[_c('div',[_vm._v(\"Sources\")]),_c('button',{staticClass:\"btn badge -outline\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.searchMarkets}},[_c('span',{staticClass:\"mr4\"},[_vm._v(\" \"+_vm._s(_vm.visibleMarkets)+\" \")]),_vm._v(\"| \"),_c('span',[_vm._v(\" Add\")]),_c('i',{staticClass:\"icon-plus -small ml4\"})]),_c('i',{staticClass:\"icon-up-thin\"})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  name: 'MarketsOverlay',\n  props: {\n    paneId: {\n      type: String\n    }\n  }\n})\nexport default class extends Vue {\n  private paneId: string\n  showOverlay = false\n\n  get markets() {\n    return this.$store.state.panes.panes[this.paneId].markets\n  }\n\n  get hiddenMarkets() {\n    return this.$store.state[this.paneId].hiddenMarkets\n  }\n\n  get visibleMarkets() {\n    return this.markets.filter(a => !this.hiddenMarkets[a]).length\n  }\n\n  searchMarkets(event) {\n    this.$store.dispatch('app/showSearch', this.paneId)\n    event.stopPropagation()\n  }\n\n  toggleMarket(event, id) {\n    this.$store.dispatch(this.paneId + '/toggleMarkets', {\n      id,\n      inverse: event.shiftKey\n    })\n  }\n\n  toggleMarkets(type) {\n    this.$store.dispatch(this.paneId + '/toggleMarkets', { type })\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarketsOverlay.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MarketsOverlay.vue?vue&type=template&id=fd44c7e2&\"\nimport script from \"./MarketsOverlay.vue?vue&type=script&lang=ts&\"\nexport * from \"./MarketsOverlay.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MarketsOverlay.vue?vue&type=style&index=0&id=fd44c7e2&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\nimport { Component, Mixins } from 'vue-property-decorator'\r\n\r\nimport ChartController, { TimeRange } from './chart'\r\n\r\nimport {\r\n  formatBytes,\r\n  openBase64InNewTab,\r\n  getTimeframeForHuman,\r\n  floorTimestampToTimeframe\r\n} from '@/utils/helpers'\r\nimport { formatPrice, formatAmount } from '@/services/productsService'\r\nimport { defaultChartOptions, getChartCustomColorsOptions } from './options'\r\nimport { ChartPaneState } from '@/store/panesSettings/chart'\r\nimport { getColorLuminance, joinRgba, splitColorCode } from '@/utils/colors'\r\nimport { Chunk } from './cache'\r\nimport { isTouchSupported, getEventOffset } from '@/utils/touchevent'\r\nimport { MarketAlert, Trade } from '@/types/types'\r\n\r\nimport aggregatorService from '@/services/aggregatorService'\r\nimport historicalService, {\r\n  HistoricalResponse\r\n} from '@/services/historicalService'\r\nimport dialogService from '@/services/dialogService'\r\nimport workspacesService from '@/services/workspacesService'\r\nimport alertService from '@/services/alertService'\r\n\r\nimport PaneMixin from '@/mixins/paneMixin'\r\nimport PaneHeader from '@/components/panes/PaneHeader.vue'\r\nimport ChartLayout from '@/components/chart/Layout.vue'\r\nimport TimeframeDropdown from '@/components/chart/TimeframeDropdown.vue'\r\nimport IndicatorsOverlay from '@/components/chart/IndicatorsOverlay.vue'\r\nimport MarketsOverlay from '@/components/chart/MarketsOverlay.vue'\r\n\r\n@Component({\r\n  name: 'Chart',\r\n  components: {\r\n    ChartLayout,\r\n    PaneHeader,\r\n    TimeframeDropdown,\r\n    IndicatorsOverlay,\r\n    MarketsOverlay\r\n  }\r\n})\r\nexport default class extends Mixins(PaneMixin) {\r\n  axis = [null, null]\r\n\r\n  showIndicatorsOverlay = false\r\n  timeframeDropdownTrigger = null\r\n\r\n  private _timeToRecycle: number\r\n  private _recycleTimeout: number\r\n  private _onPanTimeout: number\r\n  private _chartController: ChartController\r\n  private _legendElements: { [id: string]: HTMLElement }\r\n  private _lastCrosshairCoordinates: number\r\n  private _reachedEnd: boolean\r\n  private _loading: boolean\r\n  private _levelDragMoveHandler: any\r\n  private _levelDragEndHandler: any\r\n\r\n  get layouting() {\r\n    this.updateChartAxis()\r\n    return (this.$store.state[this.paneId] as ChartPaneState).layouting\r\n  }\r\n\r\n  get showLegend() {\r\n    return (this.$store.state[this.paneId] as ChartPaneState).showLegend\r\n  }\r\n\r\n  get favoriteTimeframes() {\r\n    return this.$store.state.settings.favoriteTimeframes\r\n  }\r\n\r\n  get timeframe() {\r\n    return this.$store.state[this.paneId].timeframe\r\n  }\r\n\r\n  get timeframeForHuman() {\r\n    if (!this.timeframe) {\r\n      return 'ERR'\r\n    }\r\n\r\n    return getTimeframeForHuman(this.timeframe)\r\n  }\r\n\r\n  get alerts() {\r\n    return this.$store.state[this.paneId].alerts\r\n  }\r\n\r\n  $refs!: {\r\n    chartContainer: HTMLElement\r\n  }\r\n\r\n  created() {\r\n    this._chartController = new ChartController(this.paneId)\r\n\r\n    this._legendElements = {}\r\n\r\n    this._onStoreMutation = this.$store.subscribe(mutation => {\r\n      switch (mutation.type) {\r\n        case 'settings/SET_TEXT_COLOR':\r\n          this._chartController.chartInstance.applyOptions(\r\n            getChartCustomColorsOptions(mutation.payload)\r\n          )\r\n          break\r\n        case 'settings/SET_CHART_THEME':\r\n          this._chartController.chartInstance.applyOptions(\r\n            getChartCustomColorsOptions()\r\n          )\r\n          break\r\n        case 'settings/TOGGLE_NORMAMIZE_WATERMARKS':\r\n          this._chartController.refreshMarkets()\r\n          break\r\n        case 'settings/SET_TIMEZONE_OFFSET':\r\n          this._chartController.setTimezoneOffset(\r\n            this.$store.state.settings.timezoneOffset\r\n          )\r\n          this._chartController.clearChart()\r\n          this._chartController.renderAll()\r\n          break\r\n        case 'panes/SET_PANE_MARKETS':\r\n          if (mutation.payload.id === this.paneId) {\r\n            ;(this.$store.state[\r\n              this.paneId\r\n            ] as ChartPaneState).hiddenMarkets = {}\r\n            this._chartController.refreshMarkets()\r\n\r\n            this.clear()\r\n            this.fetch()\r\n          }\r\n          break\r\n        case 'panes/SET_PANE_ZOOM':\r\n          if (mutation.payload.id === this.paneId) {\r\n            this._chartController.updateFontSize()\r\n          }\r\n\r\n          this.updateChartAxis()\r\n          break\r\n        case this.paneId + '/SET_TIMEFRAME':\r\n          this.setTimeframe(mutation.payload)\r\n          break\r\n        case 'settings/TOGGLE_ALERTS':\r\n        case 'app/EXCHANGE_UPDATED':\r\n        case this.paneId + '/TOGGLE_MARKET':\r\n          this._chartController.refreshMarkets()\r\n          this._chartController.renderAll()\r\n          break\r\n        case this.paneId + '/SET_REFRESH_RATE':\r\n          this._chartController.clearQueue()\r\n          this._chartController.setupQueue()\r\n          break\r\n        case this.paneId + '/TOGGLE_LEGEND':\r\n          if (this.showLegend) {\r\n            this.bindLegend()\r\n          } else {\r\n            this.unbindLegend()\r\n          }\r\n          break\r\n        case this.paneId + '/SET_GRIDLINES':\r\n          this.updateGridlines(mutation.payload.type)\r\n          break\r\n        case this.paneId + '/SET_WATERMARK':\r\n        case this.paneId + '/TOGGLE_NORMAMIZE_WATERMARKS':\r\n          this._chartController.updateWatermark()\r\n          break\r\n        case this.paneId + '/SET_INDICATOR_OPTION':\r\n          this._chartController.setIndicatorOption(\r\n            mutation.payload.id,\r\n            mutation.payload.key,\r\n            mutation.payload.value,\r\n            mutation.payload.silent\r\n          )\r\n          break\r\n        case this.paneId + '/SET_PRICE_SCALE':\r\n          if (mutation.payload.priceScale) {\r\n            this._chartController.refreshPriceScale(mutation.payload.id)\r\n          }\r\n          break\r\n        case this.paneId + '/SET_INDICATOR_SCRIPT':\r\n          this._chartController.rebuildIndicator(mutation.payload.id)\r\n          break\r\n        case this.paneId + '/ADD_INDICATOR':\r\n          if (this._chartController.addIndicator(mutation.payload.id)) {\r\n            this._chartController.redrawIndicator(mutation.payload.id)\r\n            this.bindLegend(mutation.payload.id)\r\n          }\r\n\r\n          break\r\n        case this.paneId + '/REMOVE_INDICATOR':\r\n          this.unbindLegend(mutation.payload)\r\n          this._chartController.removeIndicator(mutation.payload)\r\n          break\r\n        case this.paneId + '/TOGGLE_FILL_GAPS_WITH_EMPTY':\r\n          this._chartController.toggleFillGapsWithEmpty()\r\n          break\r\n        case this.paneId + '/TOGGLE_FORCE_NORMALIZE_PRICE':\r\n          this._chartController.propagateInitialPrices = (this.$store.state[\r\n            this.paneId\r\n          ] as ChartPaneState).forceNormalizePrice\r\n          this.clear()\r\n          this.fetch()\r\n          break\r\n        case 'settings/TOGGLE_AUTO_HIDE_HEADERS':\r\n          this.refreshChartDimensions()\r\n          break\r\n      }\r\n    })\r\n  }\r\n\r\n  mounted() {\r\n    this.showIndicatorsOverlay = this.$parent.$el.clientHeight > 420\r\n\r\n    this.createChart()\r\n  }\r\n\r\n  async createChart() {\r\n    await this.$nextTick()\r\n\r\n    this._chartController.createChart(this.$refs.chartContainer)\r\n\r\n    await this.$nextTick()\r\n\r\n    this.bindChartEvents()\r\n    this.setupRecycle()\r\n\r\n    this.fetch()\r\n\r\n    this._chartController.setupQueue()\r\n  }\r\n\r\n  destroyChart() {\r\n    this.unbindChartEvents()\r\n\r\n    this._chartController.destroy()\r\n\r\n    clearTimeout(this._recycleTimeout)\r\n  }\r\n\r\n  beforeDestroy() {\r\n    this.destroyChart()\r\n  }\r\n\r\n  /**\r\n   * fetch whatever is missing based on visiblerange\r\n   * @param {TimeRange} range range to fetch\r\n   */\r\n  fetch(range?: TimeRange) {\r\n    if (!range) {\r\n      this._reachedEnd = false\r\n    }\r\n    const alreadyHasData =\r\n      this._chartController.chartCache.cacheRange &&\r\n      this._chartController.chartCache.cacheRange.from\r\n\r\n    const historicalMarkets = historicalService.filterOutUnavailableMarkets(\r\n      this.$store.state.panes.panes[this.paneId].markets\r\n    )\r\n\r\n    if (!historicalMarkets.length) {\r\n      return\r\n    }\r\n\r\n    const timeframe = +(this.$store.state[this.paneId] as ChartPaneState)\r\n      .timeframe\r\n\r\n    if (!timeframe) {\r\n      this._reachedEnd = true\r\n      return\r\n    }\r\n\r\n    if (\r\n      this.$store.state.app.apiSupportedTimeframes.indexOf(\r\n        this.timeframe.toString()\r\n      ) === -1\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const visibleRange = this._chartController.getVisibleRange() as TimeRange\r\n\r\n    let rangeToFetch\r\n\r\n    if (!range) {\r\n      let rightTime\r\n\r\n      if (alreadyHasData) {\r\n        rightTime = this._chartController.chartCache.cacheRange.from\r\n      } else if (visibleRange && visibleRange.from) {\r\n        rightTime =\r\n          visibleRange.from + this.$store.state.settings.timezoneOffset / 1000\r\n      } else {\r\n        rightTime = Date.now() / 1000\r\n      }\r\n\r\n      rangeToFetch = {\r\n        from: rightTime - timeframe * 20,\r\n        to: rightTime\r\n      }\r\n    } else {\r\n      rangeToFetch = range\r\n    }\r\n\r\n    rangeToFetch.from = floorTimestampToTimeframe(\r\n      Math.round(rangeToFetch.from),\r\n      timeframe\r\n    )\r\n    rangeToFetch.to =\r\n      floorTimestampToTimeframe(Math.round(rangeToFetch.to), timeframe) +\r\n      timeframe\r\n\r\n    if (this._chartController.chartCache.cacheRange.from) {\r\n      rangeToFetch.to = Math.min(\r\n        floorTimestampToTimeframe(\r\n          this._chartController.chartCache.cacheRange.from,\r\n          timeframe\r\n        ),\r\n        rangeToFetch.to\r\n      )\r\n    }\r\n\r\n    const barsCount = Math.floor(\r\n      (rangeToFetch.to - rangeToFetch.from) / timeframe\r\n    )\r\n    const bytesPerBar = 112\r\n    const estimatedSize = formatBytes(\r\n      barsCount * historicalMarkets.length * bytesPerBar\r\n    )\r\n\r\n    this.$store.dispatch('app/showNotice', {\r\n      id: 'fetching-' + this.paneId,\r\n      timeout: 15000,\r\n      title: `Fetching ${barsCount *\r\n        historicalMarkets.length} bars (~${estimatedSize})`,\r\n      type: 'info'\r\n    })\r\n\r\n    this._loading = true\r\n\r\n    return historicalService\r\n      .fetch(\r\n        rangeToFetch.from * 1000,\r\n        rangeToFetch.to * 1000,\r\n        timeframe,\r\n        historicalMarkets\r\n      )\r\n      .then(results => this.onHistorical(results))\r\n      .catch(err => {\r\n        console.error(err)\r\n\r\n        this._reachedEnd = true\r\n      })\r\n      .then(() => {\r\n        this.$store.dispatch('app/hideNotice', 'fetching-' + this.paneId)\r\n\r\n        setTimeout(() => {\r\n          this._loading = false\r\n\r\n          this.fetchMore(\r\n            this._chartController.chartInstance\r\n              .timeScale()\r\n              .getVisibleLogicalRange()\r\n          )\r\n        }, 200)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * TV chart mousemove event\r\n   * @param{TV.MouseEventParams} param tv mousemove param\r\n   */\r\n  onCrosshair(param) {\r\n    let x\r\n\r\n    if (\r\n      param &&\r\n      param.time &&\r\n      param.point.x > 0 &&\r\n      param.point.x < this.$refs.chartContainer.clientWidth\r\n    ) {\r\n      x = param.point.x\r\n    }\r\n\r\n    if (this._lastCrosshairCoordinates === x) {\r\n      return\r\n    }\r\n\r\n    this._lastCrosshairCoordinates = x\r\n\r\n    for (let i = 0; i < this._chartController.loadedIndicators.length; i++) {\r\n      const indicator = this._chartController.loadedIndicators[i]\r\n\r\n      if (!indicator.apis.length) {\r\n        continue\r\n      }\r\n\r\n      const id = this.paneId + indicator.id\r\n\r\n      if (!this._legendElements[id]) {\r\n        continue\r\n      }\r\n\r\n      if (!x) {\r\n        continue\r\n      }\r\n\r\n      let text = ''\r\n\r\n      for (let j = 0; j < indicator.apis.length; j++) {\r\n        if (j > 10) {\r\n          break\r\n        }\r\n\r\n        const api = indicator.apis[j]\r\n\r\n        const data = param.seriesPrices.get(api)\r\n\r\n        if (text.length) {\r\n          text += '\\u00a0|\\u00a0'\r\n        }\r\n\r\n        if (!data) {\r\n          text += 'na'\r\n          continue\r\n        }\r\n\r\n        const formatFunction =\r\n          indicator.options.priceFormat &&\r\n          indicator.options.priceFormat.type === 'volume'\r\n            ? formatAmount\r\n            : formatPrice\r\n\r\n        if (typeof data === 'number') {\r\n          text += formatFunction(data, api.precision)\r\n        } else if (data.close) {\r\n          text += `O: ${formatFunction(\r\n            data.open,\r\n            api.precision\r\n          )} H: ${formatFunction(data.high, api.precision)} L: ${formatFunction(\r\n            data.low,\r\n            api.precision\r\n          )} C: ${formatFunction(data.close, api.precision)}`\r\n        }\r\n      }\r\n\r\n      this._legendElements[id].textContent = text\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the historical service response\r\n   * Split bars into chunks and add to chartCache\r\n   * Render chart once everything is done\r\n   */\r\n  onHistorical(results: HistoricalResponse) {\r\n    const chunk: Chunk = {\r\n      from: results.from,\r\n      to: results.to,\r\n      bars: results.data\r\n    }\r\n\r\n    this._chartController.chartCache.saveChunk(chunk)\r\n\r\n    if (\r\n      !(this.$store.state[this.paneId] as ChartPaneState).forceNormalizePrice\r\n    ) {\r\n      this._chartController.propagateInitialPrices = false\r\n    }\r\n\r\n    this._chartController.renderAll(true)\r\n  }\r\n\r\n  onTrades(trades: Trade[]) {\r\n    this._chartController.queueTrades(trades)\r\n  }\r\n\r\n  onAlert({ price, market }: { price: number; market: string }) {\r\n    this._chartController.triggerAlert(market, price)\r\n  }\r\n\r\n  refreshChartDimensions() {\r\n    if (!this._chartController || !this._chartController.chartInstance) {\r\n      return\r\n    }\r\n\r\n    this.$nextTick(() => {\r\n      let headerHeight = 0\r\n\r\n      if (!this.$store.state.settings.autoHideHeaders) {\r\n        headerHeight =\r\n          (this.$store.state.panes.panes[this.paneId].zoom || 1) * 2 * 16\r\n      }\r\n\r\n      this._chartController.chartInstance.resize(\r\n        this.$el.clientWidth,\r\n        this.$el.clientHeight - headerHeight\r\n      )\r\n    })\r\n  }\r\n\r\n  onPan(visibleLogicalRange) {\r\n    if (\r\n      !visibleLogicalRange ||\r\n      this._chartController.panPrevented ||\r\n      this._loading ||\r\n      /t$/.test(this.timeframe)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (this._onPanTimeout) {\r\n      clearTimeout(this._onPanTimeout)\r\n      this._onPanTimeout = null\r\n    }\r\n\r\n    this._onPanTimeout = setTimeout(() => {\r\n      this._onPanTimeout = null\r\n\r\n      if (this._chartController.chartCache.cacheRange.from === null) {\r\n        return\r\n      }\r\n\r\n      // get latest visible logical range\r\n      visibleLogicalRange = this._chartController.chartInstance\r\n        .timeScale()\r\n        .getVisibleLogicalRange()\r\n\r\n      this.savePosition(visibleLogicalRange)\r\n\r\n      this.fetchMore(visibleLogicalRange)\r\n    }, 500)\r\n  }\r\n\r\n  bindChartEvents() {\r\n    aggregatorService.on('trades', this.onTrades)\r\n    aggregatorService.on('alert', this.onAlert)\r\n\r\n    if (this.showLegend && this.showIndicatorsOverlay) {\r\n      this.bindLegend()\r\n    }\r\n\r\n    this._chartController.chartInstance\r\n      .timeScale()\r\n      .subscribeVisibleLogicalRangeChange(this.onPan)\r\n\r\n    if (process.env.VUE_APP_PUBLIC_VAPID_KEY) {\r\n      const canvas = this._chartController.chartElement.querySelector(\r\n        'canvas:nth-child(2)'\r\n      )\r\n      canvas.addEventListener(\r\n        isTouchSupported() ? 'touchstart' : 'mousedown',\r\n        this.onLevelDragStart\r\n      )\r\n    }\r\n  }\r\n\r\n  unbindChartEvents() {\r\n    aggregatorService.off('trades', this.onTrades)\r\n    aggregatorService.off('alert', this.onAlert)\r\n\r\n    this.unbindLegend()\r\n\r\n    this._chartController.chartInstance\r\n      .timeScale()\r\n      .unsubscribeVisibleLogicalRangeChange(this.onPan)\r\n\r\n    if (process.env.VUE_APP_PUBLIC_VAPID_KEY) {\r\n      const canvas = this._chartController.chartElement.querySelector(\r\n        'canvas:nth-child(2)'\r\n      )\r\n      canvas.removeEventListener(\r\n        isTouchSupported() ? 'touchstart' : 'mousedown',\r\n        this.onLevelDragStart\r\n      )\r\n    }\r\n  }\r\n\r\n  onLevelDragStart(event) {\r\n    if (\r\n      this._levelDragEndHandler ||\r\n      !this.$store.state.settings.alerts ||\r\n      event.button ||\r\n      dialogService.hasDialogOpened\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const dataAtPoint = this._chartController.getPricelineAtPoint(event)\r\n\r\n    if (!dataAtPoint || !dataAtPoint.api) {\r\n      return\r\n    }\r\n\r\n    const canvas = this._chartController.chartElement.querySelector(\r\n      'canvas:nth-child(2)'\r\n    )\r\n\r\n    if ((dataAtPoint as any).priceline) {\r\n      this._chartController.disableCrosshair()\r\n    }\r\n\r\n    this._levelDragMoveHandler = this.onLevelDragMove.bind(\r\n      this,\r\n      dataAtPoint,\r\n      Date.now()\r\n    )\r\n    canvas.addEventListener(\r\n      /touch/.test(event.type) ? 'touchmove' : 'mousemove',\r\n      this._levelDragMoveHandler\r\n    )\r\n\r\n    this._levelDragEndHandler = this.onLevelDragEnd.bind(\r\n      this,\r\n      dataAtPoint,\r\n      Date.now()\r\n    )\r\n    canvas.addEventListener(\r\n      /touch/.test(event.type) ? 'touchend' : 'mouseup',\r\n      this._levelDragEndHandler\r\n    )\r\n  }\r\n\r\n  onLevelDragMove(\r\n    { api, priceline, originalOffset, offset },\r\n    startedAt,\r\n    event\r\n  ) {\r\n    const { x, y } = getEventOffset(event)\r\n\r\n    const canMove =\r\n      Math.abs(originalOffset.y - y) > 5 || Date.now() - startedAt > 100\r\n\r\n    offset.x = x\r\n    offset.y = y\r\n\r\n    if (priceline) {\r\n      event.stopPropagation()\r\n\r\n      if (!canMove) {\r\n        return\r\n      }\r\n\r\n      const price = +formatPrice(\r\n        api.coordinateToPrice(y) as number,\r\n        api.options().priceFormat.precision\r\n      )\r\n\r\n      priceline.applyOptions({\r\n        price\r\n      })\r\n    }\r\n  }\r\n\r\n  async onLevelDragEnd(\r\n    { api, priceline, price, market, canCreate, originalOffset, offset },\r\n    startedAt,\r\n    event\r\n  ) {\r\n    const canvas = this._chartController.chartElement.querySelector(\r\n      'canvas:nth-child(2)'\r\n    )\r\n\r\n    const canMove =\r\n      Math.abs(originalOffset.y - offset.y) > 5 || Date.now() - startedAt > 200\r\n    canCreate = !priceline && canCreate && !canMove\r\n\r\n    if (priceline || canCreate) {\r\n      this._chartController.chartInstance.clearCrosshairPosition()\r\n    }\r\n\r\n    // unbind up\r\n    canvas.removeEventListener(\r\n      /touch/.test(event.type) ? 'touchend' : 'mouseup',\r\n      this._levelDragEndHandler\r\n    )\r\n    this._levelDragEndHandler = null\r\n\r\n    if (this._levelDragMoveHandler) {\r\n      // unbind move\r\n      canvas.removeEventListener(\r\n        /touch/.test(event.type) ? 'touchmove' : 'mousemove',\r\n        this._levelDragMoveHandler\r\n      )\r\n      this._levelDragMoveHandler = null\r\n    }\r\n\r\n    if (this._onPanTimeout) {\r\n      return\r\n    }\r\n\r\n    if (priceline) {\r\n      this._chartController.enableCrosshair()\r\n      const alert = this._chartController.alerts[market].find(\r\n        a => a.price === price\r\n      )\r\n      const newPrice = priceline.options().price\r\n\r\n      if (price !== newPrice && canMove) {\r\n        const active = await alertService.moveAlert(market, price, newPrice)\r\n\r\n        alert.triggered = false\r\n        alert.price = newPrice\r\n        alert.active = active\r\n\r\n        await workspacesService.saveAlerts({\r\n          market,\r\n          alerts: this._chartController.alerts[market].filter(\r\n            a => a.market === alert.market\r\n          )\r\n        })\r\n\r\n        priceline.applyOptions({\r\n          title: ''\r\n        })\r\n      } else {\r\n        api.removePriceLine(priceline)\r\n\r\n        // unregister alert from server\r\n        try {\r\n          await alertService.unsubscribe(market, price)\r\n        } catch (err) {\r\n          if (alert && alert.active) {\r\n            this.$store.dispatch('app/showNotice', {\r\n              id: 'alert-registration-failure',\r\n              title: `${err.message}\\nYou need to make sure your browser is set to allow push notifications.`,\r\n              type: 'error'\r\n            })\r\n          }\r\n        }\r\n\r\n        // save remaining active alerts for this market\r\n        const index = this._chartController.alerts[market].indexOf(alert)\r\n\r\n        if (index !== -1) {\r\n          this._chartController.alerts[market].splice(index, 1)\r\n        }\r\n\r\n        await workspacesService.saveAlerts({\r\n          market,\r\n          alerts: this._chartController.alerts[market].filter(\r\n            a => a.price !== price\r\n          )\r\n        })\r\n      }\r\n    } else if (canCreate) {\r\n      // draw line first with 50% opacity\r\n      const color = splitColorCode(this.$store.state.settings.alertsColor)\r\n      const alpha = color[3] || 1\r\n      color[3] = alpha * 0.5\r\n\r\n      let timestamp\r\n\r\n      if (!(event.ctrlKey || event.metaKey)) {\r\n        timestamp = this._chartController.chartInstance\r\n          .timeScale()\r\n          .coordinateToTime(offset.x)\r\n      }\r\n\r\n      const priceline = this._chartController.renderAlert(\r\n        {\r\n          price,\r\n          market,\r\n          timestamp\r\n        },\r\n        api,\r\n        joinRgba(color)\r\n      )\r\n\r\n      const alert: MarketAlert = {\r\n        price,\r\n        market,\r\n        timestamp,\r\n        active: false\r\n      }\r\n\r\n      this._chartController.alerts[market].push(alert)\r\n\r\n      let finalColor\r\n\r\n      // try subscribe to alert\r\n      await alertService\r\n        .subscribe(market, price)\r\n        .then(active => {\r\n          // make sure alert still exists before switching alpha / saving\r\n          if (this._chartController.alerts[market].indexOf(alert) !== -1) {\r\n            alert.active = active\r\n            const finalAlpha = active ? alpha : alpha * 0.75\r\n\r\n            // set line color to original alpha\r\n            color[3] = finalAlpha\r\n\r\n            finalColor = joinRgba(color)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.$store.dispatch('app/showNotice', {\r\n            id: 'alert-registration-failure',\r\n            title: `${err.message}\\nYou need to make sure your browser is set to allow push notifications.`,\r\n            type: 'error'\r\n          })\r\n\r\n          finalColor = this.$store.state.settings.alertsColor\r\n        })\r\n        .finally(() => {\r\n          workspacesService.saveAlerts({\r\n            market,\r\n            alerts: this._chartController.alerts[market]\r\n          })\r\n\r\n          priceline.applyOptions({\r\n            color: finalColor\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  getBarSpacing(visibleLogicalRange) {\r\n    if (!visibleLogicalRange) {\r\n      return defaultChartOptions.timeScale.barSpacing\r\n    }\r\n\r\n    const canvasWidth = this.$refs.chartContainer.querySelector('canvas').width\r\n    return (\r\n      canvasWidth /\r\n      (visibleLogicalRange.to - visibleLogicalRange.from) /\r\n      window.devicePixelRatio\r\n    )\r\n  }\r\n\r\n  savePosition(visibleLogicalRange) {\r\n    this.$store.commit(\r\n      this.paneId + '/SET_BAR_SPACING',\r\n      this.getBarSpacing(visibleLogicalRange)\r\n    )\r\n  }\r\n\r\n  setupRecycle() {\r\n    this._recycleTimeout = setTimeout(this.trimChart.bind(this), 1000 * 60 * 3)\r\n    this.setTimeToRecycle()\r\n  }\r\n\r\n  trimChart() {\r\n    if (Date.now() > this._timeToRecycle) {\r\n      const visibleRange = this._chartController.getVisibleRange() as TimeRange\r\n\r\n      let end\r\n\r\n      if (visibleRange) {\r\n        end = visibleRange.from - (visibleRange.to - visibleRange.from) * 2\r\n      }\r\n\r\n      if (this._chartController.chartCache.trim(end)) {\r\n        this.renderChart()\r\n      }\r\n\r\n      this.setTimeToRecycle()\r\n    }\r\n\r\n    const fastRefreshRate =\r\n      (this.$store.state[this.paneId] as ChartPaneState).refreshRate < 1000\r\n\r\n    if (fastRefreshRate) {\r\n      this.fixFastRefreshRate()\r\n    }\r\n\r\n    this._recycleTimeout = setTimeout(\r\n      this.trimChart,\r\n      1000 * 60 * (fastRefreshRate ? 3 : 15)\r\n    )\r\n  }\r\n\r\n  fixFastRefreshRate() {\r\n    const fontSize = this._chartController.chartInstance.options().layout\r\n      .fontSize\r\n\r\n    this._chartController.preventPan()\r\n    this._chartController.chartInstance.applyOptions({\r\n      layout: { fontSize: fontSize + 1 }\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this._chartController.chartInstance.applyOptions({\r\n        layout: { fontSize: fontSize }\r\n      })\r\n    }, 50)\r\n  }\r\n\r\n  renderChart() {\r\n    this._chartController.renderAll()\r\n  }\r\n\r\n  resetChart() {\r\n    this.destroyChart()\r\n    this.$nextTick(() => {\r\n      this.createChart()\r\n    })\r\n  }\r\n\r\n  async fetchMore(visibleLogicalRange) {\r\n    if (\r\n      this._loading ||\r\n      this._reachedEnd ||\r\n      !visibleLogicalRange ||\r\n      visibleLogicalRange.from > 0\r\n    ) {\r\n      return\r\n    }\r\n\r\n    let indicatorLength = 0\r\n\r\n    if (this._chartController.activeRenderer) {\r\n      for (const indicatorId in this._chartController.activeRenderer\r\n        .indicators) {\r\n        if (\r\n          !this._chartController.activeRenderer.indicators[indicatorId]\r\n            .minLength\r\n        ) {\r\n          continue\r\n        }\r\n        indicatorLength = Math.max(\r\n          indicatorLength,\r\n          this._chartController.activeRenderer.indicators[indicatorId].minLength\r\n        )\r\n      }\r\n    }\r\n\r\n    const barsToLoad = Math.round(\r\n      Math.min(Math.abs(visibleLogicalRange.from) + indicatorLength, 500)\r\n    )\r\n\r\n    if (!barsToLoad) {\r\n      return\r\n    }\r\n\r\n    const rangeToFetch = {\r\n      from:\r\n        this._chartController.chartCache.cacheRange.from -\r\n        barsToLoad * this.$store.state[this.paneId].timeframe,\r\n      to: this._chartController.chartCache.cacheRange.from - 1\r\n    }\r\n\r\n    await this.fetch(rangeToFetch)\r\n  }\r\n\r\n  onResize() {\r\n    this.refreshChartDimensions()\r\n  }\r\n\r\n  clear() {\r\n    this._chartController.clear()\r\n\r\n    this._reachedEnd = false\r\n  }\r\n\r\n  changeTimeframe(newTimeframe) {\r\n    if ((window.event as any).shiftKey) {\r\n      for (const id in this.$store.state.panes.panes) {\r\n        const type = this.$store.state.panes.panes[id].type\r\n        if (\r\n          type === 'chart' &&\r\n          this.$store.state[id].timeframe !== newTimeframe\r\n        ) {\r\n          this.$store.commit(id + '/SET_TIMEFRAME', newTimeframe)\r\n        }\r\n      }\r\n    } else {\r\n      this.$store.commit(this.paneId + '/SET_TIMEFRAME', newTimeframe)\r\n    }\r\n  }\r\n\r\n  setTimeframe(newTimeframe) {\r\n    const timeframe = parseInt(newTimeframe)\r\n    const type = newTimeframe[newTimeframe.length - 1] === 't' ? 'tick' : 'time'\r\n\r\n    if (\r\n      type === this._chartController.type &&\r\n      type === 'time' &&\r\n      this._chartController.timeframe < timeframe &&\r\n      this.$store.state.app.apiSupportedTimeframes.indexOf(newTimeframe) ===\r\n        -1 &&\r\n      Number.isInteger(timeframe / this._chartController.timeframe)\r\n    ) {\r\n      this._chartController.resample(newTimeframe)\r\n      this.fetchMore(\r\n        this._chartController.chartInstance.timeScale().getVisibleLogicalRange()\r\n      )\r\n    } else {\r\n      this._chartController.clear()\r\n      this.fetch()\r\n    }\r\n\r\n    this._reachedEnd = false\r\n  }\r\n\r\n  async bindLegend(indicatorId?: string) {\r\n    if (!this.showLegend) {\r\n      return\r\n    }\r\n\r\n    if (!indicatorId) {\r\n      for (const id in (this.$store.state[this.paneId] as ChartPaneState)\r\n        .indicators) {\r\n        this.bindLegend(id)\r\n      }\r\n\r\n      this._chartController.chartInstance.subscribeCrosshairMove(\r\n        this.onCrosshair\r\n      )\r\n      return\r\n    }\r\n\r\n    await this.$nextTick()\r\n\r\n    const legendId = this.paneId + indicatorId\r\n\r\n    if (this._legendElements[legendId]) {\r\n      return\r\n    }\r\n\r\n    const el = document.getElementById(legendId)\r\n\r\n    if (el) {\r\n      this._legendElements[legendId] = el\r\n    }\r\n  }\r\n\r\n  unbindLegend(indicatorId?: string) {\r\n    if (!indicatorId) {\r\n      for (const id in (this.$store.state[this.paneId] as ChartPaneState)\r\n        .indicators) {\r\n        this.unbindLegend(id)\r\n      }\r\n\r\n      this._chartController.chartInstance.unsubscribeCrosshairMove(\r\n        this.onCrosshair\r\n      )\r\n      return\r\n    }\r\n\r\n    const legendId = this.paneId + indicatorId\r\n\r\n    for (const bindedLegendId in this._legendElements) {\r\n      if (legendId === bindedLegendId) {\r\n        this._legendElements[bindedLegendId].innerText = ''\r\n        delete this._legendElements[bindedLegendId]\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  updateGridlines(type: 'vertical' | 'horizontal') {\r\n    const chartOptions = this.$store.state[this.paneId] as ChartPaneState\r\n    let show: boolean\r\n    let color: string\r\n\r\n    if (type === 'vertical') {\r\n      show = chartOptions.showVerticalGridlines\r\n      color = chartOptions.verticalGridlinesColor\r\n    } else {\r\n      show = chartOptions.showHorizontalGridlines\r\n      color = chartOptions.horizontalGridlinesColor\r\n    }\r\n\r\n    this._chartController.chartInstance.applyOptions({\r\n      grid: {\r\n        [type === 'vertical' ? 'vertLines' : 'horzLines']: {\r\n          color: color,\r\n          visible: show\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  updateWatermark() {\r\n    const chartOptions = this.$store.state[this.paneId] as ChartPaneState\r\n\r\n    this._chartController.chartInstance.applyOptions({\r\n      watermark: {\r\n        color: chartOptions.watermarkColor,\r\n        visible: chartOptions.showWatermark\r\n      }\r\n    })\r\n  }\r\n\r\n  updateChartAxis() {\r\n    if (!this.$refs.chartContainer) {\r\n      return\r\n    }\r\n\r\n    this.axis = [\r\n      this.$refs.chartContainer.querySelector(\r\n        'td:last-child canvas:nth-child(2)'\r\n      ).clientWidth,\r\n      this.$refs.chartContainer.querySelector('tr:last-child').clientHeight\r\n    ]\r\n  }\r\n\r\n  takeScreenshot() {\r\n    const chartCanvas = this._chartController.chartInstance.takeScreenshot()\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n\r\n    const zoom = this.$store.state.panes.panes[this.paneId].zoom || 1\r\n\r\n    const pxRatio = window.devicePixelRatio || 1\r\n    const textPadding = 16 * zoom * pxRatio\r\n    const textFontsize = 12 * zoom * pxRatio\r\n    canvas.width = chartCanvas.width\r\n    ctx.font = `${textFontsize}px Share Tech Mono`\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n\r\n    const lines = []\r\n    const dateString = new Date().toUTCString()\r\n\r\n    const visibleMarkets = this.$store.state.panes.panes[\r\n      this.paneId\r\n    ].markets.filter(a => !this.$store.state[this.paneId].hiddenMarkets[a])\r\n      .length\r\n\r\n    lines.push(dateString + ' | ' + this.timeframeForHuman)\r\n    lines.push(\r\n      this._chartController.watermark +\r\n        (visibleMarkets > 1 && this.$store.state.settings.normalizeWatermarks\r\n          ? ' (' + visibleMarkets + ' markets)'\r\n          : '')\r\n    )\r\n\r\n    const lineHeight = Math.round(textFontsize)\r\n    canvas.height = chartCanvas.height\r\n\r\n    const backgroundColor = this.$store.state.settings.backgroundColor\r\n    const color100 = getComputedStyle(\r\n      document.documentElement\r\n    ).getPropertyValue('--theme-color-100')\r\n\r\n    ctx.fillStyle = backgroundColor\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    ctx.fillStyle =\r\n      this.$store.state.settings.theme === 'light'\r\n        ? 'rgba(255,255,255,.2)'\r\n        : 'rgba(0,0,0,.2)'\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    ctx.drawImage(chartCanvas, 0, 0)\r\n\r\n    ctx.fillStyle = color100\r\n    ctx.font = `${textFontsize}px Share Tech Mono`\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n\r\n    let offsetY = 0\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      ctx.fillText(lines[i], textPadding, textPadding + offsetY)\r\n\r\n      offsetY += lineHeight * (i + 1)\r\n    }\r\n\r\n    const luminance = getColorLuminance(splitColorCode(backgroundColor))\r\n    const textColor = luminance < 0 ? '#ffffff' : '#000000'\r\n\r\n    if (this.showIndicatorsOverlay) {\r\n      offsetY += textPadding * 2\r\n\r\n      Object.values(\r\n        (this.$store.state[this.paneId] as ChartPaneState).indicators\r\n      ).forEach(indicator => {\r\n        const options = indicator.options as any\r\n\r\n        if (options.visible === false) {\r\n          return\r\n        }\r\n\r\n        let color = options.color || options.upColor || textColor\r\n\r\n        try {\r\n          color = splitColorCode(color)\r\n\r\n          if (typeof color[3] !== 'undefined') {\r\n            color[3] = 1\r\n          }\r\n\r\n          color = joinRgba(color)\r\n        } catch (error) {\r\n          // not rgb(a)\r\n        }\r\n\r\n        const text = indicator.displayName || indicator.name\r\n\r\n        ctx.fillStyle = backgroundColor\r\n        ctx.fillText(text, textPadding + 1, offsetY + 1)\r\n        ctx.fillText(text, textPadding - 1, offsetY - 1)\r\n        ctx.fillStyle = color\r\n        ctx.fillText(text, textPadding, offsetY)\r\n\r\n        offsetY += lineHeight * 1.2\r\n      })\r\n    }\r\n\r\n    const dataURL = canvas.toDataURL('image/png')\r\n    const startIndex = dataURL.indexOf('base64,') + 7\r\n    const b64 = dataURL.substr(startIndex)\r\n\r\n    openBase64InNewTab(b64, 'image/png')\r\n  }\r\n\r\n  toggleIndicatorOverlay() {\r\n    if (this.showIndicatorsOverlay) {\r\n      this.unbindLegend()\r\n    }\r\n\r\n    this.showIndicatorsOverlay = !this.showIndicatorsOverlay\r\n\r\n    if (this.showIndicatorsOverlay) {\r\n      this.$nextTick(() => {\r\n        this.bindLegend()\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleLayout() {\r\n    this.$store.commit(this.paneId + '/TOGGLE_LAYOUTING')\r\n  }\r\n\r\n  setTimeToRecycle() {\r\n    const now = Date.now()\r\n\r\n    if (this._chartController.type === 'time') {\r\n      const chartWidth = this.$refs.chartContainer.querySelector('canvas').width\r\n      const barSpacing = this.getBarSpacing(\r\n        this._chartController.chartInstance.timeScale().getVisibleLogicalRange()\r\n      )\r\n      this._timeToRecycle =\r\n        now +\r\n        Math.min(\r\n          1000 * 60 * 60 * 24,\r\n          (parseInt(this.timeframe) * 1000 * (chartWidth / barSpacing)) / 2\r\n        )\r\n    }\r\n\r\n    this._timeToRecycle = now + 900000\r\n  }\r\n\r\n  toggleTimeframeDropdown(event) {\r\n    if (this.timeframeDropdownTrigger) {\r\n      this.timeframeDropdownTrigger = null\r\n    } else {\r\n      this.timeframeDropdownTrigger = event.currentTarget\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--15-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Chart.vue?vue&type=template&id=4747b63b&scoped=true&\"\nimport script from \"./Chart.vue?vue&type=script&lang=ts&\"\nexport * from \"./Chart.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Chart.vue?vue&type=style&index=0&id=4747b63b&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4747b63b\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PriceScale.vue?vue&type=style&index=0&id=2cef81f0&prod&lang=scss&\""],"sourceRoot":""}